@model OtherClasses.Models.MR_DATA.MR_DATAvm
@using mradmin.BissClass;

@{
    ViewBag.Title = "AdmissionsManagement";
    ViewBag.TitleBar = "ADMISSION MANAGEMENT";
    Layout = "~/Views/Shared/_MRFormLayout.cshtml";
}


<style>

    .borderLine {
        border: solid 1px black;
    }

    .tableDiv {
        height: 26rem;
    }

    .tableDiv2 {
        height: 30rem;
    }

    .tableDiv3 {
        height: 34rem;
    }

    .bigInput {
        border: 1px solid;
        background-color: #FFFFC0;
        font-size: 15px;
        width: 100% !important;
        height: 40px !important;
    }

    .customBtn1{
        width: 120px;
        height: 40px;
        border: solid 2px black;
        text-align: center;
        vertical-align: central;
        color: white;
        background-color: deeppink;
        font-weight: bold;
        cursor: pointer;
    }

    .customBtn2{
        width: 120px;
        height: 40px;
        border: solid 2px black;
        text-align: center;
        vertical-align: central;
        color: white;
        background-color: red;
        font-weight: bold;
        cursor: pointer;
    }

    .revTextArea{
        width: 100%;
        height: 20rem;
        resize: none;
    }

    .dCommentText{
        width: 100%;
        height: 10rem;
        resize: none;
    }

    .bigImgBlock{
        width: 200px;
        height: 200px;
        border: 1px solid;
    }

    .imageBlock {
        width: 130px;
        height: 100px;
        border: solid 1px;
    }

    .imageText {
        width: 130px;
        height: 20px;
        border: solid 1px;
        overflow: hidden;
    }

    .noteModalTextArea{
        width: 100%;
        height: 27rem;
        resize: none;
    }

    .noteModal {
        height: 35rem !important;
    }

    .marginleft {
        margin-left: -16px !important;
    }

    .pointer {
        cursor: pointer;
    }

    .disableDiv {
        pointer-events: none;
    }

    .activeRow {
        background-color: rgba(6, 80, 7, 0.5) !important
    }

    .prescriptionTextArea {
        width: 500px;
        height: 100px;
        border: 1px solid;
        resize: none;
        font-size: 18px;
    }

    .custFormatTextArea {
        width: 100%;
        border: 1px solid;
        resize: none;
        font-size: 10px;
    }

    .modal-dialog {
        width: 700px;
        position: absolute;
        left: 50%;
        margin-left: -320px;
    }

    .modal-content {
        width: 650px;
        height: 80px;
    }

    .noteTextArea{
        width: 100%;
        height: 42rem;
        font-size: 17px;
    }

    .prescSpecInstrn {
        width: 400px;
        height: 60px;
        resize: none;
        border: 1px solid;
        font-size: 14px;
    }
</style>



<!--Modal Start-->
<div id="1LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable1" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="2LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENT</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable2" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="3LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENT</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable3" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<input type="hidden" id="refLookUp6" />
<div id="6LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body noteModal">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls drk">
                    OTHER DIAGNOSIS - DEFINE FREELY
                </label>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section>
                <textarea class="noteModalTextArea regDiagnosisNote"></textarea>
            </section>
        </div>

        <div class="djq-body3 deep-g d-flex justify-content-around">
            <button type="button" class="btn clm">Save</button>
            <button type="button" class="btn clm close-dataJQ">Close</button>
        </div>
    </div>
</div>

<!--Modal Start-->
<div id="7LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable7" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<input type="hidden" id="refLookUp8" />
<div id="8LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body" style="height: 41rem !important;">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls drk">
                    Special Instructions / Medical Notes, Allergies, Genotype, BloodGroup etc, 
                    <b class="lblSpecInstrNotes cred"></b>
                </label>
            </div>
        </div>
       
        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section>
                <div class="row">
                    <div class="col-md-6 text-center">
                        <h5 class="drk">Special Instructions on Patient</h5>
                        <textarea class="noteModalTextArea xSpecInstText"></textarea>
                    </div>
                    <div class="col-md-6 text-center">
                        <h5 class="drk">Special Medical Notes, Allergies etc</h5>
                        <textarea class="noteModalTextArea xMedNoteText"></textarea>
                    </div>
                </div>
            </section>
        </div>

        <div class="djq-body3 deep-g d-flex justify-content-around">
            <button type="button" class="btn clm xSaveNoteBtn">Save</button>
            <button type="button" class="btn clm close-dataJQ">Close</button>
        </div>

    </div>
</div>

<!--Modal Start-->
<div id="9LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable9" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="10LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable10" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="11LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable11" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="12LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable12" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<input type="hidden" id="refLookUp13" />
<div id="13LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body" style="height: 40rem !important;">
        <div>
            <div class="djq-body1 deep-g alc">
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section class="d-flex justify-content-center prescriptionBlock">
                <textarea class="prescriptionTextArea my-5"></textarea>
            </section>

            <section>
                <div class="tableDiv v-scroll" style="height: 35rem !important;">
                    <table class="text-center">
                        <thead>
                            <tr>
                                <th class="">S/N</th>
                                <th class="px-5">Date</th>
                                <th class="px-5">Item</th>
                                <th class="px-5">Description</th>
                                <th class="px-5">Qty_Pr</th>
                                <th class="px-5">Given</th>
                                <th class="px-5">U/M</th>
                                <th class="px-5">Dose_X_Interval_X_Duration</th>
                                <th class="px-5">Doctor</th>
                                <th class="px-5">UnitCost</th>
                                <th class="px-5">Amount</th>
                                <th class="px-5">Balance</th>
                                <th class="px-5">StkCode</th>
                                <th class="px-5">QtyGiv</th>
                                <th class="px-5">RECID</th>
                                <th class="px-5">PhProcess</th>
                            </tr>
                        </thead>
                        <tbody class="inpPrescTbody2"></tbody>
                    </table>
                </div>
            </section>
        </div>

        <div class="djq-body3 deep-g d-flex justify-content-around">
            <button type="button" class="btn clm trtmentInpPrescAddBtn">Add</button>
            <button type="button" class="btn clm close-dataJQ">Close</button>
        </div>
    </div>
</div>

<input type="hidden" id="refLookUp14" />
<div id="14LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body" style="height: 55rem !important; max-width: 900px !important;">
        <div>
            <div class="djq-body1 deep-g alc">
                <b class="text-center" style="font-size: 20px">DocsTemplates</b>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section>
                <div class="dif">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a data-toggle="tab" class="bold" href="#enterpriseTemp" style="background: #f9f9f9;">Enterprise Templates</a>
                        </li>
                        <li>
                            <a data-toggle="tab" class="bold" href="#individualTemp" style="background: #f9f9f9;">Individual Templates</a>
                        </li>
                        <li>
                            <a data-toggle="tab" class="bold" href="#specialized" style="background: #f9f9f9;">Specialized</a>
                        </li>
                    </ul>

                    <div class="tab-content pt-2">
                        <div id="enterpriseTemp" class="tab-pane fade in active">
                            <div class="row">
                                <div class="col-md-7 text-center pt-2">
                                    <div class="tableDiv3 v-scroll">
                                        <table class="">
                                            <thead>
                                                <tr>
                                                    <th class="alc">S/N</th>
                                                    <th class="px-5 alc">Shortcut</th>
                                                    <th class="px-5 alc">Description</th>
                                                    <th class="px-5 alc">Status</th>
                                                    <th class="px-5 alc">RECID</th>
                                                </tr>
                                            </thead>
                                            <tbody class="tempTbody1"></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="text-center">
                                        <b style="font-size: 18px">Customized Format</b>
                                    </div>

                                    <div class="d-flex justify-content-center">
                                        <textarea class="custFormatTextArea entCustFormatText" style="height: 320px;"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="borderLine d-flex justify-content-around py-3">
                                <button type="button" class="btn clm entTempAddBtn">Add Row</button>
                                <button type="button" class="btn clm entTempSelectBtn">Select</button>
                                <button type="button" class="btn clm entTempDeleteBtn">Delete</button>
                                <button type="button" class="btn clm entTempSubmitBtn">Submit</button>
                                <button type="button" class="btn clm close-dataJQ tempCloseBtn">Close</button>
                            </div>

                            <input type="hidden" value="" class="entRecNo" />
                        </div>

                        <div id="individualTemp" class="tab-pane fade in">
                            <div class="row">
                                <div class="col-md-7 text-center pt-2">
                                    <div class="tableDiv3 v-scroll">
                                        <table class="">
                                            <thead>
                                                <tr>
                                                    <th class="alc">S/N</th>
                                                    <th class="px-5 alc">Shortcut</th>
                                                    <th class="px-5 alc">Description</th>
                                                    <th class="px-5 alc">Status</th>
                                                    <th class="px-5 alc">RECID</th>
                                                </tr>
                                            </thead>
                                            <tbody class="tempTbody2"></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="my-2">
                                        <input type="text" class="input ww100 increase-height tempDoctor" value="@Model.REPORTS.REPORT_TYPE1" disabled="disabled"/>
                                    </div>

                                    <div class="text-center">
                                        <b style="font-size: 15px">Customized Format</b>
                                    </div>

                                    <div class="d-flex justify-content-center">
                                        <textarea class="custFormatTextArea indCustFormatText" style="height: 290px;"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="borderLine d-flex justify-content-around py-3">
                                <button type="button" class="btn clm indTempAddBtn">Add Row</button>
                                <button type="button" class="btn clm indTempSelectBtn">Select</button>
                                <button type="button" class="btn clm indTempDeleteBtn">Delete</button>
                                <button type="button" class="btn clm indTempSubmitBtn">Submit</button>
                                <button type="button" class="btn clm close-dataJQ tempCloseBtn">Close</button>
                            </div>

                            <input type="hidden" value="" class="indRecNo" />
                        </div>

                        <div id="specialized" class="tab-pane fade in">
                            <div class="d-flex justify-content-around lme py-4">
                                <div class="newline n1">
                                    <label class="label w-8 w-35 drk">AREA OF INTEREST / SPECIALIZATION</label>
                                    @Html.DropDownListFor(m => m.TEMPLATEGRP.DESCRIPTION,
                                         new SelectList(Model.TEMPLATEGRPS, "DESCRIPTION", "DESCRIPTION"), "",
                                         new { @class = "input w-7 increase-height tempAreaOfSpec" })
                                </div>

                                <div>
                                    <button class="btn specDefineEditGroupBtn">Define / Edit Group</button>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-7 text-center pt-2">
                                    <div class="v-scroll" style="height: 28rem !important">
                                        <table class="">
                                            <thead>
                                                <tr>
                                                    <th class="alc">S/N</th>
                                                    <th class="px-5 alc">Shortcut</th>
                                                    <th class="px-5 alc">Description</th>
                                                    <th class="px-5 alc">Status</th>
                                                    <th class="px-5 alc">RECID</th>
                                                </tr>
                                            </thead>
                                            <tbody class="tempTbody3"></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="text-center">
                                        <b style="font-size: 15px">Customized Format</b>
                                    </div>

                                    <div class="d-flex justify-content-center">
                                        <textarea class="custFormatTextArea specCustFormatText" style="height: 265px;"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="borderLine d-flex justify-content-around py-3">
                                <button type="button" class="btn clm specTempAddBtn">Add Row</button>
                                <button type="button" class="btn clm specTempSelectBtn">Select</button>
                                <button type="button" class="btn clm specTempDeleteBtn">Delete</button>
                                <button type="button" class="btn clm specTempSubmitBtn">Submit</button>
                                <button type="button" class="btn clm close-dataJQ tempCloseBtn">Close</button>
                            </div>

                            <input type="hidden" value="" class="specRecNo" />
                        </div>
                    </div>
                </div>

            </section>
        </div>

        @*<div class="djq-body3 deep-g">
            
        </div>*@
    </div>
</div>

<input type="hidden" id="refLookUp15" />
<div id="15LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body" style="height: 38rem !important; max-width: 600px !important;">
        <div>
            <div class="djq-body1 deep-g alc">
                <b class="text-center" style="font-size: 16px">Define/Edit/View Specialist Grouping</b>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section>
                <div class="tableDiv2 v-scroll">
                    <table class="">
                        <thead>
                            <tr>
                                <th class="alc">S/N</th>
                                <th class="px-5 alc">Description</th>
                                <th class="px-5 alc">Status</th>
                                <th class="px-5 alc">RECID</th>
                            </tr>
                        </thead>
                        <tbody class="defTbody"></tbody>
                    </table>
                </div>
            </section>
        </div>

        <div class="djq-body3 deep-g d-flex justify-content-around py-3">
            <button type="button" class="btn clm defAddBtn">Add Row</button>
            <button type="button" class="btn clm defSubmitBtn">Submit</button>
            <button type="button" class="btn clm close-dataJQ defCloseBtn">Close</button>
        </div>

    </div>
</div>

<!--Modal Start-->
<div id="16LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED ADMISSIONS [ALL]</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable16" class="text-center">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->


@*For Services at designated centers*@

<!--Modal Start-->
<div id="17LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable17">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="18LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable18">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="19LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body19" style="margin-top: 0px !important;">
                <table id="regPTable6">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="20LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body20" style="margin-top: 0px !important;">
                <table id="regPTable7">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

<!--Modal Start-->
<div id="21LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable21">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->



@*Services Update Modal*@
<button type="button" class="btn btn-primary serviceModalBtn" data-toggle="modal" data-target="#serviceModal">
    Open Modal
</button>

<div class="modal" id="serviceModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal body -->
            <div class="modal-body d-flex justify-content-around">
                <button type="button" class="btn btn-primary modalAddBtn" data-dismiss="modal">Add (Give Again)</button>
                <button type="button" class="btn btn-info modalAmendBtn" data-dismiss="modal">Amend Old Record</button>
                <button type="button" class="btn btn-danger modalDeleteBtn" data-dismiss="modal">Delete Item</button>
                <button type="button" class="btn btn-warning modalIgnoreBtn" data-dismiss="modal">Ignore Update</button>
            </div>
        </div>
    </div>
</div>


@*Note Modal*@
<div id="22LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls noteHeader"></label>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <textarea class="noteTextArea" placeholder="Enter Text"></textarea>
        </div>

        <div class="djq-body3 deep-g alc">
            <button type="button" class="btn clm close-dataJQ saveNote">SAVE</button>
            <button type="button" class="btn clm close-dataJQ cancelNote">CANCEL</button>
        </div>
    </div>
</div>

<!--Modal Start-->
<div id="23LkUp" class="djq-modal djq-hide">

    <div class="djq-body">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls">LOOKUP FOR REGISTERED PATIENTS</label>
            </div>
            <div class="numberOfRows djq-hide"></div>

            <div class="djq-body11 alc">
                <label class="label">Search: </label>
                <input type="text" id="mySearchTerm" value="" class="input w-7" />
                <button type="button" id="btnSearch" class="btn clm search-dataJQ">SEARCH</button>
                <label id="djq-result" class="label"></label>
                <label id="djq-aval" class="label hide">LOADING...</label>
                <label id="djq-curVal" class="djq-hide"></label>
                <label id="djq-max" class="djq-hide"></label>
            </div>
            <div class="loader djq-transp">.</div>

        </div>
        <div>
            <div class="djq-body2" style="margin-top: 0px !important;">
                <table id="regPTable23">

                    <thead>
                    </thead>
                    <tbody></tbody>

                </table>
            </div>
        </div>

        <div class="djq-body3 deep-g alc">
            <div class="inline-block ww50 all va-top">
                <button type="button" id="first"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;&lt;
                </button>
                <button type="button" id="previous"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &lt;&lt;
                </button>
                <button type="button" id="next"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;
                </button>
                <button type="button" id="last"
                        class="btn clm " style="background-color:#607d8b !important;">
                    &gt;&gt;&gt;
                </button>
            </div>
            <div class="inline-block ww45 va-top">
                <button type="button" class="btn clm select-dataJQ">SELECT</button>
                <button type="button" class="btn clm close-dataJQ">CLOSE</button>
            </div>
        </div>
    </div>
</div>
<!--Modal End-->

@*Prescription Dublicate Modal*@
<button type="button" class="btn btn-primary prescDublicateModalBtn" data-toggle="modal" data-target="#prescDublicateModal">
    Open Modal
</button>

<div class="modal" id="prescDublicateModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal body -->
            <div class="modal-body d-flex justify-content-around">
                <button type="button" class="btn btn-primary prescDubAddBtn" data-dismiss="modal">Add (Give Again)</button>
                <button type="button" class="btn btn-info prescDubAmendBtn" data-dismiss="modal">Amend Old Record</button>
                <button type="button" class="btn btn-danger prescDubDeleteBtn" data-dismiss="modal">Delete Item</button>
                <button type="button" class="btn btn-warning prescDubIgnoreBtn" data-dismiss="modal">Ignore Update</button>
            </div>
        </div>
    </div>
</div>


<input type="hidden" id="refLookUp24" />
<div id="24LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body noteModal">
        <div>
            <div class="djq-body1 deep-g alc">
                <label class="label ls drk">
                    GUIDELINES FOR ONLINE PRESCRIPTIONS MANAGEMENT
                </label>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
            <section>
                <textarea style="font-size: 14px" class="noteModalTextArea tipsText"></textarea>
            </section>
        </div>

        <div class="djq-body3 deep-g d-flex justify-content-around">
            <button type="button" class="btn clm close-dataJQ">Close</button>
        </div>
    </div>
</div>

<input type="hidden" id="refLookUp25" />
<div id="25LkUp" class="djq-modal djq-hide custom">
    <div class="djq-body" style="height: 40rem !important;">
        <div>
            <div class="deep-g alc">
                <b class="text-center historyHeader" style="font-size: 17px"></b>
            </div>
        </div>

        <div class="djq-c">
            <!--CUSTOM HTML CONTENT-->
           
            <section>
                <div class="tableDiv v-scroll" style="height: 30rem !important;">
                    <table class="text-center">
                        <thead>
                            <tr>
                                <th class="">S/N</th>
                                <th class="px-5">DESCRIPTION</th>
                                <th class="px-5">DATE</th>
                                <th class="px-5">QTY_PR</th>
                                <th class="px-5">CUM_GV</th>
                                <th class="px-5">DOSE</th>
                                <th class="px-5">INTERVAL</th>
                                <th class="px-5">DURATION</th>
                                <th class="px-5">DOCTOR</th>
                                <th class="px-5">DISP_BY</th>
                                <th class="px-5">TYPE</th>
                                <th class="px-5">SP_INSTRUCTIONS</th>
                            </tr>
                        </thead>
                        <tbody class="ppdTbody"></tbody>
                    </table>
                </div>
            </section>
        </div>

        <div class="deep-g d-flex justify-content-around">
            <button type="button" class="btn clm close-dataJQ">Close</button>
        </div>
    </div>
</div>



<section>
    <form method="post" action="#">

        <div class="diff deep">

            <ul class="nav nav-tabs">
                <li class="active">
                    <a data-toggle="tab" class="bold" href="#SpaceDefinition" style="background: #f9f9f9;">Space Definition</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold" href="#Registration" style="background: #f9f9f9;">Registration</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold serviceUpdateTab" href="#ServiceUpdate" style="background: #f9f9f9;">Service Update</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold reviewTab" href="#Reviews" style="background: #f9f9f9;">Reviews</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold" href="#ChangeBed_Room" style="background: #f9f9f9;">Change Bed/Room</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold" href="#Discharge" style="background: #f9f9f9;">Discharge</a>
                </li>
                <li>
                    <a data-toggle="tab" class="bold" href="#ServiceItems" style="background: #f9f9f9;">Service Items</a>
                </li>
            </ul>

            <div class="tab-content">
                <!--Space Definition-->
                <section id="SpaceDefinition" class="tab-pane fade in active">
                    <div class="dif">
                
                        <section class="row pt-3 pb-3">
                            <div class="col-md-6">
                                <div class="newline n1">
                                    <label class="label w-5 drk">Accomodation Facility</label>
                                    @Html.DropDownListFor(m => m.SYSCODETABSvm.ServiceCentreCodes.name,
                                        new SelectList(Model.SYSCODETABSvm.ServiceCentreCodess, "type_code", "name"), "",
                                        new { @id = "ivgFac", @class = "input w-6 increase-height spacDefFacility" })
                                </div>
                                <div class="newline n1">
                                    <label class="label w-5 drk">Room / Ward ID</label>
                                    <input type="text" name="txt" value="" class="input w-6 increase-height spacDefRoom" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-5 drk">Bed Number</label>
                                    <input type="text" name="txt" value="" class="input w-6 increase-height spacDefBedNo" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-5 drk">Description</label>
                                    <input type="text" name="txt" value="" class="input w-6 increase-height spacDefDescription" />
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="newline n1">
                                    <label class="label w-5 drk">Daily Rate</label>
                                    <input type="number" value="" placeholder="0.00" class="input w-5 increase-height spacDefDailyRate" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-5 drk">Admission Deposit</label>
                                    <input type="number" name="txt" value="" placeholder="0.00" class="input w-5 increase-height spacDefDeposit" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-5 drk">Daily Nursing Care Charge</label>
                                    <input type="number" name="txt" value="" placeholder="0.00" class="input w-5 increase-height spacDefNursingCare" />
                                </div>
                                <div class="newline n1">
                                    <label class="label drk w-5 drk">Date Registered</label>
                                    <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-5 increase-height spacDefdateRegtd" />
                                </div>
                            </div>
                        </section>
                        <section>
                            <h5 class="drk spacDefLabelOccupant text-center text-uppercase"></h5>
                        </section>
                        <section class="borderLine py-4">
                            <div class="d-flex justify-content-around">
                                <input type="button" value="Submit" class="btn spacDefSubmitBtn" />
                                <input type="button" value="Add" class="btn spacDefAddBtn" />
                                <input type="button" value="Delete" class="btn spacDefDeleteBtn" />
                                <input type="button" value="Release Bed Space" class="btn spacDefRelBedSpBtn" />
                            </div>
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table class="text-center" name="">
                                    <thead>
                                        <tr>
                                            <th class="">S/N</th>
                                            <th class="">Facility</th>
                                            <th class="">Room/Ward ID</th>
                                            <th class="">Bed</th>
                                            <th class="">DailyRate</th>
                                            <th class="">Occupant</th>
                                            <th class="">Description</th>
                                            <th class="">DNC</th>
                                            <th class="">Date_Reg</th>
                                            <th class="">NEWREC</th>
                                            <th class="">Posted</th>
                                            <th class="">Fac_Code</th>
                                            <th class="">RECID</th>
                                            <th class="">Deposit</th>
                                        </tr>
                                    </thead>
                                    <tbody class="spacDefTbody"></tbody>
                                </table>
                            </div>
                        </section>
                       
                        @*hidden props*@
                        <input type="hidden" class="spacDefNewRec" value="false" />
                        <input type="hidden" class="hiddenSpacDefRecNo" value="0" />

                    </div>
                </section>

                <!--Registration-->
                <section id="Registration" class="tab-pane fade in">
                    <section class="dif">
                        <div class="row pt-3">
                            <div class="col-md-7">
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-4 w-35 drk">Reference</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height cData1 regReference" />
                                        <input type="button" id="refLookUp1" class="btn-small" />
                                    </span>
                                    
                                    <span class="pl-3">
                                        <input type="checkbox" id="regCurAdmin" value="True" class="isCHK chkCurrentAdmin" />
                                        <label for="regCurAdmin" class="label drk">Current Admissions</label>
                                    </span>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Name</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height regName" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients Group Code</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height regGroupCode dData2 eData2" />
                                    <input type="button" id="refLookUp2" name="btn" value="" class="btn-small" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients No.</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height regPatientNo dData1 eData1" />
                                    <input type="button" id="refLookUp3" name="btn" value="" class="btn-small" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="text-center">
                                    <img src="~/content/images/loadlistbtn.png" class="regLoadListBtn pointer"/>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Bills Payable By</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height regBillPayableBy" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Account Bal.</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height regAcctBalance" />
                                    <span class="drk">DB</span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Facility</label>
                                    @Html.DropDownListFor(m => m.SYSCODETABSvm.ServiceCentreCodes.name,
                                         new SelectList(Model.SYSCODETABSvm.ServiceCentreCodess, "type_code", "name"), "",
                                         new { @class = "input w-5 increase-height regFacility" })
                                </div>
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-4 w-35 drk">Room / Ward</label>
                                        <select class="input w-2 increase-height regRoom"></select>
                                    </span>
                                    <span class="sapn newline n1">
                                        <label class="label w-35 drk">Bed</label>
                                        <select class="input w-2 increase-height regBedNo"></select>
                                    </span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Admission Date</label>
                                    <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-5 increase-height regAdminDate" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="l-c mb-3">
                                    <input type="checkbox" id="chknotice" name="chk" class="chkAdminNoticeToDoc" />
                                    <label for="chknotice" class="label drk cred">Send Admission notice to Doctor</label>
                                </div>
                                <div class="newline n1">
                                    <div class="bigInput regBigInput"></div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="chkConvertBillsDiv">
                                    <input type="checkbox" id="chkSRA" class="chkConvertBills" />
                                    <label for="chkSRA" class="label drk">Convert Out-Patient Bills & Pay</label>
                                </div>
                                <div class="mt-4">
                                    <span>
                                        <input type="button" value="Submit" class="btn regSubmitBtn" />
                                    </span>
                                    <span>
                                        <input type="button" value="Delete" class="btn regDeleteBtn" />
                                    </span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Doctor</label>
                                    @Html.DropDownListFor(m => m.DOCTORS.NAME,
                                         new SelectList(Model.DOCTORSS, "reference", "name"), "",
                                         new { @class = "input w-5 increase-height regDoctor" })

                                    <span class="cred">**</span>
                                </div>
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-4 w-35 drk">Pri. Diagnosis</label>
                                        @Html.DropDownListFor(m => m.SYSCODETABSvm.DiagnosisCodes.name,
                                             new SelectList(Model.SYSCODETABSvm.DiagnosisCodess, "type_code", "name"), "",
                                             new { @id = "ivgFac", @class = "input w-5 increase-height regPrimaryDiag" })
                                    </span>
                                    <span>
                                        <input type="button" name="" value="Diagnosis" class="btn clm regDiagnosisBtn" />
                                    </span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Cost Centre/Branch</label>
                                    @Html.DropDownListFor(m => m.SYSCODETABSvm.BranchCodes.name,
         new SelectList(Model.SYSCODETABSvm.BranchCodess, "type_code", "name"), "",
         new { @id = "ivgFac", @class = "input w-5 increase-height regBranch" })

                                    <span class="cred">**</span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35"></label>
                                    <input type="text" name="txt" value="" class="input w-9 w-50 increase-height" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="newline n1">
                                    <label class="label w-2 w-35 drk">Time</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height regTime" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-2 w-35 drk">Daily Rate</label>
                                    <input type="number" value="" placeholder="0.00" class="input w-4 w-50 increase-height regDailyRate" />
                                    <span class="cred">**</span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-2 w-35 drk">Feeding</label>
                                    <input type="number" name="txt" value="" placeholder="0.00" class="input w-4 w-50 increase-height regFeeding" />
                                    <span class="drk"> / Day</span>
                                    <span class="cred">**</span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-2 w-35 drk">P.N.C</label>
                                    <input type="number" value="" placeholder="0.00" class="input w-4 w-50 increase-height regPNC" />
                                    <span class="drk"> Daily</span>
                                    <span class="cred">**</span>
                                </div>
                            </div>

                            <div class="col-md-2 ml-n2 d-flex justify-content-around align-items-center flex-wrap">
                                <span>
                                    <img src="~/content/images/medicalnote.png" class="regMedNotes pointer"/>       
                                 </span>
                            </div>
                        </div>
                    </section>

                    <section>
                        <div class="tableDiv v-scroll">
                            <table>
                                <thead>
                                    <tr>
                                        <th class="">S/N</th>
                                        <th class="">Facility</th>
                                        <th class="">Room/Ward ID</th>
                                        <th class="">Bed</th>
                                        <th class="">DailyRate</th>
                                        <th class="">Occupant</th>
                                        <th class="">Description</th>
                                        <th class="">DNC</th>
                                    </tr>
                                </thead>
                                <tbody class="regTbody"></tbody>
                            </table>
                        </div>
                    </section>

                    <input type="hidden" class="hiddenCashPaying" value="false" />
                    <input type="hidden" class="hiddenRegNewRec" value="false" />
                    <input type="hidden" class="regmghgroupcode" value="" />
                    <input type="hidden" class="regmlastno" value="" />
                    <input type="hidden" class="regmcrossref" value="" />

                </section>
                
                <!--Service Update-->
                <section id="ServiceUpdate" class="tab-pane fade in">
                    <section class="dif serviceUpdateBlock">
                        <section>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Admission Reference</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height fData1 suAdminReference" />
                                        <input type="button" id="refLookUp7" class="btn-small" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="newline n1">
                                        <input type="checkbox" id="suCurAdmin" value="True" class="isCHK suCurAdmin"/>
                                        <label for="suCurAdmin" class="label drk">Current Admissions</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Admission</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height suDateOfAdm" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients Group Code</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height suGroupCode" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients No.</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height suPatientNo" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <div class="bigInput suProfile"></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Discharge</label>
                                        <input type="text" value="" class="input w-3 w-50 increase-height suDateOfDisch" />
                                        <b class="cred suDischargeLb">...</b>
                                    </div>
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Facility</label>
                                        <input type="text" class="input w-4 w-50 increase-height suFacilityText" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Name</label>
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height suName" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Address</label>
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height suAddress" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Diagnosis</label>
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height suDiagnosis" />
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex justify-content-around align-items-center">
                                    <div class="customBtn1 m-1 suInPatientPresBtn">In-Patient Prescription</div>
                                    <div class="customBtn2 suMedicalNotes">Medical Notes / Allergies</div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <span>
                                            <label class="label w-3 w-35 drk">Ward/Room</label>
                                            <input type="text" name="txt" value="" class="input w-2 w-50 increase-height suRoom" />
                                        </span>
                                        <span>
                                            <label class="label w- w-35 drk">Bed</label>
                                            <input type="text" name="txt" value="" class="input w-2 w-50 increase-height suBed" />
                                        </span>
                                    </div>
                                    <div class="borderLine pt-1">
                                        <div class="newline n1">
                                            <label class="label w-3 w-35 drk">Acct. Info</label>
                                            <input type="text" name="txt" value="" class="input w-4 w-50 increase-height" />
                                            <label class="label">DB</label>
                                        </div>
                                        <div class="newline n1">
                                            <label class="label w-1 w-35 drk"></label>
                                            <input type="text" name="txt" value="" class="input w-7 w-50 increase-height suGroupHead" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section class="py-3 borderLine">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Facility</label>
                                        @Html.DropDownListFor(m => m.SYSCODETABSvm.ServiceCentreCodes.name,
         new SelectList(Model.SYSCODETABSvm.ServiceCentreCodess, "type_code", "name"), "",
         new { @class = "input w-4 increase-height suFacility" })  
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Select your Unit ID</label>

                                        <span class="suStoreBlock">
                                            @Html.DropDownListFor(m => m.SCS01vm.STORE.NAME,
         new SelectList(Model.SCS01vm.STOREs, "storecode", "name"), "",
         new { @class = "input w-4 increase-height suUnitID" }) 
                                        </span>
                                        <span class="suCostCenterBlock">
                                            @Html.DropDownListFor(m => m.SYSCODETABSvm.CostCentreCodes.name,
     new SelectList(Model.SYSCODETABSvm.CostCentreCodess, "type_code", "name"), "",
     new { @class = "input w-4 increase-height suUnitID" })
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="d-flex justify-content-around mb-2">
                                        <span>
                                            <label class="label w-35 drk">UNIT ID</label>
                                        </span>
                                        <span>
                                            <input type="radio" id="chkRad1" name="chkunitID" class="suChkStore" />
                                            <label for="chkRad1" class="label drk">Store</label>
                                        </span>
                                        <span>
                                            <input type="radio" id="chkRad2" name="chkunitID" class="suChkCostCenter" />
                                            <label for="chkRad2" class="label drk">Cost Center</label>
                                        </span>
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-3 w-35 drk">Service Time</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height suServiceTime" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-3 w-35 drk">Current Total</label>
                                        <input type="number" placeholder="0.00" value="" class="input w-4 w-50 increase-height suCurrentTotal" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-1 w-35 drk"></label>
                                        <input type="button" value="AUTO GENERATE" class="btn suAutoGenerateBtn"/>
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section class="py-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk">Process</label>
                                        @Html.DropDownListFor(m => m.DISPSERV.DESCRIPTION,
                                             new SelectList(Model.DISPSERVS, "REFERENCE", "DESCRIPTION"), "",
                                             new { @class = "input w-5 increase-height suProcess" })  
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk">Service / Procedure</label>
                                        @Html.DropDownListFor(m => m.TARIFF.NAME,
                                             new SelectList(Model.TARIFFS, "Reference", "Name"), "",
                                             new { @class = "input w-5 increase-height suProcedure" })
                                        <input type="button" name="btn" value="" class="btn-small" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk">Drg/Inj/Stk_Item/Desc Of Serv</label>
                                        @Html.DropDownListFor(m => m.SCS01vm.stock.name,
                                             new SelectList(Model.SCS01vm.stocks, "ITEM", "NAME"), "",
                                             new { @class = "input w-5 increase-height suStockItem" })                                        
                                        
                                        <input type="button" name="btn" value="" class="btn-small" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="newline n1">
                                        <label class="label w-2 w-35 drk">Date Given</label>
                                        <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 increase-height suDateGiven" />
                                    </div>
                                    <div class="newline n1">
                                        <span>
                                            <label class="label w-2 w-35 drk">Qty Given</label>
                                            <input type="number" name="txt" value="" class="input w-4 w-50 increase-height suQtyGiven" />
                                        </span>
                                        <span>
                                            <label class="label w-1 w-35 drk">U / M</label>
                                            <input type="text" name="txt" value="" class="input w-3 w-50 increase-height suMeasure" />
                                        </span>
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-2 w-35 drk">Amount</label>
                                        <input type="number" name="txt" value="" class="input w-4 w-50 increase-height suAmount" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section class="py-3 borderLine">
                            <div class="d-flex justify-content-around">
                                <input type="button" value="Submit" class="btn suSubmitBtn" />
                                <input type="button" value="ADD" class="btn suAddBtn" />
                                <input type="button" value="Treatment Chart" class="btn suTreatmentChtBtn" />
                            </div>
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table class="text-center" name="">
                                    <thead>
                                        <tr>
                                            <th class="">S/N</th>
                                            <th class="px-5">Date</th>
                                            <th class="px-5">Time</th>
                                            <th class="px-5">Facility</th>
                                            <th class="px-5">Billing_Code</th>
                                            <th class="px-5">Description</th>
                                            <th class="px-5">Quantity</th>
                                            <th class="px-5">u/M</th>
                                            <th class="px-5">Amount</th>
                                            <th class="px-5">Status</th>
                                            <th class="px-5">User</th>
                                            <th class="px-5">Date_Time</th>
                                            <th class="px-5">Process</th>
                                            <th class="px-5">StkCode</th>
                                            <th class="px-5">Doctor</th>
                                            <th class="px-5">RECID</th>
                                            <th class="px-5">Store</th>
                                            <th class="px-5">Updated</th>
                                        </tr>
                                    </thead>
                                    <tbody class="suTbody"></tbody>
                                </table>
                            </div>
                        </section>
                    </section>


                    <section class="inPatPrescBlock">
                        <section class="text-center borderLine">
                            <h5 class="drk">IN-PATIENT PRESCRIPTION DETAILS - <b class="cred inPatPrescTitle"></b></h5>
                        </section>

                        <section class="py-4 lme">
                            <div class="row pb-3">
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Admission Reference</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height gData1 inpPrescAdmRef" />
                                        <input type="button" id="refLookUp9" class="btn-small" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="newline n1">
                                        <input type="checkbox" id="chkInPresc" value="True" class="isCHK chkPresCurAdmin" />
                                        <label for="chkInPresc" class="label drk">Current Admissions</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-1 w-35 drk">Name</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height inpPrescName" />
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-9 d-flex justify-content-around">
                                    <h6 class="drk">YOU CAN SELECT PERIOD OF STAY - </h6>
                                    <span>
                                        <label class="label w-1 w-35 drk">From</label>
                                        <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 increase-height inpPrescDateFrom" />
                                    </span>
                                    <span>
                                        <label class="label w-1 w-35 drk">To</label>
                                        <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 increase-height inpPrescDateTo" />
                                    </span>
                                </div>
                                <div class="col-md-3">
                                    <div>
                                        <input type="checkbox" id="chkProcessed" value="" class="chkUnProcessed" />
                                        <label for="chkProcessed" class="label drk">UNPROCESSED</label>
                                    </div>
                                </div>
                            </div>

                        </section>

                        <section class="borderLine p-3 d-flex justify-content-around">
                            <input type="button" value="Load" class="btn inpPrescLoadBtn" />
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table class="text-center" name="">
                                    <thead>
                                        <tr>
                                            <th class="">S/N</th>
                                            <th class="px-5">Date</th>
                                            <th class="px-5">Item</th>
                                            <th class="px-5">Description</th>
                                            <th class="px-5">Qty_Pr</th>
                                            <th class="px-5">Given</th>
                                            <th class="px-5">Transfered</th>
                                            <th class="px-5">Balance</th>
                                            <th class="px-5">U/M</th>
                                            <th class="px-5">Dose/Interval/Duration</th>
                                            <th class="px-5">Doctor</th>
                                            <th class="px-5">UnitCost</th>
                                            <th class="px-5">Amount</th>
                                            <th class="px-5">Balance</th>
                                            <th class="px-5">StkCode</th>
                                            <th class="px-5">QtyGiv</th>
                                            <th class="px-5">RECID</th>
                                            <th class="px-5">PhProcess</th>
                                            <th class="px-5">Name</th>
                                        </tr>
                                    </thead>
                                    <tbody class="inpPrescTbody"></tbody>
                                </table>
                            </div>
                        </section>

                        <section class="borderLine p-3 d-flex justify-content-around">
                            <input type="button" value="Close" class="btn inpPrescCloseBtn" />
                        </section>

                        <input type="hidden" value="" class="inpPrescCaller" />
                    </section>


                    <section class="dif treatmentChartBlock">
                        <section class="text-center borderLine">
                            <h5 class="drk">FrmTreatmentChart</h5>
                        </section>

                        <section class="mt-2">
                            <div class="row">
                                <div class="col-md-7">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Admission Reference</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height fData1 trtmentReference" />
                                    </div>
                                    <div class="newline n1">
                                        <span>
                                            <label class="label w-4 w-35 drk">Patient's Group Code</label>
                                            <input type="text" value="" class="input w-5 w-50 increase-height trtmentGroupCode" />
                                        </span>
                                        <span class="pl-1">
                                            <input type="text" value="" class="input w-4 w-50 increase-height trtmentPatientNo" />
                                        </span>
                                    </div>
                                </div>

                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Date of Admission</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height trtmentDateOfAdm" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Date of Discharge</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height trtmentDateOfDisch" />
                                    </div>
                                </div>
                            </div>
                       </section>

                        <section>
                            <div class="row">
                                <div class="col-md-7">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Name</label>
                                        <input type="text" value="" class="input w-7 w-50 increase-height trtmentName" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Diagnosis</label>
                                        <input type="text" value="" class="input w-7 w-50 increase-height trtmentDiagnosis" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Process Bill Code</label>
                                        @Html.DropDownListFor(m => m.DISPSERV.DESCRIPTION,
                                             new SelectList(Model.DISPSERVS, "REFERENCE", "DESCRIPTION"), "",
                                             new { @class = "input w-7 increase-height trtmentProcBillCode" })
                                    </div>
                                </div>
                                
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Facility</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height trtmentFacility" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Ward/Room</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height trtmentRoom" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Bed</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height trtmentBed" />
                                    </div>
                                </div>
                            </div>

                            <div class="newline n1">
                                <span>
                                    <label class="label w-4 w-35 drk">Select Unit</label>
                                    @Html.DropDownListFor(m => m.SCS01vm.STORE.NAME,
                                             new SelectList(Model.SCS01vm.STOREs, "storecode", "name"), "",
                                             new { @class = "input w-7 increase-height trtmentUnit" })
                                </span>         
                                <span>
                                    <label class="label w-3 w-35 drk">Unit Identification</label>
                                    <span class="pl-5">
                                        <input type="radio" id="trtmentStore" class="trtmentChkStore" />
                                        <label for="trtmentStore" class="label drk">Store</label>
                                    </span>
                                </span>
                            </div>
                        </section>

                        <section class="py-3 borderLine">
                            <div class="d-flex justify-content-around">
                                <input type="button" value="In-Patient Prescriptions" class="btn trtmentInpPrescBtn" />
                                <input type="button" value="Query Due Next" class="btn" />
                                <input type="button" value="Remove" class="btn trtmentRemoveBtn" />
                                <input type="button" value="ADD" class="btn trtmentAddBtn" />
                                <input type="button" value="Submit" class="btn trtmentSubmitBtn" />
                                <input type="button" value="Close" class="btn trtmentCloseBtn" />
                            </div>
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table class="text-center">
                                    <thead>
                                        <tr>
                                            <th class="">S/N</th>
                                            <th class="px-5">Date</th>
                                            <th class="px-5">DueTime</th>
                                            <th class="px-5">TimeGiven</th>
                                            <th class="px-5">Name_Of_Drug</th>
                                            <th class="px-5">Dose</th>
                                            <th class="px-5">U/M</th>
                                            <th class="px-5">Method_Of_Admin</th>
                                            <th class="px-5">Given_By</th>
                                            <th class="px-5">Remarks</th>
                                            <th class="px-5">Bill_Qty</th>
                                            <th class="px-5">Bill_Qty_Unit</th>
                                            <th class="px-5">Unit_Cost</th>
                                            <th class="px-5">Total</th>
                                            <th class="px-5">Post</th>
                                            <th class="px-5">StkItem</th>
                                            <th class="px-5">StkBal</th>
                                            <th class="px-5">PackQty</th>
                                            <th class="px-5">PackCost</th>
                                            <th class="px-5">Status</th>
                                            <th class="px-5">RecID</th>
                                            <th class="px-5">InpRecID</th>
                                        </tr>
                                    </thead>
                                    <tbody class="trtmentTbody"></tbody>
                                </table>
                            </div>
                        </section>
                    </section>


                    <input type="hidden" class="hiddenSUnewRec" value="false" />
                    <input type="hidden" class="SUmgrouphead" value="" />
                    <input type="hidden" class="SUmservunit" value="" />
                    <input type="hidden" class="SUamtsave" value="" />
                    <input type="hidden" class="SUrecno" value="" />
                    <input type="hidden" class="trtmentRecno" value="" />
                    <input type="hidden" class="inpPrescRecno" value="" />
                    <input type="hidden" class="suIsDelete" value="false" />
                    <input type="hidden" class="isduenext" value="false" />
                    <input type="hidden" class="medhistwritten" value="false" />
                    
                </section>

                <!--Reviews-->
                <section id="Reviews" class="tab-pane fade in">
                    <section class="dif reviewBlock">
                        <section>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Admission Reference</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height hData1 revAdmReference" />
                                        <input type="button" id="refLookUp10" value="" class="btn-small" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="newline n1">
                                        <input type="checkbox" id="revCurAdmin" value="True" class="isCHK chkRevCurAdmin" />
                                        <label for="revCurAdmin" class="label drk">Current Admissions</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Admission</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height revDateOfAdm" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients Group Code</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height revGroupCode" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients No.</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height revPatientNo" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <div class="bigInput revPatProfile"></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Discharge</label>
                                        <input type="text" value="" class="input w-3 w-50 increase-height revDateOfDisch" />
                                        <b class="drk cred revLblDischarge">...</b>
                                    </div>
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Facility</label>
                                        <input type="text" class="input w-4 w-50 increase-height revFacility" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Name</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height revName" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk"></label>
                                        <input type="text" name="txt" value="" class="input w-8 w-50 increase-height revGrouphead" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Address</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height revAddress" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Diagnosis</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height revDiagnosis" />
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="newline n1">
                                        <span>
                                            <label class="label w-6 w-35 drk">Ward/Room</label>
                                            <input type="text" value="" class="input w-2 w-50 increase-height revRoom" />
                                        </span>
                                        <span>
                                            <label class="label w-1 w-35 drk">Bed</label>
                                            <input type="text" value="" class="input w-2 w-50 increase-height revBed" />
                                        </span>
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk"></label>
                                        <input type="number" placeholder="0.00" class="input w-5 w-50 increase-height revAccumCharge" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk">Treatment/Review Date</label>
                                        <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-5 w-50 increase-height revTreatmentDate" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk">Time</label>
                                        <input type="text" value="" class="input w-5 w-50 increase-height revTime" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-6 w-35 drk"></label>
                                        <span>
                                            <input type="checkbox" id="chkProtect" class="revChkProtect" />
                                            <label for="chkProtect" class="label drk">Protect</label>
                                        </span>
                                        <span class="pl-4">
                                            <input type="checkbox" id="chkEncrypt" class="revChkEncrypt" />
                                            <label for="chkEncrypt" class="label drk">Encrypt</label>
                                        </span>
                                    </div>

                                </div>
                            </div>
                        </section>

                        <section class="borderLine">
                            <div class="d-flex justify-content-around flex-wrap py-2">
                                <input type="button" value="Templates" class="btn revTemplatesBtn" />
                                <input type="button" value="Observation Chart" class="btn red revObservChartBtn" />
                                <input type="button" value="Fluid Chart" class="btn bluu blk revFluidChartBtn" />
                                <input type="button" value="Diabetic Chart" class="btn oraa revDiabChartBtn" />
                            </div>
                            <div class="d-flex justify-content-around flex-wrap py-2">
                                <input type="button" value="Dialysis Observation Charts" class="btn purp" />
                                <input type="button" value="In-Patient Prescriptions Details" class="btn yel blk revInpPrescBtn" />
                                <input type="button" value="Medical Notes / Allergies" class="btn revMedNoteBtn" />
                            </div>
                        </section>

                        <section class="">
                            <div class="dif">
                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a data-toggle="tab" class="bold" href="#CurrentRecords" style="background: #f9f9f9;">CURRENT RECORDS</a>
                                    </li>
                                    <li>
                                        <a data-toggle="tab" class="bold" href="#PreviousRecords" style="background: #f9f9f9;">PREVIOUS RECORDS</a>
                                    </li>
                                    <li>
                                        <a data-toggle="tab" class="bold" href="#Images" style="background: #f9f9f9;">IMAGES</a>
                                    </li>
                                </ul>

                                <div class="tab-content">
                                    <div id="CurrentRecords" class="tab-pane fade in active">
                                        <div class="row">
                                            <div class="col-md-9">
                                                <textarea class="revTextArea revCurrentRecText"></textarea>
                                            </div>
                                            <div class="col-md-2 d-flex justify-content-around align-items-center flex-wrap">
                                                <input type="button" value="Retrieve Case Note" class="btn revRetCaseNoteBtn" />
                                                <input type="button" value="Save" class="btn revSaveBtn" />
                                                <div class="customBtn2 bluu blk revInvProcReqBtn">Investigation / Procedure Request</div>
                                                <input type="button" value="Prescription" class="btn revPrescriptionBtn" />
                                                <input type="button" value="TTH" class="btn revTTHBtn" />
                                            </div>
                                        </div>
                                    </div>

                                    <div id="PreviousRecords" class="tab-pane fade in">
                                        <div class="row">
                                            <div class="col-md-9">
                                                <textarea class="revTextArea revPrevRecText"></textarea>
                                            </div>
                                            <div class="col-md-3 d-flex justify-content-around align-items-center flex-wrap">
                                                <span>
                                                    <label for="chkQuery" class="label drk">Query Backup</label>
                                                    <input type="checkbox" id="chkQuery" value="" class="revChkQueryBackup" />
                                                </span>
                                                <span>
                                                    <label class="label w-1 w-35 drk">From:</label>
                                                    <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 w-50 increase-height revHistDateFrom" />
                                                </span>
                                                <span>
                                                    <label class="label w-1 w-35 drk">To:</label>
                                                    <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 w-50 increase-height revHistDateTo" />
                                                </span>
                                                <span>
                                                    <input type="button" value="Get History" class="btn revGetHistoryBtn" />
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="Images" class="tab-pane fade in">
                                        <div class="text-center cred drk py-3">
                                            ALL PREVIOUS MEDICAL IMAGES FOR THIS PATIENT
                                        </div>

                                        <div class="row mb-4">
                                            <div class="col-md-9">
                                                <div class="tableDiv v-scroll">
                                                    <table class="">
                                                        <thead>
                                                            <tr>
                                                                <th class="px-5">Trans_Date</th>
                                                                <th class="px-5">TotPic</th>
                                                                <th class="px-5">Facility1</th>
                                                                <th class="px-5">PIC1</th>
                                                                <th class="px-5">Note1</th>
                                                                <th class="px-5">Facility2</th>
                                                                <th class="px-5">PIC2</th>
                                                                <th class="px-5">Note2</th>
                                                                <th class="px-5">Facility3</th>
                                                                <th class="px-5">PIC3</th>
                                                                <th class="px-5">Note3</th>
                                                                <th class="px-5">Facility4</th>
                                                                <th class="px-5">PIC4</th>
                                                                <th class="px-5">Note4</th>
                                                                <th class="px-5">Facility5</th>
                                                                <th class="px-5">PIC5</th>
                                                                <th class="px-5">Note5</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="revTbody"></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="col-md-3 text-center">
                                                <div class="bigImgBlock m-auto"></div>

                                                <div class="mt-4">
                                                    <label for="chkScreen" class="label drk">Full Screen</label>
                                                    <input type="checkbox" id="chkScreen" value="" class="" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="d-flex justify-content-around flex-wrap mb-4">
                                            <div>
                                                <div class="imageBlock mb-3">
                                                </div>
                                                <div class="imageText picText1"></div>
                                            </div>
                                            <div>
                                                <div class="imageBlock mb-3">
                                                </div>
                                                <div class="imageText picText2"></div>
                                            </div>
                                            <div>
                                                <div class="imageBlock mb-3">
                                                </div>
                                                <div class="imageText picText1"></div>
                                            </div>
                                            <div>
                                                <div class="imageBlock mb-3">
                                                </div>
                                                <div class="imageText picText2"></div>
                                            </div>
                                            <div>
                                                <div class="imageBlock mb-3">
                                                </div>
                                                <div class="imageText picText5"></div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </section>
                    </section>

                    <section class="observChartBlock">
                        <section>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Admission Reference</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height kData1 obAdmReference" />
                                        <input type="button" id="refLookUp16" value="" class="btn-small" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="newline n1">
                                        <input type="checkbox" id="obCurAdmin" value="True" class="isCHK chkObCurAdmin" />
                                        <label for="obCurAdmin" class="label drk">Current Admissions</label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Admission</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height obDateOfAdm" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients Group Code</label>
                                        <input type="text" name="txt" value="" class="input w-4 w-50 increase-height obGroupCode" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Patients No.</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height obPatientNo" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <div class="bigInput obPatProfile"></div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Date of Discharge</label>
                                        <input type="text" value="" class="input w-4 w-50 increase-height obDateOfDisch" />
                                    </div>
                                    <div class="newline n1 marginleft">
                                        <label class="label w-4 w-35 drk">Facility</label>
                                        <input type="text" class="input w-4 w-50 increase-height obFacility" />
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Name</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height obName" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Address</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height obAddress" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk"></label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height obGrouphead" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 w-35 drk">Diagnosis</label>
                                        <input type="text" value="" class="input w-8 w-50 increase-height obDiagnosis" />
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="newline n1">
                                        <label class="label w-3 w-35 drk">Ward/Room</label>
                                        <input type="text" value="" class="input w-3 w-50 increase-height obRoom" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-3 w-35 drk">Bed</label>
                                        <input type="text" value="" class="input w-3 w-50 increase-height obBed" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-3 w-35 drk"></label>
                                        <b class="drk cred obLblDischarge">...</b>
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="dif">
                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a data-toggle="tab" class="bold" href="#intensiveCare" style="background: #f9f9f9;">INTENSIVE CARE / OBSERVATION CHART</a>
                                    </li>
                                    <li>
                                        <a data-toggle="tab" class="bold" href="#fluidChart" style="background: #f9f9f9;">FLUID CHART</a>
                                    </li>
                                    <li>
                                        <a data-toggle="tab" class="bold" href="#diabeticChart" style="background: #f9f9f9;">DIABETIC CHART</a>
                                    </li>
                                </ul>

                                <div class="tab-content">
                                    <div id="intensiveCare" class="tab-pane fade in active">
                                        <div class="row">
                                            <div class="col-md-10">
                                                <div class="tableDiv v-scroll">
                                                    <table class="text-center">
                                                        <thead>
                                                            <tr>
                                                                <th>S/N</th>
                                                                <th class="px-5">Trans_Date</th>
                                                                <th class="px-5">Time</th>
                                                                <th class="px-5">Temp</th>
                                                                <th class="px-5">Pulse</th>
                                                                <th class="px-5">Respiration</th>
                                                                <th class="px-5">Bp</th>
                                                                <th class="px-5">Sp02</th>
                                                                <th class="px-5">Remarks</th>
                                                                <th class="px-5">Protect</th>
                                                                <th class="px-5">RECID</th>
                                                                <th class="px-5">Posted</th>
                                                                <th class="px-5">Updated</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="intenTbody"></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="col-md-2 d-flex justify-content-around align-items-center flex-wrap">
                                                <input type="button" value="Submit" class="btn intenSubmitBtn" />
                                                <input type="button" value="Remove" class="btn intenRemoveBtn" />
                                                <div class="text-center">
                                                    <b class="w-4 drk">Select Graph Option</b>
                                                    <select class="input w-3 increase-height">
                                                        <option></option>
                                                        <option value="BP">BP</option>
                                                        <option value="PULSE">PULSE</option>
                                                        <option value="TEMP">TEMP</option>
                                                    </select>
                                                </div>
                                                <input type="button" value="Graph" class="btn intenGraphBtn" />
                                            </div>
                                        </div>
                                    </div>

                                    <div id="fluidChart" class="tab-pane fade in">
                                        <div class="text-center lme py-1">
                                            <h4 class="drk">[-----INTAKE-----] [-----OUT FLOW-----]</h4>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-10">
                                                <div class="tableDiv v-scroll">
                                                    <table class="text-center">
                                                        <thead>
                                                            <tr>
                                                                <th>S/N</th>
                                                                <th class="px-5">Date</th>
                                                                <th class="px-5">Time</th>
                                                                <th class="px-5">Nature_Of_Fluid</th>
                                                                <th class="px-5">Oral</th>
                                                                <th class="px-5">Rectal</th>
                                                                <th class="px-5">IV(ml)</th>
                                                                <th class="px-5">OtherRoutes</th>
                                                                <th class="px-5">Total</th>
                                                                <th class="px-5">Remarks</th>
                                                                <th class="px-5">Urine</th>
                                                                <th class="px-5">Vomit</th>
                                                                <th class="px-5">Tube</th>
                                                                <th class="px-5">Others</th>
                                                                <th class="px-5">Total</th>
                                                                <th class="px-5">Balance</th>
                                                                <th class="px-5">Chloride</th>
                                                                <th class="px-5">Remarks</th>
                                                                <th class="px-5">Protect</th>
                                                                <th class="px-5">RECID</th>
                                                                <th class="px-5">Posted</th>
                                                                <th class="px-5">Updated</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="fluidTbody"></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="col-md-2 d-flex justify-content-around align-items-center flex-wrap">
                                                <input type="button" value="Submit" class="btn fluidSubmitBtn" />
                                                <input type="button" value="Remove" class="btn fluidRemoveBtn" />
                                                <input type="button" value="Graph" class="btn fluidGraphBtn" />
                                            </div>
                                        </div>
                                    </div>

                                    <div id="diabeticChart" class="tab-pane fade in">
                                        <div class="row">
                                            <div class="col-md-10">
                                                <div class="tableDiv v-scroll">
                                                    <table class="text-center">
                                                        <thead>
                                                            <tr>
                                                                <th class="">S/N</th>
                                                                <th class="px-5">DateTime</th>
                                                                <th class="px-5">Time</th>
                                                                <th class="px-5">Rbs</th>
                                                                <th class="px-5">FBS</th>
                                                                <th class="px-5">Urinalysis</th>
                                                                <th class="px-5">Acetone</th>
                                                                <th class="px-5">Drug_Administration</th>
                                                                <th class="px-5">Remarks</th>
                                                                <th class="px-5">Operator</th>
                                                                <th class="px-5">Protect</th>
                                                                <th class="px-5">RECID</th>
                                                                <th class="px-5">Posted</th>
                                                                <th class="px-5">Updated</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="diabTbody"></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="col-md-2 d-flex justify-content-around align-items-center flex-wrap">
                                                <input type="button" value="Submit" class="btn diabSubmitBtn" />
                                                <input type="button" value="Remove" class="btn diabRemoveBtn" />
                                                <input type="button" value="Print" class="btn diabPrintBtn" />
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </section>

                        <section>
                            <div class="dif d-flex justify-content-around">
                                <input type="button" value="Back" class="btn obBackBtn" />
                            </div>
                        </section>
                    </section>

                    <section class="tab-pane fade in specServPatients">
                        <section>
                            <div class="dif text-center red">
                                <label class="la1 cwh drk">SERVICES AT DESIGNATED CENTRES - Select Facility/Service Items</label>
                            </div>
                        </section>

                        <section class="borderLine py-2">
                            <div class="row mt-2">
                                <div class="col-md-6">
                                    <div class="newline mb-1">
                                        <span>
                                            <label class="label w-4 drk">Patients's GroupCode :</label>
                                            <input type="text" name="txt" value="" class="input w-5 SSPpatGroupCode lData1" />
                                            <input type="button" id="refLookUp17" name="btn" value="" class="btn-small clm" />
                                        </span>
                                    </div>
                                    <div class="newline mb-1">
                                        <span class="">
                                            <label class="label w-4 drk">Hospital Card Number :</label>
                                            <input type="text" name="txt" value="" class="input w-5 SSPhospitalNo lData2 mData1" />
                                            <input type="button" id="refLookUp18" name="btn" value="" class="btn-small clm" />
                                        </span>
                                    </div>

                                    <div class="newline">
                                        <label class="label w-3 drk">Name :</label>
                                        <input type="text" name="txt" value="" class="input w-8 SSPfullName" />
                                    </div>
                                    <div class="newline">
                                        <label class="label w-3 drk">Address :</label>
                                        <input type="text" name="txt" value="" class="input w-8 SSPaddress" />
                                    </div>
                                    <div class="newline">
                                        <label class="label w-3 drk">E-Mail :</label>
                                        <input type="text" name="txt" value="" class="input w-8 SSPemail" />
                                    </div>
                                    <div class="newline">
                                        <label class="label w-3 drk">Phone :</label>
                                        <input type="text" name="txt" value="" class="input w-8 SSPphone" />
                                    </div>
                                    <div>
                                        <scan class="newline">
                                            <label class="label w-3 drk">SEX :</label>
                                            <select name="cbo" class="input w-3 w-50 increase-height SSPgender">
                                                <option value=""></option>
                                                <option value="MALE">MALE</option>
                                                <option value="FEMALE">FEMALE</option>
                                            </select>
                                        </scan>
                                        <scan class="newline">
                                            <label class="label w-1 drk">AGE :</label>
                                            <input type="text" name="txt" value="" class="input w-3 SSPage" />

                                            @*<select name="cbo" class="input w-3 w-50 increase-height SSPage">
                                                <option value=""></option>
                                                <option value="Adult">Adult</option>
                                                <option value="1Year">1 Year</option>
                                                <option value="2Years">2 Years</option>
                                                <option value="3Years">3 Years</option>
                                                <option value="4Years">4 Years</option>
                                                <option value="5Years">5 Years</option>
                                                <option value="6Years">6 Years</option>
                                            </select>*@
                                        </scan>
                                    </div>

                                </div>

                                <div class="col-md-6">
                                    <div class="newline n1">
                                        <label class="label w-4 drk">Bills Payable By :</label>
                                        <select name="cbo" class="input w-5 w-50 increase-height SSPbillsPayableBy">
                                            <option value=""></option>
                                            <option value="S">SELF</option>
                                            <option value="P">P\ANOTHER PATIENT</option>
                                            <option value="C">COPERATE CLIENT</option>
                                        </select>
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 drk">GroupCode :</label>
                                        <input type="text" name="txt" value="" class="input w-5 SSPghgroupcode nData1" />
                                        <input type="button" id="refLookUp19" name="btn" value="" class="btn-small clm SSPghgroupcode" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 drk">Code :</label>
                                        <input type="text" name="txt" value="" class="input w-5 SSPgrouphead nData2 oData1 pData1" />
                                        <input type="button" id="refLookUp20" name="btn" value="" class="btn-small clm" />
                                        <input type="button" id="refLookUp21" name="btn" value="" class="btn-small clm" />
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 drk">Referring Doc/Clinic :</label>
                                        @*<select name="cbo" class="input w-5 w-50 increase-height">
                                            <option value=""></option>
                                        </select>*@
                                        @Html.DropDownListFor(m => m.CUSTOMER.NAME,
                                            new SelectList(Model.CUSTOMERS, "CUSTNO", "NAME"), "",
                                            new { @id = "", @class = "input w-5 w-50 increase-height SSPreferrer" })
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-4 drk">Transaction Date :</label>
                                        <input type="datetime-local" value="@String.Format("{0:yyyy-MM-ddThh:mm:ss}", DateTime.Now)"
                                                class="input w-6 w-50 ivGG7 SSPtransDate" name="" />
                                    </div>
                                    <div class="newline">
                                        <label for="chkdep" class="drk w-3">Get Dependants</label>
                                        <input type="checkbox" id="chkdep" name="chk" class="chkgetdependants" />
                                    </div>
                                    <div>
                                        <span class="title SSPgroupHeadName"></span>
                                    </div>
                                </div>
                            </div>

                        </section>

                        <section class="borderLine py-3">
                            <div class="d-flex justify-content-around">
                                <span class="">
                                    <label class="label w-4 cred drk">REQUEST ALERT -></label>
                                    <select name="cbo" class="input w-4 increase-height SSPrequestAlert" id="ivgRqA">
                                        <option value=""></option>
                                        <option value="Urgent/Emergency">Urgent / Emergency</option>
                                        <option value="Routine">Routine</option>
                                    </select>
                                </span>
                                <span class="">
                                    <label class="label w-3 drk"><i>Capitated</i></label>
                                    <input type="text" name="txt" value="" class="input w-4 capitated" />
                                </span>
                            </div>
                        </section>

                        <section class="borderLine py-3">

                            <div class="row ">
                                <div class="col-md-8">
                                    <div class="newline">
                                        <span>
                                            <label class="label w-4 drk">Service Unit/Facility</label>
                                            @Html.DropDownListFor(m => m.SYSCODETABSvm.ServiceCentreCodes.name,
                            new SelectList(Model.SYSCODETABSvm.ServiceCentreCodess, "type_code", "name"), "",
                            new { @id = "ivgFac", @class = "input w-7 increase-height SSPfacility" })

                                            <label class="ll pr-5 drk labelSSPfacility">...</label>
                                        </span>
                                    </div>
                                    <div class="newline">
                                        <label class="label w-4 drk">Service Required</label>
                                        <select name="cbo" id="ivgServ" class="input w-7 increase-height SSPservRequired">
                                            <option value=""></option>
                                        </select>
                                        <input type="button" name="btn" value="" class="btn-small" />

                                        <span class="">
                                            <input type="hidden" id="refLookUp" />
                                            <input type="checkbox" id="noteChk" />
                                            <label for="LookUp" class="drk notesLabel">NOTES</label>
                                        </span>
                                    </div>
                                    <div class="newline">
                                        <span>
                                            <label class="label w-4 drk drk">Grouped Procedures</label>
                                            @Html.DropDownListFor(m => m.GRPPROCEDURE.NAME,
                            new SelectList(Model.GRPPROCEDURES, "REFERENCE", "NAME"), "",
                            new { @id = "ivgGrpd", @class = "input w-7 increase-height grpProcedure" })
                                        </span>
                                        <span>
                                            <label class="ll pr-5 drk labelProcedure">...</label>
                                        </span>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="newline">
                                        <label class="label w-3 drk">Duration</label>
                                        <input type="number" name="range" value="0" id="ivgDur" class="input w-3 design ivGG10 SSPduration" />
                                    </div>

                                    <div class="newline">
                                        <label class="label w-3 drk">AMOUNT</label>
                                        <input type="number" name="range" value="0" id="ivgAmt" class="input w-3 design ivGG3 SSPamount" />
                                    </div>

                                    <div class="newline">
                                        <label class="label w-3 drk">Current Total</label>
                                        <input type="number" name="range" value="0" id="ivgTot" class="input w-3 design SSPcurrentTotal" />
                                    </div>
                                </div>
                            </div>

                        </section>

                        <section class="borderLine">
                            <div class="row py-3 d-flex justify-content-around">
                                <span class="">
                                    <input type="button" name="btn" value="ADD Selection" id="ivgADD" class="btn SSPaddBtn" />
                                </span>
                                <span>
                                    <input type="button" name="btn" value="Clear Selections" class="btn clearSelectn" />
                                </span>
                            </div>
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>S/N</th>
                                            <th style="padding: 0rem 6rem !important;">Facility</th>
                                            <th class="px-5">Procedure</th>
                                            <th class="px-5">Amount</th>
                                            <th class="px-5">Code</th>
                                            <th class="px-5">BillCode</th>
                                            <th style="padding: 0rem 10rem !important;">Notes</th>
                                            <th style="padding: 0rem 6rem !important;">ReqDate</th>
                                            <th class="px-5">Capitated</th>
                                            <th class="px-5">GrpItem</th>
                                            <th class="px-5">Duration</th>
                                            <th class="px-5">Done</th>
                                            <th class="px-5">NewReq</th>
                                            <th class="px-5">UnitCode</th>
                                            <th class="px-5">GroupBillByType</th>
                                            <th class="px-5">GroupBillDesc</th>
                                            <th class="px-5">RECID</th>
                                        </tr>
                                    </thead>

                                    <tbody class="tbody text-center"></tbody>
                                </table>
                            </div>

                        </section>

                        <section class="">
                            <div class="gry py-3">
                                <div class="alc">
                                    <input type="button" value="Submit" id="ivgSubmit" class="btn SSPsubmitBtn" />
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <a href="~/Home/Index" title="Close"><input type="button" name="" value="Close" class="btn oraa" /></a>
                                </div>
                            </div>
                        </section>

                        <input type="hidden" value="" class="amtsaveHiddenValue" />
                        <input type="hidden" value="" class="SSPhiddenBillCode" />
                        <input type="hidden" value="" class="hiddenSaveGroup" />
                        <input type="hidden" value="" class="hiddenNewRec" />
                        <input type="hidden" value="false" class="hiddenGroupItem" />
                        <input type="hidden" value="" class="hiddenIsPosted" />

                        <input type="hidden" value="" class="hiddenAmendFlag" />
                        <input type="hidden" value="" class="existingCode" />
                        <input type="hidden" value="false" class="hiddenCashPaying" />

                        <input type="hidden" class="revnewrec" value="false" />
                    </section>

                    <section class="prescription">
                        <section class="pt-3 pb-2">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="newline">
                                        <label class="label w-5 drk">Drug / Stock Description</label>
                                        <input type="text" value="" class="input w-4 increase-height qData1 prescStockDisc" />
                                        <input type="button" id="refLookUp23" class="btn-small" />
                                    </div>
                                    <div class="newline">
                                        <span>
                                            <label class="label w-5 drk"></label>
                                            <input type="text" value="" class="input w-6 increase-height prescDescription" />
                                        </span>
                                        <b class="cred lblQtyPack">...</b>
                                    </div>
                                    <div class="newline n1">
                                        <label class="label w-5 drk">Routine Drugs</label>
                                        @Html.DropDownListFor(m => m.ROUTDRGS.REFERENCE,
                                             new SelectList(Model.ROUTDRGSS, "REFERENCE", "REFERENCE"), "",
                                             new { @class = "input w-6 increase-height prescRoutineDrugs" })
                                    </div>
                                    <div class="newline">
                                        <label class="label w-5 drk">Current Total</label>
                                        <input type="number" value="" class="input w-4 increase-height prescCurTotal" placeholder="0:00" />
                                    </div>
                                    <div class="newline">
                                        <label class="label w-5 drk">Capitated</label>
                                        <input type="number" value="" class="input w-4 increase-height prescCapitated" placeholder="0:00"/>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="newline">
                                                <label class="label w-2 drk">Unit_Cost</label>
                                                <input type="number" value="" class="input w-3 increase-height prescUnitCost" placeholder="0:00" />
                                            </div>
                                            <div class="newline">
                                                <span>
                                                    <label class="label w-2 drk">Unit_ID</label>
                                                    <select class="input w-3 increase-height prescUnitId">
                                                        <option value=""></option>
                                                        <option value="Tabs">Tabs</option>
                                                        <option value="Caps">Caps</option>
                                                        <option value="Amp">Amp</option>
                                                        <option value="Vial">Vial</option>
                                                        <option value="Drops">Drops</option>
                                                        <option value="Syringe">Syringe</option>
                                                        <option value="Btl">Btl</option>
                                                        <option value="Unit">Unit</option>
                                                        <option value="Mg">Mg</option>
                                                        <option value="mls">mls</option>
                                                        <option value="Bag">Bag</option>
                                                        <option value="Others">Others</option>
                                                    </select>
                                                </span>
                                                <span>
                                                    <b class="cred lblUnitId">...</b>
                                                </span>
                                            </div>
                                            <div class="newline">
                                                <label class="label w-2 drk">Duration</label>
                                                <select class="input w-3 increase-height prescDuration">
                                                    <option value=""></option>
                                                    <option value="1">1 day</option>
                                                    <option value="2">2 days</option>
                                                    <option value="3">3 days</option>
                                                    <option value="4">4 days</option>
                                                    <option value="5">5 days</option>
                                                    <option value="6">7 days</option>
                                                    <option value="7">14 days</option>
                                                    <option value="8">21 days</option>
                                                    <option value="9">28 days</option>
                                                    <option value="10">Others-Specify</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="newline">
                                                <label class="label w-2 drk">Dose</label>
                                                <input type="number" value="" class="input w-3 increase-height prescDose" placeholder="0:00" />
                                            </div>
                                            <div class="newline">
                                                <label class="label w-2 drk">Interval</label>
                                                <select class="input w-3 increase-height prescInterval">
                                                    <option value=""></option>
                                                    <option value="1">once daily</option>
                                                    <option value="2">twice a day</option>
                                                    <option value="3">3 times daily</option>
                                                    <option value="4">4 times daily</option>
                                                    <option value="5">5 times daily</option>
                                                    <option value="6">every 3 hrs</option>
                                                    <option value="7">every 4 hrs</option>
                                                    <option value="8">every 6 hrs</option>
                                                    <option value="9">every 8 hrs</option>
                                                    <option value="10">every 12 hrs</option>
                                                    <option value="11">every other day</option>
                                                    <option value="12">freely as needed</option>
                                                    <option value="13">when necessary(prn)</option>
                                                    <option value="14">Others-Specify</option>
                                                </select>
                                            </div>
                                            <div class="newline">
                                                <label class="label w-2 drk">When/How</label>
                                                <select class="input w-3 increase-height prescWhenHow">
                                                    <option value=""></option>
                                                    <option value="1">Stat</option>
                                                    <option value="2">Mane</option>
                                                    <option value="3">Nocte</option>
                                                    <option value="4">As Needed</option>
                                                    <option value="5">I.M</option>
                                                    <option value="6">I.V</option>
                                                    <option value="7">Before Meal</option>
                                                    <option value="8">After Meal</option>
                                                    <option value="9">Don't Crush </option>
                                                    <option value="10">PO (Pa Oral)</option>
                                                    <option value="11">At Bedtime</option>
                                                    <option value="12">Between Meal</option>
                                                    <option value="13">Others - Specify</option>
                                                </select>
                                            </div>
                                            <div class="newline">
                                                <label class="label w-2 drk">Qty Reqd</label>
                                                <input type="number" value="" class="input w-3 increase-height prescQtyReqd" placeholder="0:00" />
                                            </div>
                                        </div>
                                    </div>
                                   
                                </div>
                            </div>
                        </section>

                        <section class="pb-4">
                            <div class="mt-3">
                                <div class="text-center">
                                    <b style="font-size: 15px">Special Instructions</b>
                                </div>
                                <div class="text-center">
                                    <textarea class="prescSpecInstrn"></textarea>
                                </div>
                            </div>
                        </section>

                        <section class="borderLine">
                            <div class="d-flex justify-content-around align-items-center py-2">
                                <input type="button" value="Drug Information" class="btn" />
                                <input type="button" value="Add" class="btn prescAddBtn" />
                                <input type="button" value="Clear Selection" class="btn prescClearSelectBtn" />
                                <img src="~/content/images/preschistorybtn.png" class="pointer prescHistoryBtn"/>
                            </div>
                        </section>

                        <section>
                            <div class="tableDiv v-scroll">
                                <table>
                                    <thead>
                                        <tr>
                                            <th class="">S/N</th>
                                            <th class="px-5">Description</th>
                                            <th class="px-5">Unit_Cost</th>
                                            <th class="px-5">Qty_Av</th>
                                            <th class="px-5">Qty_Reqd</th>
                                            <th class="px-5">Unit</th>
                                            <th class="px-5">Total_Cost</th>
                                            <th class="px-5">Dose</th>
                                            <th class="px-5">Interval</th>
                                            <th class="px-5">Duration</th>
                                            <th class="px-5">When_And_How</th>
                                            <th class="px-5">Spec_Instrn</th>
                                            <th class="px-5">Cum_Given</th>
                                            <th class="px-5">Interval</th>
                                            <th class="px-5">Duration</th>
                                            <th class="px-5">Dose</th>
                                            <th class="px-5">Capitated</th>
                                            <th class="px-5">Posted</th>
                                            <th class="px-5">RECID</th>
                                            <th class="px-5">Unit_Pur_Val</th>
                                            <th class="px-5">Stk_Code</th>
                                            <th class="px-5">Edited</th>
                                            <th class="px-5">Req_Consumable</th>
                                        </tr>
                                    </thead>
                                    <tbody class="prescTbody text-center"></tbody>
                                </table>
                            </div>
                        </section>

                        <section class="borderLine py-3">
                            <div class="d-flex justify-content-around align-items-center">
                                <input type="button" value="Tips" class="btn prescTipsBtn" />

                                <input type="button" value="Convert OPD Presc" class="btn prescConvertOPDBtn" />

                                <div>
                                    <input type="checkbox" id="chkInp1" class="prescChkInpatient" />
                                    <label for="chkInp1" class="drk">In-Patient Prescription</label>
                                </div>

                                <div>
                                    <input type="checkbox" id="chkTTH" class="prescTTH" />
                                    <label for="chkTTH" class="drk">TTH</label>
                                </div>

                                <input type="button" value="Write/Save Presc" class="btn prescWriteSaveBtn" />

                                <div>
                                    <input type="checkbox" id="chkDeb" class="" />
                                    <label for="chkDeb" class="drk">Debit Private Account</label>
                                </div>

                                <input type="button" value="Back" class="btn prescBackBtn" />
                            </div>
                        </section>

                        <input type="hidden" value="" class="dtlastattend" />
                        <input type="hidden" value="" class="prescGroupCode" />
                        <input type="hidden" value="" class="prescPatientNo" />
                        <input type="hidden" value="0" class="reqAlertCount" />
                        <input type="hidden" value="0" class="prescRecno" />
                        <input type="hidden" value="0" class="Stkstrength" />
                        <input type="hidden" value="0" class="stkper" />
                        <input type="hidden" value="0" class="packqty" />
                        <input type="hidden" value="false" class="isconvertable" />
                        <input type="hidden" value="0" class="minterval" />
                        <input type="hidden" value="0" class="mduration" />
                        <input type="hidden" value="0" class="mdose" />
                        <input type="hidden" value="0" class="mcumgv" />
                        <input type="hidden" value="" class="txtdose" />
                        <input type="hidden" value="" class="unitIDsave" />
                        <input type="hidden" value="false" class="isanc" />
                        <input type="hidden" value="false" class="iscapitated" />
                        <input type="hidden" value="" class="mstkcode" />
                        <input type="hidden" value="" class="qtyAvailable qData2" />
                        <input type="hidden" value="0" class="unitPurchase" />
                        <input type="hidden" value="" class="phamalterstr" />
                        <input type="hidden" value="false" class="prescNewRec" />
                        <input type="hidden" value="false" class="prescAmendFlag" />
                        <input type="hidden" value="" class="requestalert" />
                        <input type="hidden" value="" class="inprtnstring" />
                        <input type="hidden" value="false" class="inpatient" />
                        
                        
                    </section>
                </section>

                <!--Change Bed / Room-->
                <section id="ChangeBed_Room" class="tab-pane fade in">
                    <section class="pt-2">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Admission Reference</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height cbAdmReference iData1" />
                                    <input type="button" id="refLookUp11" value="" class="btn-small" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="newline n1">
                                    <input type="checkbox" id="cbCurAdmin" value="True" class="isCHK chkCBCurAdmin" />
                                    <label for="cbCurAdmin" class="label drk">Current Admissions</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Date of Admission</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height cbDateOfAdm" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients Group Code</label>
                                    <input type="text" value="" class="input w-4 w-50 increase-height cbGroupCode" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients No.</label>
                                    <input type="text" value="" class="input w-4 w-50 increase-height cbPatientNo" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <div class="bigInput cbProfile"></div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Date of Discharge</label>
                                    <input type="text" value="" class="input w-3 w-50 increase-height cbDateOfDisch" />
                                    <b class="label cred lblDischarge">...</b>
                                </div>
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Facility</label>
                                    <input type="text" class="input w-4 w-50 increase-height cbFacilityLabel" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="pb-2">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Name</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height cbName" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Address</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height cbAddress" />
                                </div>
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-4 w-35 drk">Diagnosis</label>
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height cbDiagnosis" />
                                    </span>
                                    <span class="pl-3">
                                        <input type="text" value="" class="input w-7 w-50 increase-height cbGroupHead" />
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-3 w-35 drk">Ward/Room</label>
                                        <input type="text" name="txt" value="" class="input w-2 w-50 increase-height cbRoom1" />
                                    </span>
                                    <span>
                                        <label class="label w-35 drk">Bed</label>
                                        <input type="text" name="txt" value="" class="input w-2 w-50 increase-height cbBed1" />
                                    </span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Old Rate</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height cbOldRate" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Cummulative</label>
                                    <input type="number" placeholder="0.00" value="" class="input w-5 w-50 increase-height cbCummulative" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="py-3 borderLine">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-2 w-35 drk">Facility</label>
                                    @Html.DropDownListFor(m => m.SYSCODETABSvm.ServiceCentreCodes.name,
                                         new SelectList(Model.SYSCODETABSvm.ServiceCentreCodess, "type_code", "name"), "",
                                         new { @class = "input w-5 increase-height cbFacility" })                                
                                </div>
                                <div class="new">
                                    <span>
                                        <label class="label w-2 w-35 drk">Date</label>
                                        <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-4 w-50 increase-height cbDate" />
                                    </span>
                                    <span>
                                        <label class="label w-1 w-35 drk">Time</label>
                                        <input type="text" value="" class="input w-3 w-50 increase-height" />
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Room / Ward</label>
                                    <select class="input w-3 w-50 increase-height cbRoom2"></select>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Bed</label>
                                    <select class="input w-3 w-50 increase-height cbBed2"></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">New PNC</label>
                                    <input type="number" placeholder="0.00" value="" class="input w-4 w-50 increase-height cbNewPNC" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">New Rate</label>
                                    <input type="number" placeholder="0.00" value="" class="input w-4 w-50 increase-height cbNewRate" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="py-3">
                        <div class="row d-flex justify-content-around">
                            <input type="button" value="Submit" class="btn cbSubmitBtn"/>
                        </div>
                    </section>

                    <section>
                        <div class="tableDiv v-scroll">
                            <table class="text-center">
                                <thead>
                                    <tr>
                                        <th class="px-5">S/N</th>
                                        <th class="px-5">Facility</th>
                                        <th class="px-5">Room/Ward ID</th>
                                        <th class="px-5">Bed</th>
                                        <th class="px-5">Daily Rate</th>
                                        <th class="px-5">Occupant</th>
                                        <th class="px-5">Description</th>
                                        <th class="px-5">PNC</th>
                                        <th class="px-5">Date_Reg</th>
                                        <th class="px-5">NEWREC</th>
                                        <th class="px-5">Posted</th>
                                        <th class="px-5">Fac_Code</th>
                                        <th class="px-5">RECID</th>
                                        <th class="px-5">Deposit</th>
                                    </tr>
                                </thead>
                                <tbody class="cbTbody"></tbody>
                            </table>
                        </div>
                    </section>
                </section>

                <!--Discharge-->
                <section id="Discharge" class="tab-pane fade in">
                    <section class="pt-2">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Admission Reference</label>
                                    <input type="text" value="" class="input w-4 w-50 increase-height jData1 dAdmReference" />
                                    <input type="button" id="refLookUp12" value="" class="btn-small" />
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="newline n1">
                                    <input type="checkbox" id="dCurAdmin" value="True" class="isCHK chkdCurAdmin" />
                                    <label for="dCurAdmin" class="label drk">Current Admissions</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Date of Admission</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height dDateOfAdm" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients Group Code</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height dGroupCode" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Patients No.</label>
                                    <input type="text" name="txt" value="" class="input w-4 w-50 increase-height dPatientNo" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <div class="bigInput dProfile"></div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Date of Discharge</label>
                                    <input type="text" name="txt" value="" class="input w-3 w-50 increase-height dDateOfDisch" />
                                    <label class="label cred dLblDischarge">...</label>
                                </div>
                                <div class="newline n1 marginleft">
                                    <label class="label w-4 w-35 drk">Facility</label>
                                    <input type="text" class="input w-4 w-50 increase-height dFacility" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="pb-2">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Name</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height dName" />
                                </div>
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-4 w-35 drk">Address</label>
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height dAddress" />
                                    </span>
                                    <span class="pl-3">
                                        <input type="text" name="txt" value="" class="input w-7 w-50 increase-height dGroupHead" />
                                    </span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Diagnosis</label>
                                    <input type="text" name="txt" value="" class="input w-7 w-50 increase-height dDiagnosis" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Ward/Room</label>
                                    <input type="text" name="txt" value="" class="input w-3 w-50 increase-height dRoom" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-3 w-35 drk">Bed</label>
                                    <input type="text" name="txt" value="" class="input w-3 w-50 increase-height dBed" />
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="borderLine py-3">
                        <div class="d-flex justify-content-around">
                            <a href="@Url.Action("", "File")" target="_blank" class="">
                                <button type="button" class="btn dPrintBillsBtn">
                                    Print Bills
                                </button>
                            </a>

                            <input type="button" value="Submit" class="btn dSubmitBtn" />
                        </div>
                    </section>

                    <section class="borderLine py-3">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Discharge Date</label>
                                    <input type="date" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now)" class="input w-5 w-50 increase-height dDate" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Time</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height dTime" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Doctor</label>
                                    @Html.DropDownListFor(m => m.DOCTORS.NAME,
                                         new SelectList(Model.DOCTORSS, "reference", "name"), "",
                                         new { @class = "input w-5 increase-height dDoctor" })
                                </div>
                                <div class="newline n1">
                                    <label class="label w-4 w-35 drk">Reason</label>
                                    @Html.DropDownListFor(m => m.SYSCODETABSvm.mrPatDischReasons.NAME,
                                         new SelectList(Model.SYSCODETABSvm.mrPatDischReasonss, "type_code", "NAME"), "",
                                         new { @class = "input w-5 increase-height dReason" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="newline n1">
                                    <label class="label w-6 w-35 drk">Accumulated Charge</label>
                                    <input type="number" placeholder="0.00" value="" class="input w-5 w-50 increase-height dAccumCharge" />
                                </div>
                                <div class="newline n1">
                                    <span>
                                        <label class="label w-6 w-35 drk">Professional Charge to be added</label>
                                        <input type="number" placeholder="0.00" value="" class="input w-5 w-50 increase-height dProfCharge" />
                                    </span>
                                    <span>
                                        <b class="cred dLblProf">...</b>
                                    </span>
                                </div>
                                <div class="newline n1">
                                    <label class="label w-6 w-35 drk">Raise Bill</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height dRaiseBill" />
                                </div>
                                <div class="newline n1">
                                    <label class="label w-6 w-35 drk">Last Bill Date</label>
                                    <input type="text" name="txt" value="" class="input w-5 w-50 increase-height" />
                                </div>
                            </div>
                        </div>
                        <div class="py-3">
                            <h4 class="text-center drk">Comment</h4>
                            <div class="row">
                                <div class="col-md-8 offset-2">
                                    <textarea value="" class="dCommentText"></textarea>

                                    <div class="mt-3">
                                        <label for="chkDeathRecs" class="label drk">Death Records</label>
                                        <input type="checkbox" id="chkDeathRecs" value="" class="" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>

                </section>

                <!--ServiceItems-->
                <section id="ServiceItems" class="tab-pane fade in">
                    <div class="dif">
                        <div class="borderLine text-center py-3">
                            <h4>DEFINE / EDIT ADMISSION SERVICES GROUPING FOR BILLING SUMMARY</h4>
                        </div>

                        <section class="borderLine py-4">
                            <div class="d-flex justify-content-around">
                                <span>
                                    <label class="label w-4 w-35 drk">Service/Tariff Item</label>
                                    @Html.DropDownListFor(m => m.TARIFF.NAME,
                                        new SelectList(Model.TARIFFS, "Reference", "Name"), "",
                                        new { @class = "input w-5 increase-height siProcedure" })                                    <input type="button" name="btn" value="" class="btn-small" />
                                </span>
                                <span>
                                    <label class="label w-4 w-35 drk">Desired Description</label>
                                    <input type="text" name="txt" value="" class="input w-6 w-50 increase-height siDesiredDesc" />
                                </span>
                                <span>
                                    <input type="button" value="ADD" class="btn siAddBtn" />
                                </span>
                            </div>
                        </section>

                        <section>
                            <div class="row">
                                <div class="col-md-10">
                                    <div class="tableDiv2 v-scroll">
                                        <table class="">
                                            <thead>
                                                <tr>
                                                    <th class="alc "> S/N </th>
                                                    <th class="alc ">HEADER DESCRIPTION</th>
                                                    <th class="alc ">TARIFF CODE</th>
                                                    <th class="alc ">STATUS</th>
                                                </tr>
                                            </thead>
                                            <tbody class="siTbody text-center">
                                                @{int num = 0; }

                                                @foreach (var dispserv in Model.DISPSERVS)
                                                {
                                                    <tr>
                                                        <td>@(++num)</td>
                                                        <td>@dispserv.DESCRIPTION</td>
                                                        <td>@dispserv.REFERENCE</td>
                                                        <td>OldRec</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                </div>

                                <div class="col-md-2 d-flex justify-content-around align-items-center flex-wrap">
                                    <input type="button" value="Delete" class="btn siDeleteBtn" />
                                    <input type="button" value="Submit" class="btn siSubmitBtn" />
                                </div>
                            </div>
                        </section>
                    </div>


                    <input type="hidden" value="false" class="btn siNewRec" />
                    <input type="hidden" value="" class="btn siRecNo" />

                </section>
                
                <!--Footer-->
                <section class="borderLine py-4">
                    <div class="d-flex justify-content-around">
                        <a href="@Url.Action("", "File")" target="_blank" class="">
                            <button type="button" class="btn dServiceLedgerBtn">
                                Service Ledger
                            </button>
                        </a>

                        <a href="~/Home/Index" title="Close"><input type="button" name="Close" value="Close" class="btn oraa" /></a>
                    </div>
                </section>


                <input type="hidden" class="woperator" value="@Model.REPORTS.REPORT_TYPE1" />
                <input type="hidden" class="dateNow" value="@DateTime.Now.ToShortDateString()" />
                <input type="hidden" class="timeNow" value="@DateTime.Now.ToShortTimeString()" />
                <input type="hidden" class="dateHourMinSec" value="@DateTime.Now.ToString("mm-DD-yyyy @ HH:mm:ss")" />
                <input type="hidden" class="msection" value="@Model.REPORTS.msection" />
                <input type="hidden" class="mreference" value="" />
                <input type="hidden" class="mgrouphtype" value="" />
                <input type="hidden" class="mpatientno" value="" />
                <input type="hidden" class="mgroupcode" value="" />
                <input type="hidden" class="mgrouphead" value="" />
                <input type="hidden" class="mdoctor" value="" />
                <input type="hidden" class="mdoc_seclevel" value="" />
                <input type="hidden" class="savedCaseNote" value="" />
                <input type="hidden" class="Globalsmcandelete" value="@msmrfunc.mrGlobals.mcandelete" />
                
            </div>
            
        </div>
        
    </form>
</section>




@section scripts
{
    <script>
        $(document).ready(function () {
            var dOM = $('body'); //must assign
            var formFields = document.getElementById('mainForm'); //must assign, used for calling javaScript methods
            appendTagInvalid1(dOM, "@ViewBag.iinvalid"); //must call
            servErrorAlert("#eLkUp", "@ViewBag.Msg"); //must call

            var dTHN1 = ['NAME/PATIENTNO/GROUPCODE', 'REFERENCE', 'ADM_DATE', 'DISCHARGE', 'ROOM/BED', 'GROUPHEAD', 'CUMM_AMOUNT', 'PAYMENT']; //for table header
            var dBCN1 = ['NAME', 'REFERENCE', 'ADM_DATE', 'DISCHARGE', 'ROOM', 'GROUPHEAD', 'ACAMT', 'PAYMENTS']; //for database header
            var jaxURL1 = "@Url.Action("RptAdmLookUp", "AJAX")";

            var dTHN2 = ['NAME', 'GROUPCODE', 'PATIENTNO', 'RESIDENCE', 'GROUPHEAD', 'SEX', 'PHONE']; //for table header
            var dBCN2 = ['NAME', 'GROUPCODE', 'PATIENTNO', 'RESIDENCE', 'GROUPHEAD', 'SEX', 'PHONE']; //for database header
            var jaxURL2 = "@Url.Action("RptBillChainLookUp", "AJAX")";

            var dTHN3 = ['NAME', 'REFERENCE', 'ADDRESS']; //for table header
            var dBCN3 = ['NAME', 'CUSTNO', 'ADDRESS1']; //for database header
            var jaxURL3 = "@Url.Action("RptCustomerLookUp", "AJAX")";

            var dTHN3 = ['DESCRIPTION', 'CODE', 'STORE', 'QUANTITY', 'GENERIC', 'UNIT_COST', 'STATUS']; //for table header
            var dBCN3 = ['name', 'item', 'store', 'stock_qty', 'generic', 'cost', 'status']; //for database header
            var jaxURL3 = "@Url.Action("RptStockLookUp", "AJAX")";


            //For Registration Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp1', '#1LkUp', '#regPTable1', '.cData', [3], '#regCurAdmin');

            //For Registration group code
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp2', '#2LkUp', '#regPTable2', '.dData', [4, 3]);

            //For Registration Patient No.
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp3', '#3LkUp', '#regPTable3', '.eData', [4, 3]);

            //For Service Update Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp7', '#7LkUp', '#regPTable7', '.fData', [3], '#suCurAdmin');

            //For Service Update In-patient Prescrition Modal Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp9', '#9LkUp', '#regPTable9', '.gData', [3], '#chkInPresc');

            //For Review Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp10', '#10LkUp', '#regPTable10', '.hData', [3], '#revCurAdmin');

            //For Change Bed Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp11', '#11LkUp', '#regPTable11', '.iData', [3], '#cbCurAdmin');

            //For Discharge Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp12', '#12LkUp', '#regPTable12', '.jData', [3], '#dCurAdmin');

            //For Review Observation Chart Reference
            LoadDynamicDT1(jaxURL1, dTHN1, dBCN1, 'ADMRECSS', '#refLookUp16', '#16LkUp', '#regPTable16', '.kData', [3], '#obCurAdmin');

            //For SSPpatientGroupCode
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp17', '#17LkUp', '#regPTable17', '.lData', [3, 4]);

            //For SSPhospitalNo
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp18', '#18LkUp', '#regPTable18', '.mData', [4]);

            //For SSPGroupCode
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp19', '#19LkUp', '#regPTable19', '.nData', [3, 4]);

            //For SSPcode
            LoadDynamicDT1(jaxURL3, dTHN3, dBCN3, 'CUSTOMERS', '#refLookUp20', '#20LkUp', '#regPTable20', '.oData', [3]);

            //For SSPcodeHidden
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp21', '#21LkUp', '#regPTable21', '.pData', [3]);

            //For SSPcodeHidden
            LoadDynamicDT1(jaxURL2, dTHN2, dBCN2, 'BILLCHAINS', '#refLookUp21', '#21LkUp', '#regPTable21', '.pData', [3]);

            //For prescriptions
            LoadDynamicDT1(jaxURL3, dTHN3, dBCN3, 'stocks', '#refLookUp23', '#23LkUp', '#regPTable23', '.qData', [3, 5]);


            //clear control function
            function ClearControls() {
                location.reload(true);
                scrollToTop();
            }


//============================================================ Space Definition ===============================================================
            //On Load
            $(".spacDefRelBedSpBtn").prop({ disabled: true });
            $(".spacDefDeleteBtn").prop({ disabled: true });
            $(".spacDefSubmitBtn").prop({ disabled: true });


            $(".spacDefFacility").on({
                change: function () {
                    let spacDefFacility = $(this).val();

                    if(spacDefFacility == "" || spacDefFacility == null){
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/spacDefFacilityFocusout",
                        method: "POST",
                        data: { spacDefFacility: spacDefFacility },
                        success: function (data) {
                            let admSpace = data;

                            if (admSpace.length > 0) {
                                let rows = "";

                                for (var i = 0; i < admSpace.length; i++) {
                                    let tranDate = admSpace[i].TRANS_DATE;
                                    let posted = admSpace[i].POSTED ? "YES" : "NO";
                                    let bookedDate = admSpace[i].BOOKEDDATE;
                                    let occupant = admSpace[i].OCCUPANT ? admSpace[i].OCCUPANT : admSpace[i].BOOKED ?
                                        `Booked for ${formatDate1(bookedDate)}` : "Available";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + admSpace[i].NAME + "</td>" +
                                                "<td>" + admSpace[i].ROOM + "</td>" +
                                                "<td>" + admSpace[i].BED + "</td>" +
                                                "<td>" + admSpace[i].RATE.toFixed(2) + "</td>" +
                                                "<td>" + occupant + "</td>" +
                                                "<td>" + admSpace[i].DESCRIPTION + "</td>" +
                                                "<td>" + admSpace[i].NURSINGCARE.toFixed(2) + "</td>" +
                                                "<td>" + formatDate1(tranDate) + "</td>" +
                                                "<td> OLDREC </td>" +
                                                "<td>" + posted + "</td>" +
                                                "<td>" + admSpace[i].FACILITY + "</td>" +
                                                "<td>" + admSpace[i].RECID + "</td>" +
                                                "<td>" + admSpace[i].adm_deposit.toFixed(2) + "</td>" +
                                            "</tr>";
                                }

                                $(".spacDefTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".spacDefTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });
                            }
                        }
                    })

                }
            })

            $(".spacDefBedNo").on({
                focusout: function () {
                    let spacDefBedNo = $(this).val().trim();
                    let spacDefFacility = $(".spacDefFacility").val();
                    let spacDefFacilityText = $(".spacDefFacility").find(`[value="${spacDefFacility}"]`).text().trim();
                    let spacDefRoom = $(".spacDefRoom").val().trim();
                    let totalRowNo = Number($(".spacDefTbody").find("tr").last().find("td").eq(0).text());

                    if (totalRowNo > 0) {
                        $(".spacDefNewRec").val(true);

                        $(".spacDefTbody").find("tr").each(function () {
                            let tableFacility = $(this).find("td").eq(1).text().trim();
                            let tableRoom = $(this).find("td").eq(2).text().trim();
                            let tableBedNo = $(this).find("td").eq(3).text().trim();

                            if (tableFacility.toUpperCase() == spacDefFacilityText.toUpperCase() &&
                                tableRoom.toUpperCase() == spacDefRoom.toUpperCase() && tableBedNo == spacDefBedNo)
                            {
                                $(".spacDefNewRec").val(false);
                                $(".hiddenSpacDefRecNo").val(Number($(this).find("td").eq(0).text().trim()));
                                $(".spacDefDailyRate").val(Number($(this).find("td").eq(4).text().trim()));
                                $(".spacDefLabelOccupant").text($(this).find("td").eq(5).text().trim());
                                $(".spacDefDescription").val($(this).find("td").eq(6).text().trim());
                                $(".spacDefNursingCare").val(Number($(this).find("td").eq(7).text().trim()));
                                $(".spacDefDeposit").val(Number($(this).find("td").eq(13).text().trim()));

                                let spacDefLabelOccupant = $(".spacDefLabelOccupant").text().trim();

                                if (spacDefLabelOccupant != "" && spacDefLabelOccupant != null) {
                                    $(".spacDefRelBedSpBtn").prop({ disabled: false });
                                } else {
                                    $(".spacDefRelBedSpBtn").prop({ disabled: true });
                                }

                                let posted = $(this).find("td").eq(10).text().trim();

                                if (posted != "YES") {
                                    $(".spacDefDeleteBtn").prop({ disabled: false });
                                }

                                return false;
                            }
                        });
                    }

                }
            })

            $(".spacDefAddBtn").on({
                click: function () {
                    let spacDefFacility = $(".spacDefFacility").val();
                    let spacDefFacilityText = $(".spacDefFacility").find(`[value="${spacDefFacility}"]`).text();
                    let spacDefRoom = $(".spacDefRoom").val().trim();
                    let spacDefBedNo = $(".spacDefBedNo").val().trim();
                    let spacDefDailyRate = Number($(".spacDefDailyRate").val().trim());
                    let spacDefNursingCare = Number($(".spacDefNursingCare").val().trim());
                    let spacDefDescription = $(".spacDefDescription").val().trim();
                    let spacDefNewRec = $(".spacDefNewRec").val();
                    let hiddenSpacDefRecNo = Number($(".hiddenSpacDefRecNo").val());
                    let spacDefdateRegtd = $(".spacDefdateRegtd").val();
                    let spacDefLabelOccupant = $(".spacDefLabelOccupant").text();
                    let spacDefDeposit = Number($(".spacDefDeposit").val());

                    if (spacDefFacility == "" || spacDefFacility == null) {
                        alert("Facility is Required!!");
                        $(".spacDefFacility").focus();
                    } else if (spacDefRoom == "") {
                        alert("Room / Ward ID is Required!!");
                        $(".spacDefRoom").focus();
                    } else if (spacDefBedNo == "") {
                        alert("Bed No. is Required!!");
                        $(".spacDefBedNo").focus();
                    } else if (spacDefDescription == "") {
                        alert("Description is Required!!");
                        $(".spacDefDescription").focus();
                    } else {
                        if (spacDefNewRec != "true") {
                            $(".spacDefTbody").find("tr").each(function () {
                                let rowNo = Number($(this).find("td").eq(0).text().trim());

                                if (rowNo == hiddenSpacDefRecNo) {
                                    $(this).find("td").eq(4).text(spacDefDailyRate.toFixed(2));
                                    $(this).find("td").eq(6).text(spacDefDescription);
                                    $(this).find("td").eq(7).text(spacDefNursingCare.toFixed(2));
                                    $(this).find("td").eq(9).text("UPDATED");
                                }
                            })
                        } else {
                            let row = "<tr>" +
                                            "<td></td>" +
                                            "<td>" + spacDefFacilityText + "</td>" +
                                            "<td>" + spacDefRoom + "</td>" +
                                            "<td>" + spacDefBedNo + "</td>" +
                                            "<td>" + spacDefDailyRate.toFixed(2) + "</td>" +
                                            "<td>" + spacDefLabelOccupant + "</td>" +
                                            "<td>" + spacDefDescription + "</td>" +
                                            "<td>" + spacDefNursingCare.toFixed(2) + "</td>" +
                                            "<td>" + spacDefdateRegtd + "</td>" +
                                            "<td> UPDATED </td>" +
                                            "<td> NO </td>" +
                                            "<td>" + spacDefFacility + "</td>" +
                                            "<td> 0 </td>" +
                                            "<td>" + spacDefDeposit.toFixed(2) + "</td>" +
                                      "</tr>";

                            $(".spacDefTbody").append(row);


                            //re-adjust the count values after adding rows
                            let counter = 0;
                            $(".spacDefTbody").find("tr").each(function () {
                                $(this).find("td").eq(0).text(++counter);
                            });
                        }

                        $(".spacDefSubmitBtn").prop({ disabled: false });
                    }

                }
            })

            $(".spacDefdateRegtd").on({
                focusout: function () {
                    let spacDefdateRegtd = new Date($(".spacDefdateRegtd").val());
                    let todaysDate = new Date();
                    let dateNow = $(".dateNow").val();

                    if (spacDefdateRegtd > todaysDate) {
                        alert("Registration Date Error...");

                        $(".spacDefdateRegtd").val(dateNow);
                        $(".spacDefdateRegtd").focus();
                    }
                }
            })

            $(".spacDefSubmitBtn").on({
                click: function () {
                    let totalRowNo = Number($(".spacDefTbody").find("tr").last().find("td").eq(0).text());

                    if (totalRowNo > 0) {
                        $(this).prop({ disabled: true });

                        //REPORTS Class holds the table data
                        let tableList = [];
                        $(".spacDefTbody").find("tr").each(function () {
                            let rowObject = {
                                combFacility: $(this).find("td").eq(1).text().trim(),  // for facility text
                                txtaddress1: $(this).find("td").eq(2).text().trim(), // for room
                                cbogender: $(this).find("td").eq(3).text().trim(), // for bed
                                cbotype: $(this).find("td").eq(4).text().trim(), // for rate
                                combillcycle: $(this).find("td").eq(5).text().trim(), // for occupant
                                edtallergies: $(this).find("td").eq(6).text().trim(), // for description
                                cbotitle: $(this).find("td").eq(7).text().trim(), // for Nursing Care
                                txtclinic: $(this).find("td").eq(8).text().trim(), // for date reg
                                newrecString: $(this).find("td").eq(9).text().trim(), // for newrec
                                txtbillspayable: $(this).find("td").eq(10).text().trim(), // for posted
                                txtsurname: $(this).find("td").eq(11).text().trim(), // for facility code
                                mreference: $(this).find("td").eq(12).text().trim(), // for recid
                                categ_save: $(this).find("td").eq(13).text().trim(), // for deposit
                            };

                            tableList.push(rowObject)
                        });

                        if (confirm("Confirm to Submit Records...")) {
                            $.ajax({
                                url: "/AJAX/spacDefSubmitBtnClicked",
                                method: "POST",
                                data: { tableList: tableList },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                            ClearControls();
                                        }
                                    }
                                }
                            })
                        }

                    }
                }
            })

            $(".spacDefDeleteBtn").on({
                click: function () {
                    let spacDefFacility = $(".spacDefFacility").val();
                    let spacDefFacilityText = $(".spacDefFacility").find(`[value="${spacDefFacility}"]`).text().trim();
                    let spacDefRoom = $(".spacDefRoom").val().trim();
                    let spacDefBedNo = $(".spacDefBedNo").val().trim();
                    let spacDefDescription = $(".spacDefDescription").val().trim();

                    if (confirm(`Confirm to Delete \n${spacDefFacilityText} ${spacDefRoom} ${spacDefBedNo} (${spacDefDescription}...)`)) {
                        $(".spacDefDeleteBtn").prop({ disabled: true });

                        $.ajax({
                            url: "/AJAX/spacDefDeleteBtnClicked",
                            method: "POST",
                            data: { spacDefFacility: spacDefFacility, spacDefRoom: spacDefRoom, spacDefBedNo: spacDefBedNo },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        $(".spacDefFacility").focus();
                                        alert(data.alertMessage);
                                        ClearControls();
                                    }
                                }
                            }
                        })
                    }
                }
            })

            $(".spacDefRelBedSpBtn").on({
                click: function () {
                    let hiddenSpacDefRecNo = Number($(".hiddenSpacDefRecNo").val());
                    let tableRoom = "";
                    let tableBed = "";
                    let tableRecID = "";

                    $(".spacDefTbody").find("tr").each(function () {
                        let serialNo = Number($(this).find("td").eq(0).text().trim());

                        if(serialNo == hiddenSpacDefRecNo){
                            tableRoom = $(this).find("td").eq(2).text().trim();
                            tableBed = $(this).find("td").eq(3).text().trim();
                            tableRecID = $(this).find("td").eq(12).text().trim();
                        }
                    })

                    if (hiddenSpacDefRecNo < 1 || tableRecID == "") {
                        return;
                    }

                    if (confirm(`Confirm to release Bed Space... ${tableRoom} : ${tableBed}`)) {
                        $.ajax({
                            url: "/AJAX/spacDefRelBedSpBtnClicked",
                            method: "POST",
                            data: { tableRecID: tableRecID },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        $(".spacDefFacility").focus();
                                    }
                                }
                            }
                        })
                    }

                }
            })


//=================================================== Registration =============================================================
            //On Load
            $(".regMedNoteSaveBtn").prop({ disabled: true });
            $(".regSubmitBtn").prop({ disabled: true });
            $(".regDeleteBtn").prop({ disabled: true });
            $(".regAcctBalance").prop({ disabled: true });
            $(".chkCurrentAdmin").prop({ checked: true });
            $(".chkConvertBillsDiv").hide();


            ShowModal(dOM, '#refLookUp6', '#6LkUp', function aF() {
            });


            $(".regMedNotes").on({
                click: function () {
                    let regReference = $(".regReference").val().trim();

                    medicalNoteClickFunction(regReference);
                }
            })

            $(".regDiagnosisBtn").on({
                click: function () {
                    //display modal
                    $("#refLookUp6").click();
                }
            })

            $(".regReference").on({
                focus: function () {
                    let regReference = $(this).val();
                    let regmcrossref = $(".regmcrossref").val().trim();

                    $(".hiddenCashPaying").val(false);

                    $.ajax({
                        url: "/AJAX/regReferenceFocus",
                        method: "POST",
                        data: { regReference: regReference, regmcrossref: regmcrossref },
                        success: function (data) {
                            if (data != null) {
                                if (data.alertMessage != null) {
                                    $(".regReference").val("");
                                    alert(data.alertMessage);
                                    return;
                                }

                                if (data.txtreference != null)
                                    $(".regReference").val(data.txtreference);
                                if (data.REPORT_TYPE1 != null)
                                    $(".regAdminDate").val(data.REPORT_TYPE1);
                                if (data.txtgroupcode != null)
                                    $(".regGroupCode").val(data.txtgroupcode);
                                if (data.txtpatientno != null)
                                    $(".regPatientNo").val(data.txtpatientno);
                                if (data.TXTPATIENTNAME != null)
                                    $(".regName").val(data.TXTPATIENTNAME);
                                if (data.REPORT_TYPE2 != null)
                                    $(".regPrimaryDiag").val(data.REPORT_TYPE2);
                                if (data.cashpaying != null)
                                    $(".hiddenCashPaying").val(data.cashpaying);
                                if (data.mgroupcode != null)
                                    $(".mgroupcode").val(data.mgroupcode);
                                if (data.mpatientno != null)
                                    $(".mpatientno").val(data.mpatientno);
                                if (data.mgrouphead != null)
                                    $(".mgrouphead").val(data.mgrouphead);
                                if (data.mghgroupcode != null)
                                    $(".regmghgroupcode").val(data.mghgroupcode);
                                if (data.mgrouphtype != null)
                                    $(".mgrouphtype").val(data.mgrouphtype);
                                if (data.mlastno != null)
                                    $(".regmlastno").val(data.mlastno);
                                if(data.chkAuditProfile)
                                    $(".regLoadListBtn").click();

                            }
                        }
                    })
                },

                focusout: function () {
                    let regReference = $(this).val().trim();
                    let mlastno = Number($(".regmlastno").val());

                    if (regReference != "") {
                        $(".regPatientNo").prop({ disabled: false });
                        $(".regGroupCode").prop({ disabled: false });
                        $(".regFacility").prop({ disabled: false });
                        $(".regRoom").prop({ disabled: false });
                        $(".regBedNo").prop({ disabled: false });
                        $(".regAdminDate").prop({ disabled: false });

                        $.ajax({
                            url: "/AJAX/regReferenceFocusout",
                            method: "POST",
                            data: { regReference: regReference, mlastno: mlastno },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        $(".regReference").val("");
                                        alert(data.alertMessage);
                                    }

                                    if (data.ActRslt != null) {
                                        $(".regPatientNo").prop({ disabled: true });
                                        $(".regGroupCode").prop({ disabled: true });
                                        $(".regFacility").prop({ disabled: true });
                                        $(".regRoom").prop({ disabled: true });
                                        $(".regBedNo").prop({ disabled: true });
                                        $(".regAdminDate").prop({ disabled: true });

                                        alert(data.ActRslt);
                                    }

                                    if (data.txtstaffno != null) {
                                        alert(data.txtstaffno);
                                    }

                                    $(".hiddenRegNewRec").val(data.newrec);
                                    if (data.txtreference != null)
                                        $(".regReference").val(data.txtreference);
                                    if (data.txtTimeFrom != null)
                                        $(".regTime").val(data.txtTimeFrom);
                                    if (data.chkADVCorporate)
                                        $(".chkAdminNoticeToDoc").prop("checked");
                                    if (data.txtgrouphead != null)
                                        $(".regBillPayableBy").val(data.txtgrouphead);
                                    if (data.chkApplyFilter) {
                                        $(".regDeleteBtn").prop({ disabled: false });
                                    } else {
                                        $(".regDeleteBtn").prop({ disabled: true });
                                    }

                                    if (data.chkbillregistration) {
                                        $(".regSubmitBtn").prop({ disabled: false });
                                    } else {
                                        $(".regSubmitBtn").prop({ disabled: true });
                                    }

                                    if (data.chkByBranch)
                                        $(".regGroupCode").focus();
                                    if (data.chkCurrtAdmRev)
                                        $(".regPrimaryDiag").focus();

                                    if (data.mgrouphtype != null)
                                        $(".mgrouphtype").val(data.mgrouphtype);
                                    if (data.mgrouphead != null)
                                        $(".mgrouphead").val(data.mgrouphead);
                                    if (data.txtpatientno != null)
                                        $(".regPatientNo").val(data.txtpatientno);
                                    if (data.txtgroupcode != null)
                                        $(".regGroupCode").val(data.txtgroupcode);
                                    if (data.TXTPATIENTNAME != null)
                                        $(".regName").val(data.TXTPATIENTNAME);
                                    if (data.combFacility != null)
                                        $(".regFacility").val(data.combFacility);
                                    if (data.REPORT_TYPE1 != null)
                                        $(".regRoom").val(data.REPORT_TYPE1);
                                    if (data.REPORT_TYPE2 != null)
                                        $(".regBedNo").val(data.REPORT_TYPE2);
                                    if (data.REPORT_TYPE3 != null)
                                        $(".regAdminDate").val(data.REPORT_TYPE3);
                                    if (data.txtbranch != null)
                                        $(".regBranch").val(data.txtbranch);
                                    if (data.txtdiscount != null)
                                        $(".regDailyRate").val(data.txtdiscount);
                                    //oldRate
                                    if (data.nmrbalance != null)
                                        $(".regPNC").val(data.nmrbalance);
                                    if (data.nmrPayable != null)
                                        $(".regFeeding").val(data.nmrPayable);
                                    if (data.txtsurname != null)
                                        $(".regBigInput").text(data.txtsurname);
                                    if (data.doctor != null)
                                        $(".regDoctor").val(data.doctor);

                                    if (data.REPORT_TYPE4 != null){
                                        $(".regPrimaryDiag").find("option").each(function () {
                                            let text = $(this).text();

                                            if (text.trim() == data.REPORT_TYPE4.trim()) {
                                                let value = $(this).val();
                                                $(".regPrimaryDiag").val(value);
                                                $(".regDiagnosisNote").text(data.REPORT_TYPE4);
                                            }
                                        });
                                    }

                                    if(data.chkAuditProfile)
                                        $(".regLoadListBtn").click();

                                }
                            }
                        })

                    }
                }
            })

            $(".regPatientNo").on({
                focusout: function () {
                    let regPatientNo = $(this).val().trim();
                    let regGroupCode = $(".regGroupCode").val().trim();

                    if (regPatientNo.trim() != "") {
                        $.ajax({
                            url: "/AJAX/regPatientNoFocusout",
                            method: "POST",
                            data: { regPatientNo: regPatientNo, regGroupCode: regGroupCode, },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        $(".regPatientNo").val("");
                                        $(".regPatientNo").focus();

                                        alert(data.alertMessage);
                                        return;
                                    }

                                    if (data.mgrouphtype != null)
                                        $(".mgrouphtype").val(data.mgrouphtype);
                                    if (data.txtsurname != null)
                                        $(".regBigInput").text(data.txtsurname);
                                    if (data.txtgrouphead != null)
                                        $(".regBillPayableBy").val(data.txtgrouphead);
                                    if (data.TXTPATIENTNAME != null)
                                        $(".regName").val(data.TXTPATIENTNAME);
                                    if (data.nmrPayable != null)
                                        $(".regFeeding").val(data.nmrPayable);
                                    if (data.txtdiscount != null)
                                        $(".regDailyRate").val(data.txtdiscount);

                                    if (data.chkApplyFilter) {
                                        $(".chkConvertBillsDiv").show();
                                    }

                                    if (data.chkSegmented) {
                                        $(".regLoadListBtn").click();
                                    }

                                }
                            }
                        })
                    }

                }
            })

            $(".regAdminDate").on({
                focusout: function () {
                    let regAdminDate = new Date($(this).val());
                    let todaysDate = new Date();
                    let dateNow = $(".dateNow").val();

                    if (regAdminDate > todaysDate) {
                        alert("Admission Date Error...");

                        $(".regAdminDate").val(dateNow);
                        $(".regAdminDate").focus();
                    }
                }
            })

            $(".regFacility").on({
                change: function () {
                    let regFacility = $(this).val();

                    if (regFacility == "" || regFacility == null) {
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/regFacilityOnChange",
                        method: "POST",
                        data: { regFacility: regFacility },
                        success: function (data) {
                            let admSpace = data;

                            if (admSpace.length > 0) {
                                let rows = "";
                                $(".regRoom").html("");
                                $(".regBedNo").html("");

                                $(".regRoom").append(`<option value=""></option>`);
                                $(".regBedNo").append(`<option value=""></option>`);

                                for (var i = 0; i < admSpace.length; i++) {
                                    let tranDate = admSpace[i].TRANS_DATE;
                                    let posted = admSpace[i].POSTED ? "YES" : "NO";
                                    let bookedDate = admSpace[i].BOOKEDDATE;
                                    let occupant = admSpace[i].OCCUPANT ? admSpace[i].OCCUPANT : admSpace[i].BOOKED ?
                                        `Booked for ${formatDate1(bookedDate)}` : "Available";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + admSpace[i].NAME + "</td>" +
                                                "<td>" + admSpace[i].ROOM + "</td>" +
                                                "<td>" + admSpace[i].BED + "</td>" +
                                                "<td>" + admSpace[i].RATE.toFixed(2) + "</td>" +
                                                "<td>" + occupant + "</td>" +
                                                "<td>" + admSpace[i].DESCRIPTION + "</td>" +
                                                "<td>" + admSpace[i].NURSINGCARE.toFixed(2) + "</td>" +
                                            "</tr>";

                                    if (occupant.trim() == "Available") {
                                        $(".regRoom").append(`<option value="${admSpace[i].ROOM}">${admSpace[i].ROOM}</option>`);
                                        $(".regBedNo").append(`<option value="${admSpace[i].BED}">${admSpace[i].BED}</option>`);
                                    }
                                }

                                $(".regTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".regTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });


                                //Added the doubleclick event after displaying the table
                                $(".regTbody").find("tr").each(function () {
                                    $(this).dblclick(function () {
                                        let regReference = $(".regReference").val().trim();
                                        let regGroupCode = $(".regGroupCode").val().trim();
                                        let regPatientNo = $(".regPatientNo").val().trim();
                                        let regFacility = $(".regFacility").val();

                                        console.log("here")

                                        if (regReference == "" || regGroupCode == "" || regPatientNo == "" || regFacility == "" || regFacility == null) {
                                            alert("Admission Ref./Patient/Facility must be selected...");
                                            return;
                                        }

                                        let occupant = $(this).find("td").eq(5).text().trim();
                                        let room = $(this).find("td").eq(2).text().trim();
                                        let bed = $(this).find("td").eq(3).text().trim();

                                        if (occupant == "Available") {
                                            alert(`Selected Space is occupied by ${occupant}`);
                                            return false;
                                        }

                                        if (confirm(`Confirm To Assign Patient to Room : ${room}  Bed : ${bed}`)) {
                                            $(".regBedNo").val(bed);
                                            $(".regRoom").val(room);
                                            $(".regRoom").focus();
                                        }

                                    });

                                });

                            }
                        }
                    })

                }
            })

            $(".regBedNo").on({
                focusout: function () {
                    let regBedNo = $(this).val();
                    let regRoom = $(".regRoom").val
                    let regFacility = $(".regFacility").val();
                    let regName = $(".regName").val().trim();
                    let dateNow = new Date();
                    let xfoundit = false;

                    if (regBedNo == "" || regBedNo == null) {
                        return;
                    }

                    let totalRowNo = Number($(".regTbody").find("tr").last().find("td").eq(0).text());

                    if (totalRowNo > 0) {
                        $(".regTbody").find("tr").each(function () {
                            let tableRoom = $(this).find("td").eq(2).text().trim();
                            let tableBedNo = $(this).find("td").eq(3).text().trim();
                            let tableOccupant = $(this).find("td").eq(5).text().trim();
                            let tableDNC = Number($(this).find("td").eq(7).text().trim());

                            if (tableRoom == regRoom && tableBedNo == regBedNo) {
                                if (tableOccupant != "Available" && tableOccupant != regName) {
                                    alert(`Space is occupied by -> ${tableOccupant}, ${regFacility}`);
                                    $(".regBedNo").focus();
                                    return;
                                } else if (tableOccupant == "Booked" && Convert.ToDateTime(tableOccupant) < dateNow || tableOccupant == "Available") {
                                    xfoundit = true;
                                    $(".regPNC").val(tableDNC);
                                }
                            }
                        });

                        if (!xfoundit)
                        {
                            alert("Invalid Bed Space Selections...");
                            $(".regBedNo").val("");
                            $(".regBedNo").focus();
                            return;
                        }

                        $(".regSubmitBtn").prop({ disabled: false });
                    }

                }

            });

            $(".regTime").on({
                focus: function () {
                    let regTime = $(this).val().trim();
                    let timeNow = $(".timeNow").val();

                    let time = regTime.trim() == "" ? timeNow : regTime;
                    $(this).val(time);
                }
            })

            $(".regLoadListBtn").on({
                click: function () {
                    $.ajax({
                        url: "/AJAX/regLoadListBtnClick",
                        method: "POST",
                        success: function (data) {
                            if (data != null) {
                                if (data.txtreference != null) {
                                    $(".regmcrossref").val(data.txtreference);
                                }

                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                }

                            }
                        }
                    })

                }
            })

            $(".regSubmitBtn").on({
                click: function () {
                    let regReference = $(".regReference").val().trim();
                    let regPatientNo = $(".regPatientNo").val().trim();
                    let regGroupCode = $(".regGroupCode").val().trim();
                    let regName = $(".regName").val().trim();
                    let regBillPayableBy = $(".regBillPayableBy").val().trim();
                    let regFacility = $(".regFacility").val();
                    let regBedNo = $(".regBedNo").val();
                    let regRoom = $(".regRoom").val();
                    let regBranch = $(".regBranch").val();
                    let regDoctor = $(".regDoctor").val();
                    let regTime = $(".regTime").val().trim();
                    let regAdminDate = $(".regAdminDate").val();
                    let regFeeding = Number($(".regFeeding").val().trim());
                    let regPNC = Number($(".regPNC").val().trim());
                    let regDailyRate = Number($(".regDailyRate").val().trim());
                    let regPrimaryDiag = $(".regPrimaryDiag").val();
                    let regPrimaryDiagText = $(".regPrimaryDiag").find(`[value="${regPrimaryDiag}"]`).text().trim();
                    let regDiagnosisNote = $(".regDiagnosisNote").text().trim();
                    let hiddenRegNewRec = $(".hiddenRegNewRec").val();
                    let regmlastno = Number($(".regmlastno").val());
                    let mpatientno = $(".mpatientno").val();
                    let mgroupcode = $(".mgroupcode").val();
                    let chkConvertBills = $(".chkConvertBills").prop("checked");
                    let regmcrossref = $(".regmcrossref").val();

                    let dataObject = {
                        newrec: hiddenRegNewRec == "true" ? true : false,
                        txtreference: regReference,
                        txtbranch: regBranch,
                        doctor: regDoctor,
                        diagnosis: regPrimaryDiag,
                        cboTribe: regPrimaryDiagText,
                        txtdiscount: regFeeding,
                        nmrbalance: regPNC,
                        txtpatientno: regPatientNo,
                        TXTPATIENTNAME: regName,
                        combFacility: regFacility,
                        txtRoom: regRoom,
                        txtBed: regBedNo,
                        nmrcurdebit: regDailyRate,
                        txtstaffno: regAdminDate,
                        cbotitle: regTime,
                        txtgroupcode: regGroupCode,
                        mlastno: regmlastno,
                        mpatientno: mpatientno,
                        mgroupcode: mgroupcode,
                        chkSortByOperator: chkConvertBills,
                        txtworkphone: regmcrossref,
                        edtallergies: regDiagnosisNote
                    };

                    if (regReference == "") {
                        alert("Reference No is Required!!");
                        $(".regReference").focus();
                    } else if (regPatientNo == "") {
                        alert("PatientNo is Required!!");
                        $(".regPatientNo").focus();
                    } else if (regName == "") {
                        alert("Name is Required!!");
                        $(".regName").focus();
                    } else if (regBillPayableBy == "") {
                        alert("BillPayableBy is Required!!");
                        $(".regBillPayableBy").focus();
                    } else if (regFacility == "" && regFacility == null) {
                        alert("Facility is Required!!");
                        $(".regFacility").focus();
                    } else if (regBedNo == "" && regBedNo == null) {
                        alert("BedNo is Required!!");
                        $(".regBedNo").focus();
                    } else if (regRoom == "" && regRoom == null) {
                        alert("Room is Required!!");
                        $(".regRoom").focus();
                    } else if (regDoctor == "" && regDoctor == null) {
                        alert("Doctor is Required!!");
                        $(".regDoctor").focus();
                    } else if (regPrimaryDiag == "" && regPrimaryDiag == null) {
                        alert("Disgnosis for this admission must be specified...");
                        $(".regPrimaryDiag").focus();
                    } else if (regReference.slice(0, 1) != "A" || regReference.length < 9) {
                        alert("Admission Reference is not in right format...");
                        $(".regReference").focus();
                    } else {
                        if (confirm("Confirm to Submit Records...")) {
                            $.ajax({
                                url: "/AJAX/regSubmitBtnClick",
                                method: "POST",
                                data: { dataObject: dataObject },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                            return;
                                        }

                                        if (data.cmbsave) {
                                            $(".regSubmitBtn").prop({ disabled: false });
                                        } else {
                                            $(".regSubmitBtn").prop({ disabled: true });
                                        }

                                        if (data.cbotype != null) {
                                            alert(data.cbotype);
                                        }

                                        if (data.ActRslt != null) {
                                            alert(data.ActRslt);
                                        }

                                        if (data.txtreference != null) {
                                            $(".regReference").val(data.txtreference);
                                        }

                                        if (data.chkADVCorporate) {
                                            $(".chkAdminNoticeToDoc").prop({ checked: true });
                                        } else {
                                            $(".chkAdminNoticeToDoc").prop({ checked: false });
                                        }

                                        //if (data.chkCurrtAdmRev) {

                                        //}

                                        $(".regLoadListBtn").click();
                                    }
                                }
                            })

                        }
                    }

                }
            })


//==================================================== Service Update ============================================================
            //On Load
            //$(".suInPatientPresBtn").prop({ disabled: true });
            $(".suCostCenterBlock").hide();
            $(".suChkStore").prop({ checked: true });
            $(".suCurAdmin").prop({ checked: true });
            $(".chkPresCurAdmin").prop({ checked: true });
            $(".suSubmitBtn").prop({ disabled: true });
            $(".inPatPrescBlock").hide();
            $(".treatmentChartBlock").hide();

            ShowModal(dOM, '#refLookUp8', '#8LkUp', function aF() {
            });


            function medicalNoteClickFunction(xAdminReference) {

                $.ajax({
                    url: "/AJAX/xMedicalNotesClick",
                    method: "POST",
                    data: { xReference: xAdminReference },
                    success: function (data) {
                        if (data != null) {
                            if (data.alertMessage != null) {
                                alert(data.alertMessage);
                                return;
                            }

                            $(".lblSpecInstrNotes").text(`[${data.TXTPATIENTNAME}]`);
                            $("#refLookUp8").click();

                            if (data.edtspinstructions)
                                $(".xSpecInstText").val(data.edtspinstructions);

                            if (data.edtallergies)
                                $(".xMedNoteText").val(data.edtallergies);

                            if (data.txtgroupcode)
                                $(".mgroupcode").val(data.txtgroupcode);

                            if (data.txtpatientno)
                                $(".mpatientno").val(data.txtpatientno);


                        }
                    }
                })

            }

            function medNoteSaveFunction(xSpecInstText, xMedNoteText, xmgroupcode, xmpatientno) {
                $.ajax({
                    url: "/AJAX/xSaveNoteBtnClick",
                    method: "POST",
                    data: {
                        xSpecInstText: xSpecInstText, xMedNoteText: xMedNoteText, xmgroupcode: xmgroupcode, xmpatientno: xmpatientno
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.alertMessage) {
                                alert(data.alertMessage);
                            }
                        }
                    }
                })
            }

            $(".suChkStore").on({
                click: function () {
                    $(".suStoreBlock").show();
                    $(".suCostCenterBlock").hide();
                }
            })

            $(".suChkCostCenter").on({
                click: function () {
                    $(".suCostCenterBlock").show();
                    $(".suStoreBlock").hide();
                }
            })

            $(".suAdminReference").on({
                focusout: function () {
                    let suAdminReference = $(this).val().trim();

                    if (suAdminReference != "") {

                        $.ajax({
                            url: "/AJAX/suAdminReferenceFocusout",
                            method: "POST",
                            data: { suAdminReference: suAdminReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.REPORTS != null) {
                                        if (data.REPORTS.alertMessage != null) {
                                            alert(data.REPORTS.alertMessage);
                                            return;
                                        }

                                        if (data.REPORTS.ActRslt != null) {
                                            alert(data.REPORTS.ActRslt);
                                        }

                                        if (data.REPORTS.txtreference != null)
                                            $(".suAdminReference").val(data.REPORTS.txtreference);
                                        if (data.REPORTS.txtpatientno != null)
                                            $(".suPatientNo").val(data.REPORTS.txtpatientno);
                                        if (data.REPORTS.txtgroupcode != null)
                                            $(".suGroupCode").val(data.REPORTS.txtgroupcode);
                                        if (data.REPORTS.combFacility != null)
                                            $(".suFacilityText").val(data.REPORTS.combFacility);
                                        if (data.REPORTS.TXTPATIENTNAME != null)
                                            $(".suName").val(data.REPORTS.TXTPATIENTNAME);
                                        if (data.REPORTS.txtRoom != null)
                                            $(".suRoom").val(data.REPORTS.txtRoom);
                                        if (data.REPORTS.txtBed != null)
                                            $(".suBed").val(data.REPORTS.txtBed);
                                        if (data.REPORTS.diagnosis != null)
                                            $(".suDiagnosis").val(data.REPORTS.diagnosis);
                                        if (data.REPORTS.REPORT_TYPE1 != null)
                                            $(".suDateOfAdm").val(data.REPORTS.REPORT_TYPE1);
                                        if (data.REPORTS.REPORT_TYPE2 != null)
                                            $(".suDateOfDisch").val(data.REPORTS.REPORT_TYPE2);
                                        if (data.REPORTS.REPORT_TYPE3 != null)
                                            $(".suDischargeLb").text(data.REPORTS.REPORT_TYPE3);
                                        if (data.REPORTS.mgrouphead != null)
                                            $(".SUmgrouphead").val(data.REPORTS.mgrouphead);
                                        if (data.REPORTS.mgrouphtype != null)
                                            $(".mgrouphtype").val(data.REPORTS.mgrouphtype);
                                        if (data.REPORTS.mreference != null)
                                            $(".mreference").val(data.REPORTS.mreference);
                                        if (data.REPORTS.txtaddress1 != null)
                                            $(".suAddress").val(data.REPORTS.txtaddress1);
                                        if (data.REPORTS.txtstaffno != null)
                                            $(".suProfile").text(data.REPORTS.txtstaffno);
                                        if (data.REPORTS.txtgrouphead != null)
                                            $(".suGroupHead").val(data.REPORTS.txtgrouphead);
                                        if (data.REPORTS.chkADVCorporate == true)
                                            $(".suTreatmentChtBtn").prop({disabled: false});
                                        if (data.REPORTS.chkApplyFilter == true)
                                            $(".suInPatientPresBtn").prop({ disabled: false });

                                    }

                                    if (data.ADMDETAIS != null) {
                                        let admDetails = data.ADMDETAIS;

                                        if (admDetails.length > 0) {
                                            let rows = "";
                                            let currentTotal = 0;

                                            for (var i = 0; i < admDetails.length; i++) {
                                                let tranDate = admDetails[i].TRANS_DATE;
                                                let opTime = admDetails[i].OP_TIME;
                                                currentTotal += Number(admDetails[i].AMOUNT);

                                                rows += "<tr>" +
                                                            "<td></td>" +
                                                            "<td>" + formatDate1(tranDate) + "</td>" +
                                                            "<td>" + admDetails[i].TIME + "</td>" +
                                                            "<td>" + admDetails[i].FACILITY + "</td>" +
                                                            "<td>" + admDetails[i].MASTPROCESS + "</td>" +
                                                            "<td>" + admDetails[i].DESCRIPTION + "</td>" +
                                                            "<td>" + admDetails[i].QTY + "</td>" +
                                                            "<td>" + admDetails[i].UNIT + "</td>" +
                                                            "<td>" + admDetails[i].AMOUNT + "</td>" +
                                                            "<td> OLDREC </td>" +
                                                            "<td>" + admDetails[i].OPERATOR + "</td>" +
                                                            "<td>" + formatDate1(opTime) + "</td>" +
                                                            "<td>" + admDetails[i].PROCESS + "</td>" +
                                                            "<td>" + admDetails[i].STK_ITEM + "</td>" +
                                                            "<td>" + admDetails[i].DOCTOR + "</td>" +
                                                            "<td>" + admDetails[i].RECID + "</td>" +
                                                            "<td>" + admDetails[i].STORE + "</td>" +
                                                            "<td></td>" +
                                                        "</tr>";
                                            }

                                            $(".suTbody").html(rows);

                                            $(".suCurrentTotal").val(currentTotal);

                                            //re-adjust the count values after adding rows
                                            let counter = 0;
                                            $(".suTbody").find("tr").each(function () {
                                                $(this).find("td").eq(0).text(++counter);
                                            });
                                        }

                                    }
                                }
                            }
                        })

                    }

                }
            })

            $(".suUnitID").on({
                focusout: function () {
                    let suUnitID = $(this).val();

                    if (suUnitID != "" && suUnitID != null) {
                        $(".SUmservunit").val(suUnitID)
                    }
                }
            })

            $(".suServiceTime").on({
                focus: function () {
                    let timeNow = $(".timeNow").val();

                    $(".suServiceTime").val(timeNow);
                }
            })

            $(".suProcess").on({
                focus: function () {
                    let suUnitID = $(".suUnitID").val();
                    let suChkStore = $(".suChkStore").prop("checked");
                    let suChkCostCenter = $(".suChkCostCenter").prop("checked");

                    if ((suUnitID == "" || suUnitID == null) || (suChkCostCenter == false && suChkStore == false)) {
                        $(".suUnitID").focus()
                        alert("Store or Cost Centre must be checked and Unit ID/Facility must be selected...");
                    }

                }
            })

            $(".suDateGiven").on({
                focusout: function () {
                    let suDateGiven = new Date($(this).val());
                    let todaysDate = new Date();
                    let dateNow = $(".dateNow").val();

                    if (suDateGiven > todaysDate) {
                        alert("Invalid Date Specification...");

                        $(".suDateGiven").val(dateNow);
                        $(".suDateGiven").focus();
                    }
                }
            })

            $(".suProcedure").on({
                focus: function () {
                    let suProcess = $(".suProcess").val();

                    if (suProcess == "" || suProcess == null) {
                        alert("Process Code must be specified...");
                        $(".suProcess").focus();
                    }
                },

                focusout: function () {
                    let suProcedure = $(this).val();
                    let suAdminReference = $(".suAdminReference").val().trim();
                    let suDateGiven = $(".suDateGiven").val();
                    let suStockItem = $(".suStockItem").val();

                    if (suProcedure == "" || suProcedure == null) {
                        return;
                    }

                    //REPORTS Class holds the table data
                    let tableList = [];
                    $(".suTbody").find("tr").each(function () {
                        let rowObject = {
                            txtstaffno: $(this).find("td").eq(0).text().trim(),  // for Serial No
                            txtclinic: $(this).find("td").eq(1).text().trim(), // for date
                            cbotitle: $(this).find("td").eq(2).text().trim(), // for Time
                            combFacility: $(this).find("td").eq(3).text().trim(),  // for facility text
                            txtsurname: $(this).find("td").eq(4).text().trim(), // for billing code
                            edtallergies: $(this).find("td").eq(5).text().trim(), // for description
                            cbotype: $(this).find("td").eq(6).text().trim(), // for qty
                            cbogender: $(this).find("td").eq(7).text().trim(), // for u/m
                            txtcreditlimit: $(this).find("td").eq(8).text().trim(), // for amount
                            categ_save: $(this).find("td").eq(9).text().trim(), // for status
                            combillcycle: $(this).find("td").eq(10).text().trim(), // for user
                            txtcurrency: $(this).find("td").eq(11).text().trim(), // for date Time
                            cbokinstate: $(this).find("td").eq(12).text().trim(), // for process
                            cboTribe: $(this).find("td").eq(13).text().trim(), // for stkcode
                            doctor: $(this).find("td").eq(14).text().trim(), // for doctor
                            txtbranch: $(this).find("td").eq(15).text().trim(), // for recid
                            cbogenotype: $(this).find("td").eq(16).text().trim(), // for store
                            txtworkphone: $(this).find("td").eq(17).text().trim(), // for update
                        };

                        tableList.push(rowObject)
                    });

                    let deleteRec = "";
                    let authReq = "";

                    $.ajax({
                        url: "/AJAX/suProcedureFocusout",
                        method: "POST",
                        data: {
                            suProcedure: suProcedure, suAdminReference: suAdminReference, suDateGiven: suDateGiven,
                            suStockItem: suStockItem, tableList: tableList
                        },
                        success: function (data) {
                            if (data != null) {
                                $(".suAmount").val(data.nmrMinBalance);
                                $(".hiddenSUnewRec").val(data.newrec);
                                $(".SUrecno").val(data.nmr30days);
                                $(".suQtyGiven").val(data.nmrcurdebit);
                                $(".suIsDelete").val(data.cmbdelete);
                                $(".SUamtsave").val(data.nmrPayable);

                                if (data.txtconsultamt != null) {
                                    $(".suStockItem").val(data.txtconsultamt);
                                }
                                if (data.txtothername != null) {
                                    $(".suProcedure").val(data.txtothername);
                                }
                                if (data.txtemployer != null) {
                                    $(".suUnitID").val(data.txtemployer);
                                }
                                if (data.ActRslt != null) {
                                    alert(data.ActRslt);
                                }
                                if (data.SessionDs != null) {
                                    deleteRec = data.SessionDs;
                                }
                                if (data.SessionBis != null) {
                                    authReq = data.SessionBis;
                                }

                            }
                        }
                    }).then(() => {
                        if (deleteRec.trim() != "") {
                            if (confirm(deleteRec)) {
                                let recno = Number($(".SUrecno").val());
                                let recID = 0;

                                $(".suTbody").find("tr").each(function () {
                                    let rowNo = Number($(this).find("td").eq(0).text().trim());  // for Serial No

                                    if (recno == rowNo) {
                                        recID = Number($(this).find("td").eq(15).text().trim());
                                    }
                                })

                                $.ajax({
                                    url: "/AJAX/suReturnDelete",
                                    method: "POST",
                                    data: {recID: recID},
                                    success: function (data) {
                                        if (data != null) {
                                            if (data.alertMessage != null) {
                                                $(".suTbody").find("tr").each(function () {
                                                    let rowNo = Number($(this).find("td").eq(0).text().trim());  // for Serial No

                                                    if (recno == rowNo) {
                                                        $(this).remove();
                                                    }
                                                })

                                                $(".suIsDelete").val(data.cmbdelete);
                                                alert(data.alertMessage);
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    }).then(() => {
                        if (authReq.trim() != "") {
                            if (confirm(authReq)) {
                                //pre authorization may not be necessary for inpatient
                            }
                        }
                    })

                }
            })

            $(".suAddBtn").on({
                click: function () {
                    let suAmount = Number($(".suAmount").val());
                    let suCurrentTotal = Number($(".suCurrentTotal").val());
                    let suProcedure = $(".suProcedure").val();
                    let suProcedureText = $(".suProcedure").find(`[value="${suProcedure}"]`).text().trim();
                    let suStockItem = $(".suStockItem").val();
                    let suStockItemText = $(".suStockItem").find(`[value="${suStockItem}"]`).text().trim();
                    let suProcess = $(".suProcess").val();
                    let suUnitID = $(".suUnitID").val();
                    let suFacility = $(".suFacility").val();
                    let suQtyGiven = Number($(".suQtyGiven").val());
                    let suNewRec = $(".hiddenSUnewRec").val() == "true" ? true : false;
                    let suIsDelete = $(".suIsDelete").val() == "true" ? true : false;
                    let SUrecno = Number($(".SUrecno").val());
                    let suMeasure = $(".suMeasure").val();
                    let suDateGiven = $(".suDateGiven").val();
                    let suServiceTime = $(".suServiceTime").val();
                    let woperator = $(".woperator").val();
                    let mdoctor = "";
                    let dateNow = $(".dateNow").val();

                    if(suAmount == 0){
                        alert("Provide the Amount");
                        $(".suAmount").focus();
                        return;
                    } else if (suProcedure == "" || suProcedure == null){
                        alert("Service / Procedure is Required..");
                        $(".suProcedure").focus();
                        return;
                    } else if (suStockItem == "" || suStockItem == null){
                        alert("StockItem / Description of Service is Required..");
                        $(".suStockItem").focus();
                        return;
                    } else if (suProcess == "" || suProcess == null){
                        alert("Process is Required..");
                        $(".suProcess").focus();
                        return;
                    } else if (suUnitID == "" || suUnitID == null) {
                        alert("Unit ID is Required..");
                        $(".suUnitID").focus();
                        return;
                    } else if (suFacility == "" || suFacility == null) {
                        alert("Facility is Required..");
                        $(".suFacility").focus();
                        return;
                    } else {
                        if (suQtyGiven < 1)
                            $(".suQtyGiven").val(1);

                        if (suAmount < 1)
                            $(".suAmount").val(0);

                        if (!suNewRec && !suIsDelete)
                        {
                            $(".suTbody").find("tr").each(function () {
                                let rowNo = Number($(this).find("td").eq(0).text().trim());

                                if (SUrecno == rowNo) {
                                    let amount = Number($(this).find("td").eq(8).text().trim())
                                    $(".suCurrentTotal").val(suCurrentTotal - amount);

                                    let suCurrentTotal = Number($(".suCurrentTotal").val())
                                    $(".suCurrentTotal").val(suCurrentTotal + suAmount);

                                    $(this).find("td").eq(6).text(suQtyGiven);
                                    $(this).find("td").eq(7).text(suMeasure);
                                    $(this).find("td").eq(8).text(suAmount.toFixed(2));
                                    $(this).find("td").eq(17).text("YES");
                                }
                            })
                        } else if (suIsDelete) {
                            $(".suTbody").find("tr").each(function () {
                                let rowNo = Number($(this).find("td").eq(0).text().trim());

                                if (SUrecno == rowNo) {
                                    let amount = Number($(this).find("td").eq(8).text().trim())
                                    $(".suCurrentTotal").val(suCurrentTotal - amount);

                                    $(this).find("td").eq(9).text("DELETED");
                                }
                            })
                        } else {
                            let description = (suProcedureText == "" || suProcedureText == null) ? suStockItemText : suProcedureText;
                            let process = (suProcedure == "" || suProcedure == null) ? "" : suProcedure;
                            let stokeItem = (suStockItem == "" || suStockItem == null) ? "" : suStockItem;
                            let doctor = suNewRec == "true" ? "" : mdoctor;

                            let suCurrentTotal = Number($(".suCurrentTotal").val())
                            $(".suCurrentTotal").val(suCurrentTotal + suAmount);

                            let row = "<tr>" +
                                            "<td></td>" +
                                            "<td>" + suDateGiven + "</td>" +
                                            "<td>" + suServiceTime + "</td>" +
                                            "<td>" + suUnitID + "</td>" +
                                            "<td>" + suProcess + "</td>" +
                                            "<td>" + description + "</td>" +
                                            "<td>" + suQtyGiven + "</td>" +
                                            "<td>" + suMeasure + "</td>" +
                                            "<td>" + suAmount.toFixed(2) + "</td>" +
                                            "<td> NEWREC </td>" +
                                            "<td>" + woperator + "</td>" +
                                            "<td>" + dateNow + "</td>" +
                                            "<td>" + process + "</td>" +
                                            "<td>" + stokeItem + "</td>" +
                                            "<td>" + doctor + "</td>" +
                                            "<td> 0 </td>" +
                                            "<td>" + suUnitID + "</td>" +
                                            "<td></td>" +
                                      "</tr>";

                            $(".suTbody").append(row);

                            //re-adjust the count values after adding rows
                            let counter = 0;
                            $(".suTbody").find("tr").each(function () {
                                $(this).find("td").eq(0).text(++counter);
                            });
                        }

                        $(".suProcedure").val("");
                        $(".suStockItem").val("");
                        $(".suMeasure").val("");
                        $(".suDateGiven").val(dateNow);
                        $(".suSubmitBtn").prop({disabled: false});
                        $(".suQtyGiven").val(0);
                        $(".suIsDelete").val(false);
                        return;
                    }
                }
            })

            $(".suSubmitBtn").on({
                click: function () {
                    let suAdminReference = $(".suAdminReference").val().trim();

                    let totalRowNo = Number($(".suTbody").find("tr").last().find("td").eq(0).text());

                    if (totalRowNo > 0) {
                        //REPORTS Class holds the table data
                        let tableList = [];

                        $(".suTbody").find("tr").each(function () {
                            let rowObject = {
                                txtstaffno: $(this).find("td").eq(0).text().trim(),  // for Serial No
                                txtclinic: $(this).find("td").eq(1).text().trim(), // for date
                                cbotitle: $(this).find("td").eq(2).text().trim(), // for Time
                                combFacility: $(this).find("td").eq(3).text().trim(),  // for facility text
                                txtsurname: $(this).find("td").eq(4).text().trim(), // for billing code
                                edtallergies: $(this).find("td").eq(5).text().trim(), // for description
                                cbotype: $(this).find("td").eq(6).text().trim(), // for qty
                                cbogender: $(this).find("td").eq(7).text().trim(), // for u/m
                                txtcreditlimit: $(this).find("td").eq(8).text().trim(), // for amount
                                categ_save: $(this).find("td").eq(9).text().trim(), // for status
                                combillcycle: $(this).find("td").eq(10).text().trim(), // for user
                                txtcurrency: $(this).find("td").eq(11).text().trim(), // for date Time
                                cbokinstate: $(this).find("td").eq(12).text().trim(), // for process
                                cboTribe: $(this).find("td").eq(13).text().trim(), // for stkcode
                                doctor: $(this).find("td").eq(14).text().trim(), // for doctor
                                txtbranch: $(this).find("td").eq(15).text().trim(), // for recid
                                cbogenotype: $(this).find("td").eq(16).text().trim(), // for store
                                txtworkphone: $(this).find("td").eq(17).text().trim(), // for update
                            };

                            tableList.push(rowObject)
                        });


                        if (confirm("Confirm to Submit Records...")) {
                            $.ajax({
                                url: "/AJAX/suSubmitBtnClick",
                                method: "POST",
                                data: { tableList: tableList, suAdminReference: suAdminReference },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                            $(".suSubmitBtn").prop({ disabled: true });
                                            ClearControls();
                                        }
                                    }
                                }
                            })
                        }

                    }

                }
            })

            $(".suMedicalNotes").on({
                click: function () {
                    let suAdminReference = $(".suAdminReference").val().trim();

                    medicalNoteClickFunction(suAdminReference);
                }
            })

            function inpatientPrescFunction(xAdminReference, xName, xCaller) {
                let pharmacystkscreenid = 0;
                let isfromduenext = false;
                let mreference = false;
                $(".inpPrescCaller").val(xCaller);

                $.ajax({
                    url: "/AJAX/inPatientPresBtnClick",
                    method: "POST",
                    data: { xAdminReference: xAdminReference },
                    success: function (data) {
                        if (data != null) {
                            if (data.alertMessage != null) {
                                alert(data.alertMessage);
                                return;
                            }

                            if (xCaller == "SERVICE_UPDATE") {
                                $(".serviceUpdateBlock").hide();
                                $(".inPatPrescBlock").show();
                            } else if (xCaller == "REVIEW") {
                                $(".serviceUpdateTab").click();
                                $(".treatmentChartBlock").hide();
                                $(".serviceUpdateBlock").hide();
                                $(".inPatPrescBlock").show();
                            }

                            let xstr = isfromduenext ? " - UNCHARTED PRESCRIPTIONS" : "";
                            let Text = "Adm. Ref.:" + xAdminReference + " [" + xName + "]" + xstr;
                            let isduenext = isfromduenext;
                            $(".inPatPrescTitle").text(Text);

                            //if (isduenext)
                            //    panel_header.Enabled = chkUnprocessed.Checked = chkUnprocessed.Visible = false;
                            //if (pharmacystkscreenid == 2 || mreference == "")
                            //    btnAdd.Visible = true;

                            $(".inpPrescAdmRef").val(xAdminReference);
                            $(".isduenext").val(isfromduenext);

                            //InpPrescription On-Load
                            if (xAdminReference != "") {
                                mreference = true;
                            }
                        }
                    }
                }).then(() => {
                    if (mreference) {
                        let inpPrescAdmRef = $(".inpPrescAdmRef").val();
                        let isduenext = $(".isduenext").val() == "true" ? true : false;
                        let inpPrescDateFrom = $(".inpPrescDateFrom").val();
                        let inpPrescDateTo = $(".inpPrescDateTo").val();
                        let chkUnProcessed = $(".chkUnProcessed").prop("checked");

                        $.ajax({
                            url: "/AJAX/inpPrescLoadDetails",
                            method: "POST",
                            data: {
                                xAdminReference: xAdminReference, isduenext: isduenext, inpPrescDateFrom: inpPrescDateFrom,
                                inpPrescDateTo: inpPrescDateTo, chkUnProcessed: chkUnProcessed
                            },
                            success: function (data) {
                                if (data != null) {
                                    let inpdispensas = data;

                                    if (inpdispensas.length < 1) {
                                        alert("No Record...");
                                        return;
                                    }

                                    if (inpdispensas.length > 0) {
                                        let rows = "";
                                        let name = "";

                                        for (var i = 0; i < inpdispensas.length; i++) {
                                            let tranDate = inpdispensas[i].TRANS_DATE;
                                            let balance = Number(inpdispensas[i].QTY_PR) - Number(inpdispensas[i].phQtyTransferred);
                                            let dose = inpdispensas[i].CDOSE + " x " + inpdispensas[i].CINTERVAL + " x " +
                                                inpdispensas[i].CDURATION + " : " + inpdispensas[i].RX;
                                            let phProcess = inpdispensas[i].phtransferred ? "YES" : "NO";

                                            if (inpdispensas[i].NAME != null) {
                                                name = inpdispensas[i].NAME.trim() == "" ? inpdispensas[i].GROUPCODE.trim() + ":" +
                                                    inpdispensas[i].PATIENTNO.trim() : inpdispensas[i].NAME;
                                            }

                                            rows += "<tr>" +
                                                        "<td></td>" +
                                                        "<td>" + formatDate1(tranDate) + "</td>" +
                                                        "<td>" + inpdispensas[i].ITEMNO + "</td>" +
                                                        "<td>" + inpdispensas[i].STK_DESC + "</td>" +
                                                        "<td>" + inpdispensas[i].QTY_PR + "</td>" +
                                                        "<td>" + inpdispensas[i].CUMGV + "</td>" +
                                                        "<td>" + inpdispensas[i].phQtyTransferred + "</td>" +
                                                        "<td>" + balance + "</td>" +
                                                        "<td>" + inpdispensas[i].UNIT + "</td>" +
                                                        "<td>" + dose + "</td>" +
                                                        "<td>" + inpdispensas[i].DOCTOR + "</td>" +
                                                        "<td>" + inpdispensas[i].UNITCOST + "</td>" +
                                                        "<td>" + inpdispensas[i].COST + "</td>" +
                                                        "<td>" + inpdispensas[i].STKBAL + "</td>" +
                                                        "<td>" + inpdispensas[i].STK_ITEM + "</td>" +
                                                        "<td>" + inpdispensas[i].QTY_GV + "</td>" +
                                                        "<td>" + inpdispensas[i].RECID + "</td>" +
                                                        "<td>" + phProcess + "</td>" +
                                                        "<td>" + name + "</td>" +
                                                    "</tr>";
                                        }

                                        $(".inpPrescTbody").html(rows);

                                        //re-adjust the count values after adding rows
                                        let counter = 0;
                                        $(".inpPrescTbody").find("tr").each(function () {
                                            $(this).find("td").eq(0).text(++counter);
                                        });
                                    }

                                }

                            }
                        })
                    }
                })
            }

            $(".suInPatientPresBtn").on({
                click: function () {
                    let suAdminReference = $(".suAdminReference").val().trim();
                    let suName = $(".suName").val().trim();
                    let caller = "SERVICE_UPDATE";

                    inpatientPrescFunction(suAdminReference, suName, caller);
                }
            })

            $(".suStockItem").on({
                focusout: function () {
                    let suStockItem = $(".suStockItem").val();
                    let suStockItemText = $(".suStockItem").find(`[value="${suStockItem}"]`).text().trim();
                    let suUnitID = $(".suUnitID").val();
                    let suUnitIDText = $(".suUnitID").find(`[value="${suUnitID}"]`).text().trim();
                    let suIsDelete = $(".suIsDelete").val().trim() == "true" ? true : false;
                    let suDateGiven = $(".suDateGiven").val();
                    let SUamtsave = Number($(".SUamtsave").val());

                    if (suStockItem == "" || suStockItem == null) {
                        return;
                    }

                    //REPORTS Class holds the table data
                    let tableList = [];
                    $(".suTbody").find("tr").each(function () {
                        let rowObject = {
                            txtstaffno: $(this).find("td").eq(0).text().trim(),  // for Serial No
                            txtclinic: $(this).find("td").eq(1).text().trim(), // for date
                            cbotitle: $(this).find("td").eq(2).text().trim(), // for Time
                            combFacility: $(this).find("td").eq(3).text().trim(),  // for facility text
                            txtsurname: $(this).find("td").eq(4).text().trim(), // for billing code
                            edtallergies: $(this).find("td").eq(5).text().trim(), // for description
                            cbotype: $(this).find("td").eq(6).text().trim(), // for qty
                            cbogender: $(this).find("td").eq(7).text().trim(), // for u/m
                            txtcreditlimit: $(this).find("td").eq(8).text().trim(), // for amount
                            categ_save: $(this).find("td").eq(9).text().trim(), // for status
                            combillcycle: $(this).find("td").eq(10).text().trim(), // for user
                            txtcurrency: $(this).find("td").eq(11).text().trim(), // for date Time
                            cbokinstate: $(this).find("td").eq(12).text().trim(), // for process
                            cboTribe: $(this).find("td").eq(13).text().trim(), // for stkcode
                            doctor: $(this).find("td").eq(14).text().trim(), // for doctor
                            txtbranch: $(this).find("td").eq(15).text().trim(), // for recid
                            cbogenotype: $(this).find("td").eq(16).text().trim(), // for store
                            txtworkphone: $(this).find("td").eq(17).text().trim(), // for update
                        };

                        tableList.push(rowObject)
                    });

                    let deleteRec = "";
                    let authReq = "";

                    $.ajax({
                        url: "/AJAX/suStockItemFocusout",
                        method: "POST",
                        data: {
                            suStockItem: suStockItem, suUnitID: suUnitID, suUnitIDText: suUnitIDText, suStockItemText: suStockItemText,
                            suIsDelete: suIsDelete, suDateGiven: suDateGiven, SUamtsave: SUamtsave, tableList: tableList
                        },
                        success: function (data) {
                            if (data != null) {
                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                    return;
                                }

                                $(".SUrecno").val(data.nmr30days);
                                $(".suQtyGiven").val(data.nmrcurdebit);
                                $(".suAmount").val(data.nmrMinBalance);
                                $(".hiddenSUnewRec").val(data.newrec);
                                $(".suIsDelete").val(data.cmbdelete);
                                $(".SUamtsave").val(data.nmrPayable);

                                if (data.txtconsultamt != null) {
                                    $(".suStockItem").val(data.txtconsultamt);
                                }
                                if (data.txtothername != null) {
                                    $(".suProcedure").val(data.txtothername);
                                }
                                if (data.txtemployer != null) {
                                    $(".suUnitID").val(data.txtemployer);
                                }
                                if (data.ActRslt != null) {
                                    alert(data.ActRslt);
                                }
                                if (data.SessionDs != null) {
                                    deleteRec = data.SessionDs;
                                }
                                if (data.SessionBis != null) {
                                    authReq = data.SessionBis;
                                }

                            }
                        }
                    }).then(() => {
                        if (deleteRec.trim() != "") {
                            if (confirm(deleteRec)) {
                                let recno = Number($(".SUrecno").val());
                                let recID = 0;

                                $(".suTbody").find("tr").each(function () {
                                    let rowNo = Number($(this).find("td").eq(0).text().trim());  // for Serial No

                                    if (recno == rowNo) {
                                        recID = Number($(this).find("td").eq(15).text().trim());
                                    }
                                })

                                $.ajax({
                                    url: "/AJAX/suReturnDelete",
                                    method: "POST",
                                    data: { recID: recID },
                                    success: function (data) {
                                        if (data != null) {
                                            if (data.alertMessage != null) {
                                                $(".suTbody").find("tr").each(function () {
                                                    let rowNo = Number($(this).find("td").eq(0).text().trim());  // for Serial No

                                                    if (recno == rowNo) {
                                                        $(this).remove();
                                                    }
                                                })

                                                $(".suIsDelete").val(data.cmbdelete);
                                                alert(data.alertMessage);
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    }).then(() => {
                        if (authReq.trim() != "") {
                            if (confirm(authReq)) {
                                //pre authorization may not be necessary for inpatient
                            }
                        }
                    })

                }
            })

            $(".suQtyGiven").on({
                focusout: function () {
                    let suQtyGiven = Number($(this).val().trim());
                    let suAmount = Number($(".suAmount").val().trim());

                    if (suQtyGiven > 0)
                        $(".suAmount").val(suAmount * suQtyGiven);

                }
            })

            $(".suAmount").on({
                focusout: function () {
                    let suAmount = Number($(this).val().trim());
                    let SUamtsave = Number($(".SUamtsave").val());

                    if (suAmount < SUamtsave)
                    {
                        alert("Amount is less than defined value...");
                        $(".suAmount").val(SUamtsave);
                        return;
                    }
                }
            })

            $(".suAutoGenerateBtn").on({
                click: function () {
                    if (confirm("Confirm to Check Auto-Generatable items on Admissions Management")) {

                        $.ajax({
                            url: "/AJAX/suAutoGenerateBtnClick",
                            method: "POST",
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }

                                }
                            }
                        })

                    }

                }
            })


            //************************************* Medical Notes Modal ***********************************
            $(".xSaveNoteBtn").on({
                click: function () {
                    let xSpecInstText = $(".xSpecInstText").val().trim();
                    let xMedNoteText = $(".xMedNoteText").val().trim();
                    let mgroupcode = $(".mgroupcode").val();
                    let mpatientno = $(".mpatientno").val();

                    if (xSpecInstText == "" || xSpecInstText == null && xMedNoteText == "" || xMedNoteText == null) {
                        return;
                    }

                    if (confirm("Confirm To Apply Changes...")) {
                        medNoteSaveFunction(xSpecInstText, xMedNoteText, mgroupcode, mpatientno);
                    }

                }
            })


            //************************************* Inpatient Prescription ********************************
            $(".chkUnProcessed").prop({checked: true});

            $(".inpPrescAdmRef").on({
                focusout: function () {
                    let inpPrescAdmRef = $(".inpPrescAdmRef").val().trim();

                    if (inpPrescAdmRef.trim() != "") {
                        $.ajax({
                            url: "/AJAX/inpPrescAdmRefFocusout",
                            method: "POST",
                            data: { inpPrescAdmRef: inpPrescAdmRef},
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        $(".inpPrescAdmRef").val("");
                                        return;
                                    }

                                    if (data.txtreference != null)
                                        $(".inpPrescAdmRef").val(data.txtreference);
                                    if (data.TXTPATIENTNAME != null)
                                        $(".inpPrescName").val(data.TXTPATIENTNAME);
                                    if (data.REPORT_TYPE1 != null)
                                        $(".inpPrescDateFrom").val(data.REPORT_TYPE1);
                                    if (data.REPORT_TYPE2 != null)
                                        $(".inpPrescDateTo").val(data.REPORT_TYPE2);
                                    if (data.mreference != null)
                                        $(".mreference").val(data.mreference);

                                }
                            }
                        })
                    }

                }
            })

            $(".inpPrescLoadBtn").on({
                click: function () {
                    let inpPrescAdmRef = $(".inpPrescAdmRef").val().trim();
                    let mreference = $(".mreference").val();
                    let inpPrescName = $(".inpPrescName").val();
                    let isduenext = $(".isduenext").val() == "true" ? true : false;
                    let inpPrescDateFrom = $(".inpPrescDateFrom").val();
                    let inpPrescDateTo = $(".inpPrescDateTo").val();
                    let chkUnProcessed = $(".chkUnProcessed").prop("checked");
                    let Text = "";

                    if (inpPrescAdmRef ==""){
                        Text = "Adm. Ref.:" + mreference.Trim() + " [" + inpPrescName.Trim() + "]";
                    }
                    else {
                        Text = "ALL";
                    }

                    $(".inPatPrescTitle").text(Text);

                    $.ajax({
                        url: "/AJAX/inpPrescLoadBtnClick",
                        method: "POST",
                        data: {
                            inpPrescAdmRef: inpPrescAdmRef, isduenext: isduenext, inpPrescDateFrom: inpPrescDateFrom,
                            inpPrescDateTo: inpPrescDateTo, chkUnProcessed: chkUnProcessed
                        },
                        success: function (data) {
                            if (data != null) {
                                let inpdispensas = data;

                                if (inpdispensas.length < 1) {
                                    alert("No Record...");
                                    return;
                                }

                                if (inpdispensas.length > 0) {
                                    let rows = "";
                                    let name = "";

                                    for (var i = 0; i < inpdispensas.length; i++) {
                                        let tranDate = inpdispensas[i].TRANS_DATE;
                                        let balance = Number(inpdispensas[i].QTY_PR) - Number(inpdispensas[i].phQtyTransferred);
                                        let dose = inpdispensas[i].CDOSE + " x " + inpdispensas[i].CINTERVAL + " x " +
                                            inpdispensas[i].CDURATION + " : " + inpdispensas[i].RX;
                                        let phProcess = inpdispensas[i].phtransferred ? "YES" : "NO";

                                        if (inpdispensas[i].NAME != null) {
                                            name = inpdispensas[i].NAME.trim() == "" ? inpdispensas[i].GROUPCODE.trim() + ":" +
                                                inpdispensas[i].PATIENTNO.trim() : inpdispensas[i].NAME;
                                        }

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td>" + formatDate1(tranDate) + "</td>" +
                                                    "<td>" + inpdispensas[i].ITEMNO + "</td>" +
                                                    "<td>" + inpdispensas[i].STK_DESC + "</td>" +
                                                    "<td>" + inpdispensas[i].QTY_PR + "</td>" +
                                                    "<td>" + inpdispensas[i].CUMGV + "</td>" +
                                                    "<td>" + inpdispensas[i].phQtyTransferred + "</td>" +
                                                    "<td>" + balance + "</td>" +
                                                    "<td>" + inpdispensas[i].UNIT + "</td>" +
                                                    "<td>" + dose + "</td>" +
                                                    "<td>" + inpdispensas[i].DOCTOR + "</td>" +
                                                    "<td>" + inpdispensas[i].UNITCOST + "</td>" +
                                                    "<td>" + inpdispensas[i].COST + "</td>" +
                                                    "<td>" + inpdispensas[i].STKBAL + "</td>" +
                                                    "<td>" + inpdispensas[i].STK_ITEM + "</td>" +
                                                    "<td>" + inpdispensas[i].QTY_GV + "</td>" +
                                                    "<td>" + inpdispensas[i].RECID + "</td>" +
                                                    "<td>" + phProcess + "</td>" +
                                                    "<td>" + name + "</td>" +
                                                "</tr>";
                                    }

                                    $(".inpPrescTbody").html(rows);

                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".inpPrescTbody").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });
                                }

                            }


                        }
                    })

                }
            })

            $(".inpPrescCloseBtn").on({
                click: function () {
                    let inpPrescCaller = $(".inpPrescCaller").val();

                    if (inpPrescCaller == "SERVICE_UPDATE") {
                        $(".serviceUpdateBlock").show();
                        $(".inPatPrescBlock").hide();
                    } else if (inpPrescCaller == "REVIEW") {
                        $(".serviceUpdateBlock").show();
                        $(".inPatPrescBlock").hide();
                        $(".reviewTab").click();
                    }

                }
            })


            //****************************** Treatment Chart Block ***********************************
            //On Load
            $(".trtmentReference").prop({ disabled: true });
            $(".trtmentGroupCode").prop({ disabled: true });
            $(".trtmentPatientNo").prop({ disabled: true });
            $(".trtmentName").prop({ disabled: true });
            $(".trtmentDiagnosis").prop({ disabled: true });
            $(".trtmentDateOfAdm").prop({ disabled: true });
            $(".trtmentBed").prop({ disabled: true });
            $(".trtmentRoom").prop({ disabled: true });
            $(".trtmentFacility").prop({ disabled: true });
            $(".trtmentDateOfDisch").prop({ disabled: true });
            $(".trtmentChkStore").prop({ checked: true });
            $(".trtmentSubmitBtn").prop({ disabled: true });
            $(".trtmentAddBtn").prop({ disabled: true });
            $(".trtmentRemoveBtn").prop({ disabled: true });
            $(".prescriptionTextArea").hide();

            ShowModal(dOM, '#refLookUp13', '#13LkUp', function aF() {
                dOM.find('#13LkUp .trtmentInpPrescAddBtn').on({
                    click: function () {
                        let lastNumber = Number($(".inpPrescTbody2").find("tr:last").find("td:first").text());
                        let inpPrescRecno = Number($(".inpPrescRecno").val());
                        let description = "";
                        let given = "";
                        let phProcess = "";
                        let doseIntervalDuration = "";

                        if (lastNumber < 1) {
                            return;
                        }

                        if (inpPrescRecno > 0) {
                            $(".inpPrescTbody2").find("tr").each(function () {
                                let serialNo = Number($(this).find("td:eq(0)").text().trim());

                                if (inpPrescRecno == serialNo) {
                                    description = $(this).find("td:eq(3)").text().trim();
                                    given = $(this).find("td:eq(5)").text().trim();
                                    doseIntervalDuration = $(this).find("td:eq(7)").text().trim();
                                    phProcess = $(this).find("td:eq(15)").text().trim();
                                }
                            });

                            $.ajax({
                                url: "/AJAX/trtmentInpPrescAddBtnClicked",
                                method: "POST",
                                data: { phProcess: phProcess, given: given },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                            return;
                                        }

                                        //$(".prescriptionTextArea").show();

                                        //panel_TF.Visible = true;
                                        if (data.chkADVCorporate) {

                                        }

                                        let value = doseIntervalDuration.split("x")
                                        let cDose = value[0];
                                        let cInterval = value[1];
                                        let durationRX = value[2].split(":");
                                        let cDuration = durationRX[0];
                                        let RX = durationRX[1];

                                        let prescriptionText = `${description} \r\n ${cDose} x ${cInterval} For ${cDuration} Sp.Instr : ${RX} : `
                                        $(".prescriptionTextArea").val(prescriptionText);
                                    }
                                }
                            });

                        }

                    }
                });

            });


            $(".suTreatmentChtBtn").on({
                click: function () {
                    let suAdminReference = $(".suAdminReference").val().trim();
                    let suCurAdmin = $(".suCurAdmin").prop("checked");

                    $.ajax({
                        url: "/AJAX/suTreatmentChtBtnClick",
                        method: "POST",
                        data: { suAdminReference: suAdminReference },
                        success: function (data) {
                            if (data.REPORTS.alertMessage != null) {
                                alert(data.REPORTS.alertMessage);
                                return;
                            }

                            if (suCurAdmin) {
                                $(".trtmentAddBtn").prop({ disabled: false });
                                $(".trtmentRemoveBtn").prop({ disabled: false });
                                $(".trtmentSubmitBtn").prop({ disabled: false });
                            }

                            $(".trtmentTbody").html("");

                            $(".treatmentChartBlock").show();
                            $(".serviceUpdateBlock").hide();
                            $(".inPatPrescBlock").hide();

                            if (data.REPORTS != null) {
                                let report = data.REPORTS;

                                if (report.txtreference != null)
                                    $(".trtmentReference").val(report.txtreference);
                                if (report.txtgroupcode != null)
                                    $(".trtmentGroupCode").val(report.txtgroupcode);
                                if (report.txtpatientno != null)
                                    $(".trtmentPatientNo").val(report.txtpatientno);
                                if (report.TXTPATIENTNAME != null)
                                    $(".trtmentName").val(report.TXTPATIENTNAME);
                                if (report.diagnosis != null)
                                    $(".trtmentDiagnosis").val(report.diagnosis);
                                if (report.REPORT_TYPE1 != null)
                                    $(".trtmentDateOfAdm").val(report.REPORT_TYPE1);
                                if (report.txtBed != null)
                                    $(".trtmentBed").val(report.txtBed);
                                if (report.txtRoom != null)
                                    $(".trtmentRoom").val(report.txtRoom);
                                if (report.combFacility != null)
                                    $(".trtmentFacility").val(report.combFacility);


                            }

                            if (data.DUENEXTS != null) {
                                let duenexts = data.DUENEXTS;

                                if (duenexts.length > 0) {
                                    let rows = "";

                                    for (var i = 0; i < duenexts.length; i++) {
                                        let tranDate = duenexts[i].TRANS_DATE;
                                        let status = duenexts[i].POSTED ? "POSTED" : "";
                                        let isPosted = duenexts[i].POSTED ? "checked" : "";

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td>" + formatDate1(tranDate) + "</td>" +
                                                    "<td>" + duenexts[i].DUETIME + "</td>" +
                                                    "<td>" + duenexts[i].TIMEGIVEN + "</td>" +
                                                    "<td>" + duenexts[i].STK_DESC + "</td>" +
                                                    "<td>" + duenexts[i].DOSE + "</td>" +
                                                    "<td>" + duenexts[i].UNIT + "</td>" +
                                                    "<td>" + duenexts[i].METHODADM + "</td>" +
                                                    "<td>" + duenexts[i].NURSE + "</td>" +
                                                    "<td>" + duenexts[i].REMARKS + "</td>" +
                                                    "<td>" + duenexts[i].BILLQTY + "</td>" +
                                                    "<td>" + duenexts[i].BILLQTYUNIT + "</td>" +
                                                    "<td>" + duenexts[i].UNITCOST + "</td>" +
                                                    "<td>" + duenexts[i].COST + "</td>" +
                                                    "<td> <input type='checkbox' class='input w-3' " + isPosted + "/></td>" +
                                                    "<td>" + duenexts[i].STK_ITEM + "</td>" +
                                                    "<td>" + duenexts[i].STKBAL + "</td>" +
                                                    "<td>" + duenexts[i].PACKQTY + "</td>" +
                                                    "<td>" + duenexts[i].PACKCOST + "</td>" +
                                                    "<td>" + status + "</td>" +
                                                    "<td>" + duenexts[i].RECID + "</td>" +
                                                    "<td></td>" +
                                                "</tr>";
                                    }

                                    $(".trtmentTbody").html(rows);

                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".trtmentTbody").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });


                                    //table cells functions
                                    $(".trtmentTbody").find("tr").each(function () {

                                        $(this).click(function () {
                                            $(this).parents("tbody").find("tr").each(function () {
                                                $(this).find("[class='activeRow']").removeClass("activeRow");
                                            })

                                            $(this).find("td:even").addClass("activeRow");
                                            $(this).find("td:odd").addClass("activeRow");

                                            let timeGiven = $(this).find("td:eq(3)").text().trim();
                                            let status = $(this).find("td:eq(19)").text().trim();
                                            let Globalsmcandelete = $(".Globalsmcandelete").val() ? true : false;

                                            if (timeGiven == "" || timeGiven == null && status != "POSTED" && Globalsmcandelete){
                                                $(".trtmentRemoveBtn").prop({ disabled: false });
                                            }
                                        })

                                        //posted cell click
                                        $(this).find("td:eq(14)").click(function () {
                                            let trtmentReference = $(".trtmentReference").val().trim();
                                            let trtmentProcBillCode = $(".trtmentProcBillCode").val();
                                            let trtmentUnit = $(".trtmentUnit").val();
                                            let drugName = $(this).parent().find("td:eq(4)").text().trim();
                                            let billQty = Number($(this).parent().find("td:eq(10)").text().trim());
                                            let total = Number($(this).parent().find("td:eq(13)").text().trim());
                                            let trtmentChkStore = $(".trtmentChkStore").prop("checked");
                                            let trtmentName = $(".trtmentName").val().trim();
                                            let medhistwritten = $(".medhistwritten").val() == "true" ? true : false;

                                            //DUENEXT class holds the data
                                            let rowList = {
                                                ITEMNO: Number($(this).parent().find("td:eq(0)").text().trim()),
                                                TRANS_DATE: $(this).parent().find("td:eq(1)").text().trim(),
                                                TIMEGIVEN: $(this).parent().find("td:eq(3)").text().trim(),
                                                STK_DESC: $(this).parent().find("td:eq(4)").text().trim(),
                                                DOSE: Number($(this).parent().find("td:eq(5)").text().trim()),
                                                UNIT: $(this).parent().find("td:eq(6)").text().trim(),
                                                BILLQTY: Number($(this).parent().find("td:eq(10)").text().trim()),
                                                BILLQTYUNIT: $(this).parent().find("td:eq(11)").text().trim(),
                                                UNITCOST: Number($(this).parent().find("td:eq(12)").text().trim()),
                                                COST: Number($(this).parent().find("td:eq(13)").text().trim()),
                                                STK_ITEM: $(this).parent().find("td:eq(15)").text().trim(),
                                                PACKQTY: Number($(this).parent().find("td:eq(17)").text().trim()),
                                            }

                                            if (trtmentReference == "" || trtmentProcBillCode == "" || trtmentProcBillCode == null ||
                                                drugName == "" || drugName == null || trtmentUnit == "" || trtmentUnit == null)
                                            {
                                                $(this).find("input").addClass("chkPost");
                                                alert("Unable to Save Record... Vital Fields are empty !\r\n Check Store/Cost Centre/ product description/bill process code... ");
                                                $(".chkPost").prop({ checked: false });
                                                return;
                                            }

                                            if (billQty == 0 && total != 0) {
                                                if (!confirm("Bill Quantity is Empty and there is value on Cost of Drug... CONTINUE ?")) {
                                                    return;
                                                }
                                            }

                                            if (!confirm("Confirm to Update Service Record...")) {
                                                return;
                                            }

                                            $.ajax({
                                                url: "/AJAX/trtmentTbodyClick",
                                                method: "POST",
                                                data: {
                                                    rowList: rowList, trtmentChkStore: trtmentChkStore, trtmentUnit: trtmentUnit, trtmentName: trtmentName,
                                                    trtmentReference: trtmentReference, trtmentProcBillCode: trtmentProcBillCode, medhistwritten: medhistwritten
                                                },
                                                success: function (data) {
                                                    if (data != null) {
                                                        if (data.alertMessage != null) {
                                                            alert(data.alertMessage);
                                                            return;
                                                        }

                                                        if (data.ActRslt != null) {
                                                            alert(data.ActRslt);
                                                        }

                                                        if (data.chkAuditProfile)
                                                            $(".medhistwritten").val(true);
                                                    }
                                                }
                                            })

                                        })

                                        //billQty cell click
                                        $(this).find("td:eq(10)").click(function () {
                                            let billQty = Number($(this).parent().find("td:eq(10)").text().trim());
                                            let unitCost = Number($(this).parent().find("td:eq(12)").text().trim());

                                            if (billQty > 0 && unitCost > 0) {
                                                let cost = billQty * unitCost;
                                                $(this).parent().find("td:eq(13)").text(cost);
                                            }

                                        })

                                        //timeGiven cell click
                                        $(this).find("td:eq(3)").click(function () {
                                            let transDate = $(this).parent().find("td:eq(1)").text().trim();
                                            let dueTime = Number($(this).parent().find("td:eq(2)").text().trim());
                                            let timeGiven = $(this).parent().find("td:eq(3)").text().trim();
                                            let timeNow = Number($(".timeNow").val().trim());
                                            let dateNow = new Date();
                                            dateNow.setHours(0, 0, 0);

                                            if (timeGiven != "" && new Date(transDate) == dateNow && dueTime < timeNow)
                                            {
                                                if (!confirm("This Prescription is not due yet... CONTINUE ?")) {
                                                    $(this).parent().find("td:eq(3)").text("");
                                                }
                                            }

                                        })

                                    });
                                }

                            }

                        }
                    })

                }
            })

            $(".trtmentCloseBtn").on({
                click: function () {
                    $(".treatmentChartBlock").hide();
                    $(".serviceUpdateBlock").show();
                    $(".inPatPrescBlock").hide();
                }
            })

            function addRowTrtmentChat() {
                let dateNow = $(".dateNow").val();

                let row = "<tr>" +
                                   "<td></td>" +
                                   "<td>" + dateNow + "</td>" +
                                   "<td><input type='text' class='input w-2'/></td>" +
                                   "<td><input type='text' class='input w-2'/></td>" +
                                   "<td></td>" +
                                   "<td> <input type='text' class='input w-2'/> </td>" +
                                   "<td> <input type='text' class='input w-2'/> </td>" +
                                   "<td> <input type='text' class='input w-3'/> </td>" +
                                   "<td></td>" +
                                   "<td> <input type='text' class='input w-3'/> </td>" +
                                   "<td> <input type='number' class='input w-2' placeholder='0'/> </td>" +
                                   "<td> <input type='text' class='input w-2'/> </td>" +
                                   "<td> <input type='number' class='input w-2' placeholder='0'/> </td>" +
                                   "<td> <input type='number' class='input w-2' placeholder='0'/> </td>" +
                                   "<td> <input type='checkbox' class='input w-3'/> </td>" +
                                   "<td> <input type='text' class='input w-2'/> </td>" +
                                   "<td> <input type='number' class='input w-2' placeholder='0'/> </td>" +
                                   "<td> <input type='number' class='input w-2' placeholder='0'/> </td>" +
                                   "<td> <input type='text' class='input w-2'/> </td>" +
                                   "<td></td>" +
                                   "<td></td>" +
                                   "<td>0</td>" +
                            "</tr>";

                $(".trtmentTbody").append(row);

                //re-adjust the count values after adding rows
                let counter = 0;
                $(".trtmentTbody").find("tr").each(function () {
                    $(this).find("td").eq(0).text(++counter);
                });
            }

            $(".trtmentAddBtn").on({
                click: function () {
                    let lastNumber = Number($(".trtmentTbody").find("tr:last").find("td:first").text());

                    if (lastNumber < 1) {
                        addRowTrtmentChat();
                    } else {
                        let dueTime = $(".trtmentTbody").find("tr:last").find("td:eq(2)").find("input").val().trim();
                        let nameOfDrug = $(".trtmentTbody").find("tr:last").find("td:eq(4)").text().trim();

                        if (dueTime == "" || nameOfDrug == "" || nameOfDrug == null) {
                            alert("Generated record space has not been fully utilized...");
                            return;
                        } else {
                            addRowTrtmentChat();
                        }
                    }

                    //table cells functions
                    $(".trtmentTbody").find("tr").each(function () {
                        $(this).click(function () {
                            $(this).parents("tbody").find("tr").each(function () {
                                $(this).find("[class='activeRow']").removeClass("activeRow");
                            })

                            $(this).find("td:even").addClass("activeRow");
                            $(this).find("td:odd").addClass("activeRow");

                            let trtmentRecno = $(this).find("td:eq(0)").text().trim();
                            $(".trtmentRecno").val(trtmentRecno);
                        })

                        //timeGiven cell click
                        $(this).find("td:eq(2)").find("input").on({
                            focus: function () {
                                let timeNow = $(".timeNow").val();

                                $(this).val(timeNow);
                            }
                        })

                    });

                }
            })

            $(".trtmentSubmitBtn").on({
                click: function () {
                    let totalRowNo = Number($(".trtmentTbody").find("tr").last().find("td").eq(0).text()); //Gets the last serial number
                    let trtmentReference = $(".trtmentReference").val().trim();
                    let trtmentUnit = $(".trtmentUnit").val();

                    if (totalRowNo > 0) {
                        //REPORTS Class holds the tableList
                        let tableList = [];

                        $(".trtmentTbody").find("tr").each(function () {
                            let rowObject = {
                                txtstaffno: $(this).find("td:eq(0)").text().trim(),  // for Serial No
                                txtclinic: $(this).find("td:eq(1)").text().trim(), // for date
                                cbotitle: $(this).find("td:eq(2)").find("input").val().trim(), // for dueTime
                                combFacility: $(this).find("td:eq(3)").find("input").val().trim(),  // for timeGiven
                                txtsurname: $(this).find("td:eq(4)").text().trim(), // for nameOfDrug
                                edtallergies: $(this).find("td:eq(5)").find("input").val().trim(), // for dose
                                cbotype: $(this).find("td:eq(6)").find("input").val().trim(), // for u/m
                                cbogender: $(this).find("td:eq(7)").find("input").val().trim(), // for methodOfAdmin
                                txtcreditlimit: $(this).find("td:eq(8)").text().trim(), // for givenBy
                                categ_save: $(this).find("td:eq(9)").find("input").val().trim(), // for remarks
                                combillcycle: $(this).find("td:eq(10)").find("input").val().trim(), // for billQty
                                txtcurrency: $(this).find("td:eq(11)").find("input").val().trim(), // for billQtyUnit
                                cbokinstate: $(this).find("td:eq(12)").find("input").val().trim(), // for unitCost
                                cboTribe: $(this).find("td:eq(13)").find("input").val().trim(), // for total
                                cmbsave: $(this).find("td:eq(14)").find("input").prop("checked"), // for post
                                doctor: $(this).find("td:eq(15)").find("input").val().trim(), // for stkItem
                                txtbranch: $(this).find("td:eq(16)").find("input").val().trim(), // for stkBalance
                                cbogenotype: $(this).find("td:eq(17)").find("input").val().trim(), // for packQty
                                txtworkphone: $(this).find("td:eq(18)").find("input").val().trim(), // for packCost
                                txtaddress1: $(this).find("td:eq(19)").text().trim(), // for status
                                txtRoom: $(this).find("td:eq(20)").text().trim(), // for recID
                            };

                            tableList.push(rowObject)
                        });


                        if (confirm("Confirm to Submit Records...")) {
                            $.ajax({
                                url: "/AJAX/trtmentSubmitBtnClick",
                                method: "POST",
                                data: { tableList: tableList, trtmentReference: trtmentReference, trtmentUnit: trtmentUnit },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                        }
                                    }
                                }
                            })
                        }

                    }

                }
            })

            $(".trtmentRemoveBtn").on({
                click: function () {
                    let trtmentRecno = Number($(".trtmentRecno").val());
                    let stkBalance = 0;
                    let recId = 0;

                    if (trtmentRecno > 0) {
                        let proceed = true;

                        $(".trtmentTbody").find("tr").each(function () {
                            let serialNo = Number($(this).find("td:eq(0)").text().trim());

                            if (trtmentRecno == serialNo) {
                                let status = $(this).find("td:eq(19)").text().trim();
                                stkBalance = Number($(this).find("td:eq(16)").find("input").val().trim());
                                recId = $(this).find("td:eq(20)").text().trim();

                                if (status == "POSTED") {
                                    alert("This Record can't be deleted... Its Confirmed!");
                                    proceed = false;
                                    return false;
                                }
                            }
                        });

                        if (proceed) {
                            if (confirm("Delete Record..?")) {
                                $.ajax({
                                    url: "/AJAX/trtmentRemoveBtnClick",
                                    method: "POST",
                                    data: { stkBalance: stkBalance, recId: recId },
                                    success: function (data) {
                                        if (data != null) {
                                            if (data.alertMessage != null) {
                                                alert(data.alertMessage);

                                                $(".trtmentTbody").find("tr").each(function () {
                                                    let serialNo = Number($(this).find("td:eq(0)").text().trim());

                                                    if (trtmentRecno == serialNo) {
                                                        $(this).remove();
                                                    }
                                                });
                                            }
                                        }
                                    }
                                })

                            }
                        }
                    }

                }
            })

            $(".trtmentInpPrescBtn").on({
                click: function () {
                    let trtmentReference = $(".trtmentReference").val().trim();

                    $.ajax({
                        url: "/AJAX/trtmentInpPrescBtnClicked",
                        method: "POST",
                        data: { trtmentReference: trtmentReference },
                        success: function (data) {
                            if (data != null) {
                                let inpdispensas = data;

                                if (inpdispensas.length > 0) {
                                    let rows = "";

                                    for (var i = 0; i < inpdispensas.length; i++) {
                                        let tranDate = inpdispensas[i].TRANS_DATE;
                                        let doseIntervalDuration = `${inpdispensas[i].CDOSE} x ${inpdispensas[i].CINTERVAL} x ${inpdispensas[i].CDURATION} : ${inpdispensas[i].RX}`;
                                        let phProcess = inpdispensas[i].phtransferred ? "YES" : "NO";

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td>" + formatDate1(tranDate) + "</td>" +
                                                    "<td>" + inpdispensas[i].ITEMNO + "</td>" +
                                                    "<td>" + inpdispensas[i].STK_DESC + "</td>" +
                                                    "<td>" + inpdispensas[i].QTY_PR + "</td>" +
                                                    "<td>" + inpdispensas[i].CUMGV + "</td>" +
                                                    "<td>" + inpdispensas[i].UNIT + "</td>" +
                                                    "<td>" + doseIntervalDuration + "</td>" +
                                                    "<td>" + inpdispensas[i].DOCTOR + "</td>" +
                                                    "<td>" + inpdispensas[i].UNITCOST + "</td>" +
                                                    "<td>" + inpdispensas[i].COST + "</td>" +
                                                    "<td>" + inpdispensas[i].STKBAL + "</td>" +
                                                    "<td>" + inpdispensas[i].STK_ITEM  + "</td>" +
                                                    "<td>" + inpdispensas[i].QTY_GV + "</td>" +
                                                    "<td>" + inpdispensas[i].RECID + "</td>" +
                                                    "<td>" + phProcess + "</td>" +
                                                "</tr>";
                                    }

                                    $(".inpPrescTbody2").html(rows);

                                    //re-adjust the count values
                                    let counter = 0;
                                    $(".inpPrescTbody2").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });

                                }

                                //Show modal
                                $("#refLookUp13").click();

                                //table cells functions
                                $(".inpPrescTbody2").find("tr").each(function () {
                                    $(this).click(function () {
                                        $(this).parents("tbody").find("tr").each(function () {
                                            $(this).find("[class='activeRow']").removeClass("activeRow");
                                        })

                                        $(this).find("td:even").addClass("activeRow");
                                        $(this).find("td:odd").addClass("activeRow");

                                        let inpPrescRecno = $(this).find("td:eq(0)").text().trim();
                                        $(".inpPrescRecno").val(inpPrescRecno);
                                    })

                                });

                            }
                        }
                    });

                }
            })



//===================================================== Reviews ================================================================
            //On Load
            $(".chkRevCurAdmin").prop({ checked: true });
            //$(".revPrescriptionBtn").prop({ disabled: true });
            $(".revInvProcReqBtn").addClass("disableDiv");
            $(".revTTHBtn").prop({ disabled: true });
            $(".revRetCaseNoteBtn").prop({ disabled: true });

            $(".observChartBlock").hide();
            $(".specServPatients").hide();
            $(".prescription").hide();


            function observationChartForm() {
                let revAdmReference = $(".revAdmReference").val().trim();
                $(".obAdmReference").val(revAdmReference);

                if (revAdmReference == "") {
                    alert("Patient Record must be Selected...");
                    return;
                }

                $.ajax({
                    url: "/AJAX/observChartOnLoad",
                    method: "POST",
                    data: { revAdmReference: revAdmReference },
                    success: function (data) {
                        if (data.REPORTS != null) {
                            let reports = data.REPORTS;

                            if (reports.alertMessage != null) {
                                alert(reports.alertMessage);
                                return;
                            }

                            if (reports.txtgroupcode != null)
                                $(".obGroupCode").val(reports.txtgroupcode);
                            if (reports.txtpatientno != null)
                                $(".obPatientNo").val(reports.txtpatientno);
                            if (reports.TXTPATIENTNAME != null)
                                $(".obName").val(reports.TXTPATIENTNAME);
                            if (reports.combFacility != null)
                                $(".obFacility").val(reports.combFacility);
                            if (reports.txtRoom != null)
                                $(".obRoom").val(reports.txtRoom);
                            if (reports.txtBed != null)
                                $(".obBed").val(reports.txtBed);
                            if (reports.diagnosis != null)
                                $(".obDiagnosis").val(reports.diagnosis);
                            if (reports.REPORT_TYPE1 != null)
                                $(".obDateOfAdm").val(reports.REPORT_TYPE1);
                            if (reports.REPORT_TYPE2 != null)
                                $(".obDateOfDisch").val(reports.REPORT_TYPE2);
                            if (reports.lblStaffNumber != null)
                                $(".obLblDischarge").text(reports.lblStaffNumber);
                            if (reports.txtaddress1 != null)
                                $(".obAddress").val(reports.txtaddress1);
                            if (reports.txtstaffno != null)
                                $(".obPatProfile").text(reports.txtstaffno);
                            if (reports.txtgrouphead != null)
                                $(".obGrouphead").val(reports.txtgrouphead);

                            if (reports.ActRslt != null)
                                alert(reports.ActRslt);

                        }

                        if (data.MRB22S != null) {
                            let mrb22s = data.MRB22S;

                            if (mrb22s.length > 0) {
                                let rows = "";

                                for (var i = 0; i < mrb22s.length; i++) {
                                    let tranDate = mrb22s[i].TRANS_DATE;
                                    let xposted = mrb22s[i].POSTED ? true : false;
                                    let protect = xposted ? "checked" : "";
                                    let posted = xposted ? "YES" : "NO";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + formatDate1(tranDate) + "</td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].TIME + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].TEMP + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].PULSE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].RESPIRATIO + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-3' value='" + mrb22s[i].BPSITTING + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].SP02 + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb22s[i].REMARK + "'  /> </td>" +
                                                "<td> <input type='checkbox' checked='" + protect + "' /> </td>" +
                                                "<td>" + mrb22s[i].RECID + "</td>" +
                                                "<td>" + posted + "</td>" +
                                                "<td></td>" +
                                            "</tr>";
                                }

                                $(".intenTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".intenTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });

                            }

                        }

                        if (data.MRB23S != null) {
                            let mrb23s = data.MRB23S;

                            if (mrb23s.length > 0) {
                                let rows = "";

                                for (var i = 0; i < mrb23s.length; i++) {
                                    let tranDate = mrb23s[i].TRANS_DATE;
                                    let xposted = mrb23s[i].POSTED ? true : false;
                                    let protect = xposted ? "checked" : "";
                                    let posted = xposted ? "YES" : "NO";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + formatDate1(tranDate) + "</td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].TIME + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].NATUREOFFLUID + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].ORAL + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].RECTRAL + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].IV + "'  /> </td>" +
                                                "<td> <input type='text' class='inputw-2' value='" + mrb23s[i].OTHERROUTES + "'  /> </td>" +
                                                "<td>" + mrb23s[i].INFLO_TOTAL + "</td>" +
                                                "<td> <input type='text' class='input w-2' value=''  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].URINE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].VOMITUS + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].TUBE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OTHERS + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OUT_TOTAL + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].BALANCE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb23s[i].CHLORIDE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value=''  /> </td>" +
                                                "<td> <input type='checkbox' checked='" + protect + "' /> </td>" +
                                                "<td>" + mrb23s[i].RECID + "</td>" +
                                                "<td>" + posted + "</td>" +
                                                "<td></td>" +
                                            "</tr>";
                                }

                                $(".fluidTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".fluidTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });

                            }

                        }

                        if (data.MRB24S != null) {
                            let mrb24s = data.MRB24S;
                            let rows = "";

                            for (var i = 0; i < mrb24s.length; i++) {
                                let tranDate = mrb24s[i].TRANS_DATE;
                                let xposted = mrb24s[i].POSTED ? true : false;
                                let posted = xposted ? "YES" : "NO";
                                let protect = xposted ? "checked" : "";

                                rows += "<tr>" +
                                            "<td></td>" +
                                            "<td>" + formatDate1(tranDate) + "</td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].TIME + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].RBS + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].FBS + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].URINALYSIS + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].ACETONE + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].DRGADMIN + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].REMARK + "'  /> </td>" +
                                            "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OPERATOR + "'  /> </td>" +
                                            "<td> <input type='checkbox' checked='" + protect + "' /> </td>" +
                                            "<td>" + mrb24s[i].RECID + "</td>" +
                                            "<td>" + posted + "</td>" +
                                            "<td></td>" +
                                        "</tr>";
                            }

                            $(".diabTbody").html(rows);

                            //re-adjust the count values after adding rows
                            let counter = 0;
                            $(".diabTbody").find("tr").each(function () {
                                $(this).find("td").eq(0).text(++counter);
                            });
                        }
                    }
                })

                $(".observChartBlock").show();
                $(".reviewBlock").hide();
                $(".specServPatients").hide();
                $(".prescription").hide();
            }


            $(".revAdmReference").on({
                focus: function () {
                    $(".revnewrec").val("true");
                },

                focusout: function () {
                    let revAdmReference = $(this).val().trim();
                    let revHistDateFrom = $(".revHistDateFrom").val();
                    let revHistDateTo = $(".revHistDateTo").val();
                    let msection = $(".msection").val();
                    let woperator = $(".woperator").val();
                    let revChkQueryBackup = $(".revChkQueryBackup").prop("checked");

                    if (revAdmReference != "") {

                        $.ajax({
                            url: "/AJAX/revAdmReferenceFocusout",
                            method: "POST",
                            data: {
                                revAdmReference: revAdmReference, woperator: woperator, msection: msection, revHistDateFrom: revHistDateFrom,
                                revHistDateTo: revHistDateTo, revChkQueryBackup: revChkQueryBackup
                            },
                            success: function (data) {
                                if (data.REPORTS != null) {
                                    let reports = data.REPORTS;

                                    if (reports.alertMessage != null) {
                                        alert(reports.alertMessage);
                                        $(".revAdmReference").val("");
                                        return;
                                    }

                                    if(reports.mreference != null)
                                        $(".mreference").val(reports.mreference);
                                    if (reports.mgrouphtype != null)
                                        $(".mgrouphtype").val(reports.mgrouphtype);
                                    if (reports.txtpatientno != null)
                                        $(".revPatientNo").val(reports.txtpatientno);
                                    if (reports.txtgroupcode != null)
                                        $(".revGroupCode").val(reports.txtgroupcode);
                                    if (reports.lblbillspayable != null)
                                        $(".revFacility").val(reports.lblbillspayable);
                                    if (reports.TXTPATIENTNAME != null)
                                        $(".revName").val(reports.TXTPATIENTNAME);
                                    if (reports.txtRoom != null)
                                        $(".revRoom").val(reports.txtRoom);
                                    if (reports.txtBed != null)
                                        $(".revBed").val(reports.txtBed);
                                    if (reports.diagnosis != null)
                                        $(".revDiagnosis").val(reports.diagnosis);
                                    if (reports.REPORT_TYPE1 != null)
                                        $(".revDateOfAdm").val(reports.REPORT_TYPE1);
                                    if (reports.REPORT_TYPE2 != null)
                                        $(".revDateOfDisch").val(reports.REPORT_TYPE2);
                                    if (reports.lblStaffNumber != null)
                                        $(".revLblDischarge").text(reports.lblStaffNumber);
                                    if (reports.mgrouphead != null)
                                        $(".mgrouphead").val(reports.mgrouphead);
                                    if (reports.txtaddress1 != null)
                                        $(".revAddress").val(reports.txtaddress1);
                                    if (reports.txtsurname != null)
                                        $(".revPatProfile").text(reports.txtsurname);
                                    if (reports.txtgrouphead != null)
                                        $(".revGrouphead").val(reports.txtgrouphead);

                                    if (reports.ActRslt != null) {
                                        alert(reports.ActRslt);
                                        return;
                                    }

                                    if (reports.chkADVCorporate == true)
                                        $(".revSaveBtn").prop({ disabled: false });

                                    if (reports.chkApplyFilter == true) {
                                        $(".revObservChartBtn").prop({ disabled: false });
                                        $(".revFluidChartBtn").prop({ disabled: false });
                                        $(".revDiabChartBtn").prop({ disabled: false });
                                        $(".revInpPrescBtn").prop({ disabled: false });
                                    }

                                    if (reports.chkByBranch == true) {
                                        $(".revChkProtect").prop({ disabled: false });
                                        $(".revChkEncrypt").prop({ disabled: false });
                                    }

                                    if (reports.txtdiscount != null)
                                        $(".revAccumCharge").val(reports.txtdiscount);
                                    if (reports.REPORT_TYPE3 != null)
                                        $(".revHistDateFrom").val(reports.REPORT_TYPE3);
                                    if (reports.REPORT_TYPE4 != null)
                                        $(".revHistDateTo").val(reports.REPORT_TYPE4);
                                    if (reports.REPORT_TYPE5 != null)
                                        $(".revPrevRecText").val(reports.REPORT_TYPE5);

                                }

                                if (data.MEDHPICPROPS != null) {
                                    let medhpicprops = data.MEDHPICPROPS;

                                    if (medhpicprops.length > 0) {
                                        let rows = "";

                                        for (var i = 0; i < medhpicprops.length; i++) {
                                            let tranDate = medhpicprops[i].TRANS_DATE;

                                            rows += "<tr>" +
                                                        "<td></td>" +
                                                        "<td>" + formatDate1(tranDate) + "</td>" +
                                                        "<td>" + medhpicprops[i].TOTPIC + "</td>" +
                                                        "<td>" + medhpicprops[i].FACILITY1 + "</td>" +
                                                        "<td>" + medhpicprops[i].PIC1 + "</td>" +
                                                        "<td>" + medhpicprops[i].NOTE1 + "</td>" +
                                                        "<td>" + medhpicprops[i].FACILITY2 + "</td>" +
                                                        "<td>" + medhpicprops[i].PIC2 + "</td>" +
                                                        "<td>" + medhpicprops[i].NOTE2 + "</td>" +
                                                        "<td>" + medhpicprops[i].FACILITY3 + "</td>" +
                                                        "<td>" + medhpicprops[i].PIC3 + "</td>" +
                                                        "<td>" + medhpicprops[i].NOTE3 + "</td>" +
                                                        "<td>" + medhpicprops[i].FACILITY4 + "</td>" +
                                                        "<td>" + medhpicprops[i].PIC4 + "</td>" +
                                                        "<td>" + medhpicprops[i].NOTE4 + "</td>" +
                                                        "<td>" + medhpicprops[i].FACILITY5 + "</td>" +
                                                        "<td>" + medhpicprops[i].PIC5 + "</td>" +
                                                        "<td>" + medhpicprops[i].NOTE5 + "</td>" +
                                                    "</tr>";
                                        }

                                        $(".revTbody").html(rows);

                                        //re-adjust the count values after adding rows
                                        let counter = 0;
                                        $(".revTbody").find("tr").each(function () {
                                            $(this).find("td").eq(0).text(++counter);
                                        });
                                    }

                                }

                            }
                        })

                    }
                }
            })

            $(".revTreatmentDate").on({
                focusout: function () {
                    let revTreatmentDate = $(".revTreatmentDate").val();
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let msection = $(".msection").val();
                    let woperator = $(".woperator").val();
                    let revDiagnosis = $(".revDiagnosis").val().trim();
                    let revDateOfAdm = $(".revDateOfAdm").val().trim();
                    let dateNow = $(".dateNow").val();

                    $.ajax({
                        url: "/AJAX/revTreatmentDateFocusout",
                        method: "POST",
                        data: {
                            revTreatmentDate: revTreatmentDate, revAdmReference: revAdmReference, msection: msection,
                            woperator: woperator, revDiagnosis: revDiagnosis, revDateOfAdm: revDateOfAdm
                        },
                        success: function (data) {
                            if (data != null) {
                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                    $(".revTreatmentDate").val(dateNow);
                                    return;
                                }

                                $(".revnewrec").val(data.newrec);

                                if (data.mreference != null)
                                    $(".revTime").val(data.REPORT_TYPE2);

                                if (data.ActRslt != null) {
                                    alert(data.ActRslt);
                                    $(".revAdmReference").val("");
                                    return;
                                }

                                if (data.edtallergies != null)
                                    $(".revCurrentRecText").text(data.edtallergies);
                                if (data.chkADVCorporate)
                                    $(".revChkProtect").prop({checked: true});
                                if (data.chkApplyFilter)
                                    $(".revChkEncrypt").prop({checked: true});

                                if (data.chkBroughtForward) {
                                    $(".revPrescriptionBtn").prop({ disabled: false });
                                    $(".revInvProcReqBtn").removeClass("disableDiv");;
                                    $(".revTTHBtn").prop({ disabled: false });
                                }

                                if (data.chkByBranch) {
                                    $(".revSaveBtn").prop({ disabled: false });
                                }

                                if (data.txtclinic != null)
                                    $(".savedCaseNote").val(data.txtclinic);

                            }
                        }
                    })

                }
            })

            $(".revRetCaseNoteBtn").on({
                click: function () {
                    let savedCaseNote = $(".savedCaseNote").val();
                    //timer_Doc.Enabled = false;

                    if(confirm("Confirm to Retrieve From Auto-Saved Case Note for this Visit...")){
                        $(".revCurrentRecText").text(savedCaseNote);
                    }

                    $(".revCurrentRecText").focus();

                    return;
                }
            })

            $(".revSaveBtn").on({
                click: function () {
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val().trim();
                    let revCurrentRecText = $(".revCurrentRecText").text().trim();
                    let revnewrec = $(".revnewrec").val().trim() == "true" ? true : false;
                    let revChkProtect = $(".revChkProtect").prop("checked");
                    let revChkEncrypt = $(".revChkEncrypt").prop("checked");

                    let dataList = {
                        txtreference: revAdmReference,
                        REPORT_TYPE1: revTreatmentDate,
                        edtallergies: revCurrentRecText,
                        newrec: revnewrec,
                        chkByBranch: revChkProtect,
                        chkReportSum: revChkEncrypt,
                    }

                    if (confirm("Confirm to Save Records...")) {
                        $.ajax({
                            url: "/AJAX/revSaveBtnClick",
                            method: "POST",
                            data: { dataList: dataList },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        //$(".revTreatmentDate").val(dateNow);
                                        return;
                                    }
                                }
                            }
                        })
                    }

                }
            })

            $(".revGetHistoryBtn").on({
                click: function () {
                    let revHistDateTo = $(".revHistDateTo").val();
                    let revHistDateFrom = $(".revHistDateFrom").val();
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let revChkQueryBackup = $(".revChkQueryBackup").prop("checked");

                    $.ajax({
                        url: "/AJAX/revGetHistoryBtnClick",
                        method: "POST",
                        data: {
                            revHistDateFrom: revHistDateFrom, revHistDateTo: revHistDateTo, revChkQueryBackup: revChkQueryBackup,
                            revAdmReference: revAdmReference
                        },
                        success: function (data) {
                            if (data != null) {
                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                    return;
                                }

                                if (data.REPORT_TYPE3 != null) {
                                    $(".revHistDateFrom").val(data.REPORT_TYPE3);
                                }
                                if (data.REPORT_TYPE4 != null) {
                                    $(".revHistDateTo").val(data.REPORT_TYPE4);
                                }
                                if (data.REPORT_TYPE5 != null) {
                                    $(".revPrevRecText").val(data.REPORT_TYPE5);
                                }

                            }
                        }
                    })

                }
            })

            $(".revInpPrescBtn").on({
                click: function () {
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let revName = $(".revName").val().trim();
                    let caller = "REVIEW";

                    inpatientPrescFunction(revAdmReference, revName, caller);
                }
            })

            $(".revTemplatesBtn").on({
                click: function () {
                    templateLoadDetails(0);

                    $("#refLookUp14").click();
                }
            })

            $(".revMedNoteBtn").on({
                click: function () {
                    let revAdmReference = $(".revAdmReference").val().trim();

                    medicalNoteClickFunction(revAdmReference);
                }
            })

            $(".revObservChartBtn").on({
                click: function () {
                    observationChartForm();
                }
            })

            $(".revFluidChartBtn").on({
                click: function () {
                    observationChartForm();
                }
            })

            $(".revDiabChartBtn").on({
                click: function () {
                    observationChartForm();
                }
            })

            $(".revInvProcReqBtn").on({
                click: function () {
                    $(".specServPatients").show();
                    $(".observChartBlock").hide();
                    $(".reviewBlock").hide();
                    $(".prescription").hide();
                }
            })

            $(".revPrescriptionBtn").on({
                click: function () {
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let msection = $(".msection").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val();

                    $(".prescGroupCode").val(revGroupCode);
                    $(".prescPatientNo").val(revPatientNo);


                    if (revAdmReference == "") {
                        alert("Reference must be Selected...");
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/revPrescriptionBtnClick",
                        method: "POST",
                        data: {
                            revGroupCode: revGroupCode, revPatientNo: revPatientNo, msection: msection, revAdmReference: revAdmReference,
                            revTreatmentDate: revTreatmentDate
                        },
                        success: function (data) {
                            if (data != null) {
                                let reports = data.REPORTS;
                                let dispensas = data.DISPENSAS;

                                if (reports != null) {
                                    if (reports.alertMessage != null) {
                                        alert(reports.alertMessage);
                                        return;
                                    }

                                    if (reports.dtregistered != null)
                                        $(".dtlastattend").val(reports.dtregistered);
                                }

                                if (dispensas != null) {

                                    if (dispensas.length > 0) {
                                        let rows = "";
                                        let currentTotal = 0;
                                        let sp_Inst = "";

                                        for (var i = 0; i < dispensas.length; i++) {
                                            let capitated = dispensas[i].CAPITATED ? "YES" : "NO";
                                            let posted = dispensas[i].POSTED || dispensas[i].CUMGV > 0 ? "YES" : "NO";

                                            currentTotal += Number(dispensas[i].COST);

                                            if (dispensas[i].SP_INST != null) {
                                                sp_Inst += dispensas[i].SP_INST;
                                            }

                                            rows += "<tr>" +
                                                        "<td></td>" +
                                                        "<td>" + dispensas[i].STK_DESC + "</td>" +
                                                        "<td>" + dispensas[i].UNITCOST + "</td>" +
                                                        "<td></td>" +
                                                        "<td>" + dispensas[i].QTY_PR + "</td>" +
                                                        "<td>" + dispensas[i].UNIT + "</td>" +
                                                        "<td>" + dispensas[i].COST + "</td>" +
                                                        "<td>" + dispensas[i].CDOSE + "</td>" +
                                                        "<td>" + dispensas[i].CINTERVAL + "</td>" +
                                                        "<td>" + dispensas[i].CDURATION + "</td>" +
                                                        "<td>" + dispensas[i].RX + "</td>" +
                                                        "<td>" + dispensas[i].SP_INST + "</td>" +
                                                        "<td>" + dispensas[i].CUMGV + "</td>" +
                                                        "<td>" + dispensas[i].INTERVAL + "</td>" +
                                                        "<td>" + dispensas[i].DURATION + "</td>" +
                                                        "<td>" + dispensas[i].DOSE + "</td>" +
                                                        "<td>" + capitated + "</td>" +
                                                        "<td>" + posted + "</td>" +
                                                        "<td>" + dispensas[i].RECID + "</td>" +
                                                        "<td>" + dispensas[i].unitpurvalue + "</td>" +
                                                        "<td>" + dispensas[i].STK_ITEM + "</td>" +
                                                        "<td></td>" +
                                                        "<td></td>" +
                                                    "</tr>";
                                        }

                                        $(".prescTbody").html(rows);

                                        $(".prescCurTotal").val(currentTotal);
                                        $(".prescSpecInstrn").val(sp_Inst);

                                        //re-adjust the count values after adding rows
                                        let counter = 0;
                                        $(".prescTbody").find("tr").each(function () {
                                            $(this).find("td").eq(0).text(++counter);
                                        });
                                    }

                                }

                            }
                        }
                    })

                    $(".prescription").show();
                    $(".specServPatients").hide();
                    $(".observChartBlock").hide();
                    $(".reviewBlock").hide();

                   
                }
            })

            
            //**************************************** Template ********************************************
            //On Load

            function templateLoadDetails(screenid) {

                $.ajax({
                    url: "/AJAX/tempOnLoad",
                    method: "POST",
                    success: function (data) {
                        if (data != null) {
                            let mrb20 = data;

                            if (mrb20.length > 0) {

                                if (screenid == 1 || screenid == 0) {
                                    let rows = "";

                                    for (var i = 0; i < mrb20.length; i++) {
                                        let type = mrb20[i].TYPE;

                                        if (type == null)
                                            type = "";

                                        if (type.trim() != "") {
                                            continue;
                                        }

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb20[i].SHORTCUT + "'/> </td>" +
                                                    "<td> <input type='text' class='input w-7' value='" + mrb20[i].DESCRIPTION + "'/> </td>" +
                                                    "<td></td>" +
                                                    "<td>" + mrb20[i].RECID + "</td>" +
                                                "</tr>";
                                    }

                                    $(".tempTbody1").html(rows);

                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".tempTbody1").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });


                                    //table cells functions
                                    $(".tempTbody1").find("tr").each(function () {
                                        $(this).click(function () {
                                            $(this).parents("tbody").find("tr").each(function () {
                                                $(this).find("[class='activeRow']").removeClass("activeRow");
                                            })

                                            $(this).find("td:even").addClass("activeRow");
                                            $(this).find("td:odd").addClass("activeRow");

                                            let recNo = $(this).find("td:eq(0)").text().trim();
                                            $(".entRecNo").val(recNo);
                                        })

                                        //Shortcut cell change
                                        $(this).find("td:eq(1)").find("input").on({
                                            focus: function () {
                                                let tableShortcut = $(this).val().trim();

                                                for (var i = 0; i < mrb20.length; i++) {
                                                    let shortcut = mrb20[i].SHORTCUT.trim();

                                                    if (shortcut == tableShortcut) {
                                                        $(".entCustFormatText").val(mrb20[i].FORMATTED);
                                                    }
                                                }
                                            },

                                            change: function () {
                                                //Add 'Updated' text to status
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Define Shortcut to Consult Template. Click Once - Select for Editting. Double Click - Select for use on Consult Platform." })
                                            }
                                        })

                                        //Description cell change
                                        $(this).find("td:eq(2)").find("input").on({
                                            change: function () {
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Description of Shortcut to Consult Template" })
                                            }
                                        })

                                    });

                                }

                                if (screenid == 2 || screenid == 0) {
                                    let tempDoctor = $(".tempDoctor").val().trim();
                                    let rows = "";

                                    for (var i = 0; i < mrb20.length; i++) {
                                        let type = mrb20[i].TYPE;

                                        if (type == null)
                                            type = "";

                                        if (type.trim() == "" || type.trim() != tempDoctor) {
                                            continue;
                                        }

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb20[i].SHORTCUT + "'/> </td>" +
                                                    "<td> <input type='text' class='input w-7' value='" + mrb20[i].DESCRIPTION + "'/> </td>" +
                                                    "<td></td>" +
                                                    "<td>" + mrb20[i].RECID + "</td>" +
                                                "</tr>";
                                    }

                                    $(".tempTbody2").html(rows);


                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".tempTbody2").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });


                                    //table cells functions
                                    $(".tempTbody2").find("tr").each(function () {
                                        $(this).click(function () {
                                            $(this).parents("tbody").find("tr").each(function () {
                                                $(this).find("[class='activeRow']").removeClass("activeRow");
                                            })

                                            $(this).find("td:even").addClass("activeRow");
                                            $(this).find("td:odd").addClass("activeRow");

                                            let recNo = $(this).find("td:eq(0)").text().trim();
                                            $(".indRecNo").val(recNo);
                                        })

                                        //Shortcut cell change
                                        $(this).find("td:eq(1)").find("input").on({
                                            focus: function () {
                                                let tableShortcut = $(this).val().trim();

                                                for (var i = 0; i < mrb20.length; i++) {
                                                    let shortcut = mrb20[i].SHORTCUT.trim();

                                                    if (shortcut == tableShortcut) {
                                                        $(".indCustFormatText").val(mrb20[i].FORMATTED);
                                                    }
                                                }
                                            },

                                            change: function () {
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Define Shortcut to Consult Template. Click Once - Select for Editting. Double Click - Select for use on Consult Platform." })
                                            }
                                        })

                                        //Description cell change
                                        $(this).find("td:eq(2)").find("input").on({
                                            change: function () {
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Description of Shortcut to Consult Template" })
                                            }
                                        })

                                    });

                                }

                                if (screenid == 3 || screenid == 0) {
                                    let tempAreaOfSpec = $(".tempAreaOfSpec").val();
                                    let rows = "";

                                    if (tempAreaOfSpec == null)
                                        tempAreaOfSpec = "";

                                    for (var i = 0; i < mrb20.length; i++) {
                                        let type = mrb20[i].TYPE;

                                        if (type == null)
                                            type = "";

                                        if (type.trim() == "" || type.trim() != tempAreaOfSpec.trim()) {
                                            continue;
                                        }

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb20[i].SHORTCUT + "'/> </td>" +
                                                    "<td> <input type='text' class='input w-7' value='" + mrb20[i].DESCRIPTION + "'/> </td>" +
                                                    "<td></td>" +
                                                    "<td>" + mrb20[i].RECID + "</td>" +
                                                "</tr>";
                                    }

                                    $(".tempTbody3").html(rows);


                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".tempTbody3").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });



                                    //table cells functions
                                    $(".tempTbody3").find("tr").each(function () {
                                        $(this).click(function () {
                                            $(this).parents("tbody").find("tr").each(function () {
                                                $(this).find("[class='activeRow']").removeClass("activeRow");
                                            })

                                            $(this).find("td:even").addClass("activeRow");
                                            $(this).find("td:odd").addClass("activeRow");

                                            let recNo = $(this).find("td:eq(0)").text().trim();
                                            $(".specRecNo").val(recNo);
                                        })


                                        //Shortcut cell change
                                        $(this).find("td:eq(1)").find("input").on({
                                            focus: function () {
                                                let tableShortcut = $(this).val().trim();

                                                for (var i = 0; i < mrb20.length; i++) {
                                                    let shortcut = mrb20[i].SHORTCUT.trim();

                                                    if (shortcut == tableShortcut) {
                                                        $(".specCustFormatText").val(mrb20[i].FORMATTED);
                                                    }
                                                }

                                            },

                                            change: function () {
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Define Shortcut to Consult Template. Click Once - Select for Editting. Double Click - Select for use on Consult Platform." })
                                            }
                                        })

                                        //Description cell change
                                        $(this).find("td:eq(2)").find("input").on({
                                            change: function () {
                                                $(this).parents("tr").find("td:eq(3)").text("Updated");
                                            },

                                            mouseenter: function () {
                                                $(this).prop({ title: "Description of Shortcut to Consult Template" })
                                            }
                                        })

                                    });

                                }

                            }

                        }
                    }
                })

            }

            function templateSubmitFunction(screenId, tableList) {
                let tempDoctor = $(".tempDoctor").val().trim();
                let tempAreaOfSpec = $(".tempAreaOfSpec").val();

                $.ajax({
                    url: "/AJAX/templateSubmitBtnClick",
                    method: "POST",
                    data: {
                        screenId: screenId, tempDoctor: tempDoctor, tempAreaOfSpec: tempAreaOfSpec, tableList: tableList
                    },
                    success: function (data) {
                        if (data != null) {
                            if (data.alertMessage != null) {
                                alert(data.alertMessage);

                                if (screenId == 1) {
                                    $(".tempTbody1").find("tr").each(function () {
                                        $(this).find("td:eq(3)").text("");
                                    });
                                } else if (screenId == 2) {
                                    $(".tempTbody2").find("tr").each(function () {
                                        $(this).find("td:eq(3)").text("");
                                    });
                                } else {
                                    $(".tempTbody3").find("tr").each(function () {
                                        $(this).find("td:eq(3)").text("");
                                    });
                                }
                            }
                        }
                    }
                }).then(() => {
                    templateLoadDetails(screenId);
                })

            }

            function templateAddRowFunction(tableClass, recNoClass) {
                //Append a row to the table
                let row = "<tr>" +
                                "<td></td>" +
                                "<td> <input type='text' class='input w-2' value=''/> </td>" +
                                "<td> <input type='text' class='input w-7' value=''/> </td>" +
                                "<td></td>" +
                                "<td>0</td>" +
                          "</tr>";

                $(`.${tableClass}`).append(row);

                //re-adjust the count values after adding rows
                let counter = 0;
                $(`.${tableClass}`).find("tr").each(function () {
                    $(this).find("td").eq(0).text(++counter);
                });

                //table cells functions
                $(`.${tableClass}`).find("tr").each(function () {
                    $(this).click(function () {
                        $(this).parents("tbody").find("tr").each(function () {
                            $(this).find("[class='activeRow']").removeClass("activeRow");
                        })

                        $(this).find("td:even").addClass("activeRow");
                        $(this).find("td:odd").addClass("activeRow");

                        let recNo = $(this).find("td:eq(0)").text().trim();
                        $(`.${recNoClass}`).val(recNo);
                    })

                    $(this).dblclick(function () {
                        let recID = $(this).find("td").eq(4).text().trim();

                        if (recID == "0") {
                            alert("Selected Format has not been Saved...");
                        }
                    });


                    //Shortcut cell change
                    $(this).find("td:eq(1)").find("input").on({
                        //focus: function () {
                        //    let tableShortcut = $(this).val().trim();

                        //    for (var i = 0; i < mrb20.length; i++) {
                        //        let shortcut = mrb20[i].SHORTCUT.trim();

                        //        if (shortcut == tableShortcut) {
                        //            $(".entCustFormatText").val(mrb20[i].FORMATTED);
                        //        }
                        //    }
                        //},

                        change: function () {
                            //Add 'Updated' text to status
                            $(this).parents("tr").find("td:eq(3)").text("Updated");

                        },

                        mouseenter: function () {
                            $(this).prop({ title: "Define Shortcut to Consult Template. Click Once - Select for Editting. Double Click - Select for use on Consult Platform." })
                        }
                    })

                    //Description cell change
                    $(this).find("td:eq(2)").find("input").on({
                        change: function () {
                            $(this).parents("tr").find("td:eq(3)").text("Updated");
                        },

                        mouseenter: function () {
                            $(this).prop({ title: "Description of Shortcut to Consult Template" })
                        }
                    })

                });

            }

            function templateDeleteFunction(tableClass, recNoClass, recNo) {

                //Delete the item from database
                $(`.${tableClass}`).find("tr").each(function () {
                    let tableRowNo = Number($(this).find("td:eq(0)").text().trim());
                    let tableRecID = Number($(this).find("td:eq(4)").text().trim());

                    if (tableRowNo == recNo) {
                        $(this).remove();
                        $(`.${recNoClass}`).val("");

                        if (tableRecID > 0) {
                            $.ajax({
                                url: "/AJAX/templateDeleteBtnClick",
                                method: "POST",
                                data: {tableRecID: tableRecID},
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                        }
                                    }
                                }
                            })
                        } else {
                            alert("Item deleted from Table...")
                        }
                    }
                });

                //re-adjust the count values after deleting a row
                let counter = 0;
                $(`.${tableClass}`).find("tr").each(function () {
                    $(this).find("td").eq(0).text(++counter);
                });

            }

            function templateSelectFunction(custFormatTextClass) {
                let custFormatText = $(`.${custFormatTextClass}`).val().trim();
                let revCurrentRecText = $(".revCurrentRecText").val().trim();
                let currentRecFormatted = `${revCurrentRecText} \n\n\n ${custFormatText}`;

                $('#14LkUp .tempCloseBtn').click();

                $(".revCurrentRecText").val(currentRecFormatted);
            }


            //Define/Edit Specialist Grouping
            ShowModal(dOM, '#refLookUp15', '#15LkUp', function aF() {
                //On load
                function clearDefineEvents() {
                    $('#15LkUp .defAddBtn').off("click");
                    $('#15LkUp .defSubmitBtn').off("click");
                }

                clearDefineEvents();

                $.ajax({
                    url: "/AJAX/defineGrpDetailsOnLoad",
                    method: "POST",
                    success: function (data) {
                        if (data != null) {
                            let templateGrps = data;

                            if (templateGrps.length > 0) {
                                let rows = "";

                                for (var i = 0; i < templateGrps.length; i++) {
                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td> <input type='text' class='input w-7' value='" + templateGrps[i].DESCRIPTION + "'/> </td>" +
                                                "<td></td>" +
                                                "<td>" + templateGrps[i].RECID + "</td>" +
                                            "</tr>";
                                }

                                $(".defTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".defTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });

                            }

                        }
                    }
                })

                dOM.find('#15LkUp .defAddBtn').on({
                    click: function () {
                        //Append a row to the table
                        let row = "<tr>" +
                                        "<td></td>" +
                                        "<td> <input type='text' class='input w-7' value=''/> </td>" +
                                        "<td></td>" +
                                        "<td>0</td>" +
                                  "</tr>";

                        $(".defTbody").append(row);

                        //re-adjust the count values after adding rows
                        let counter = 0;
                        $(".defTbody").find("tr").each(function () {
                            $(this).find("td").eq(0).text(++counter);
                        });
                    }
                })

                dOM.find('#15LkUp .defSubmitBtn').on({
                    click: function () {
                        let totalRowNo = Number(dOM.find('#15LkUp .defTbody').find("tr:last").find("td:eq(0)").text());

                        if (totalRowNo > 0) {
                            //MRB20 Class holds the table data
                            let tableList = [];

                            dOM.find('#15LkUp .defTbody').find("tr").each(function () {
                                let rowObject = {
                                    DESCRIPTION: $(this).find("td:eq(1)").find("input").val().trim(), // for description
                                    TYPE: $(this).find("td:eq(2)").text().trim(),  // for status
                                    RECID: Number($(this).find("td:eq(3)").text().trim()),  // for recId
                                };

                                tableList.push(rowObject)
                            });

                            if (confirm("Confirm To Save Details!!")) {
                                $.ajax({
                                    url: "/AJAX/defSubmitBtnClicked",
                                    method: "POST",
                                    data: { tableList: tableList },
                                    success: function (data) {
                                        if (data != null) {
                                            if (data.alertMessage != null) {
                                                alert(data.alertMessage);
                                                return;
                                            }
                                        }
                                    }
                                })

                            }
                        }

                    }
                })

                dOM.find('#15LkUp .defCloseBtn').on({
                    click: function () {
                        clearDefineEvents();

                        $(".revTemplatesBtn").click();
                    }
                })
            });

            //Template Modal
            ShowModal(dOM, '#refLookUp14', '#14LkUp', function aF() {
                function clearTemplateEvents() {
                    $('#14LkUp .entTempAddBtn').off("click");
                    $('#14LkUp .entTempDeleteBtn').off("click");
                    $('#14LkUp .entTempSubmitBtn').off("click");
                    $('#14LkUp .entTempSelectBtn').off("click");

                    $('#14LkUp .indTempAddBtn').off("click");
                    $('#14LkUp .indTempDeleteBtn').off("click");
                    $('#14LkUp .indTempSubmitBtn').off("click");
                    $('#14LkUp .indTempSelectBtn').off("click");

                    $('#14LkUp .specTempAddBtn').off("click");
                    $('#14LkUp .specTempDeleteBtn').off("click");
                    $('#14LkUp .specTempSubmitBtn').off("click");
                    $('#14LkUp .specTempSelectBtn').off("click");
                    $('#14LkUp .specDefineEditGroupBtn').off("click");
                }

                clearTemplateEvents();

                dOM.find('#14LkUp .tempCloseBtn').on({
                    click: function () {
                        clearTemplateEvents();
                    }
                })

                //Enterprise *****************************************************
                dOM.find('#14LkUp .entTempSubmitBtn').on({
                    click: function () {
                        let screenId = 1;
                        let totalRowNo = Number(dOM.find('#14LkUp .tempTbody1').find("tr:last").find("td:eq(0)").text());

                        if (totalRowNo > 0) {
                            //MRB20 Class holds the table data
                            let tableList = [];

                            dOM.find('#14LkUp .tempTbody1').find("tr").each(function () {
                                let rowObject = {
                                    SHORTCUT: $(this).find("td:eq(1)").find("input").val().trim(), // for shortcut
                                    DESCRIPTION: $(this).find("td:eq(2)").find("input").val().trim(), // for description
                                    TYPE: $(this).find("td:eq(3)").text().trim(), // for status
                                    RECID: Number($(this).find("td:eq(4)").text().trim()),  // for recId
                                };

                                tableList.push(rowObject)
                            });

                            if (confirm("Confirm To Save Details!!")) {
                                templateSubmitFunction(screenId, tableList);
                            }
                        }

                    }
                })

                dOM.find('#14LkUp .entTempAddBtn').on({
                    click: function () {
                        let tableClass = "tempTbody1";
                        let recNoClass = "entRecNo";

                        templateAddRowFunction(tableClass, recNoClass);
                    }
                })

                dOM.find('#14LkUp .entTempDeleteBtn').on({
                    click: function () {
                        let tableClass = "tempTbody1";
                        let recNoClass = "entRecNo";
                        let entRecNo = Number($(".entRecNo").val().trim());

                        if (entRecNo < 1) {
                            alert("Please select row to delete..");
                            return;
                        }

                        templateDeleteFunction(tableClass, recNoClass, entRecNo);
                    }
                })

                dOM.find('#14LkUp .entTempSelectBtn').on({
                    click: function () {
                        let custFormatTextClass = "entCustFormatText";

                        templateSelectFunction(custFormatTextClass);
                    }
                })


                //Individual *****************************************************
                dOM.find('#14LkUp .indTempSubmitBtn').on({
                    click: function () {
                        let screenId = 2;
                        let totalRowNo = Number(dOM.find('#14LkUp .tempTbody2').find("tr:last").find("td:eq(0)").text());

                        if (totalRowNo > 0) {
                            //MRB20 Class holds the table data
                            let tableList = [];

                            dOM.find('#14LkUp .tempTbody2').find("tr").each(function () {
                                let rowObject = {
                                    SHORTCUT: $(this).find("td:eq(1)").find("input").val().trim(), // for shortcut
                                    DESCRIPTION: $(this).find("td:eq(2)").find("input").val().trim(), // for description
                                    TYPE: $(this).find("td:eq(3)").text().trim(), // for status
                                    RECID: Number($(this).find("td:eq(4)").text().trim()),  // for recId
                                };

                                tableList.push(rowObject)
                            });

                            if (confirm("Confirm To Save Details!!")) {
                                templateSubmitFunction(screenId, tableList);
                            }
                        }

                    }
                })

                dOM.find('#14LkUp .indTempAddBtn').on({
                    click: function () {
                        let tableClass = "tempTbody2";
                        let recNoClass = "indRecNo";

                        templateAddRowFunction(tableClass, recNoClass);
                    }
                })

                dOM.find('#14LkUp .indTempDeleteBtn').on({
                    click: function () {
                        let tableClass = "tempTbody2";
                        let recNoClass = "indRecNo";
                        let indRecNo = Number($(".indRecNo").val().trim());

                        if (indRecNo < 1) {
                            alert("Please select row to delete..");
                            return;
                        }

                        templateDeleteFunction(tableClass, recNoClass, indRecNo);
                    }
                })

                dOM.find('#14LkUp .indTempSelectBtn').on({
                    click: function () {
                        let custFormatTextClass = "indCustFormatText";

                        templateSelectFunction(custFormatTextClass);
                    }
                })


                //Specialized *****************************************************
                dOM.find('#14LkUp .specTempSubmitBtn').on({
                    click: function () {
                        let screenId = 3;
                        let totalRowNo = Number(dOM.find('#14LkUp .tempTbody3').find("tr:last").find("td:eq(0)").text());

                        if (totalRowNo > 0) {
                            //MRB20 Class holds the table data
                            let tableList = [];

                            dOM.find('#14LkUp .tempTbody3').find("tr").each(function () {
                                let rowObject = {
                                    SHORTCUT: $(this).find("td:eq(1)").find("input").val().trim(), // for shortcut
                                    DESCRIPTION: $(this).find("td:eq(2)").find("input").val().trim(), // for description
                                    TYPE: $(this).find("td:eq(3)").text().trim(), // for status
                                    RECID: Number($(this).find("td:eq(4)").text().trim()),  // for recId
                                };

                                tableList.push(rowObject)
                            });

                            if (confirm("Confirm To Save Details!!")) {
                                templateSubmitFunction(screenId, tableList);
                            }
                        }

                    }
                })

                dOM.find('#14LkUp .specTempAddBtn').on({
                    click: function () {
                        let tableClass = "tempTbody3";
                        let recNoClass = "specRecNo";

                        templateAddRowFunction(tableClass, recNoClass);
                    }
                })

                dOM.find('#14LkUp .specTempDeleteBtn').on({
                    click: function () {
                        let tableClass = "tempTbody3";
                        let recNoClass = "specRecNo";
                        let specRecNo = Number($(".specRecNo").val().trim());

                        if (specRecNo < 1) {
                            alert("Please select row to delete..");
                            return;
                        }

                        templateDeleteFunction(tableClass, recNoClass, specRecNo);
                    }
                });

                dOM.find('#14LkUp .specTempSelectBtn').on({
                    click: function () {
                        let custFormatTextClass = "specCustFormatText";

                        templateSelectFunction(custFormatTextClass);
                    }
                })

                dOM.find('#14LkUp .specDefineEditGroupBtn').on({
                    click: function () {
                        //removes the events from template modal when closed to avoid leakage

                        $("#refLookUp15").click();

                        dOM.find('#14LkUp .tempCloseBtn').click();
                    }
                })

            });


            //**************************************** Observation Chart ********************************************
            //On Load
            $(".chkObCurAdmin").prop({ checked: true });

            $(".obAdmReference").on({
                focusout: function () {
                    let obAdmReference = $(".obAdmReference").val().trim();

                    if (obAdmReference == "") {
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/obAdmReferenceFocusout",
                        method: "POST",
                        data: {obAdmReference: obAdmReference},
                        success: function (data) {
                            if (data.REPORTS != null) {
                                let reports = data.REPORTS;

                                if (reports.alertMessage != null) {
                                    alert(reports.alertMessage);
                                    return;
                                }

                                if (reports.txtreference != null)
                                    $(".obAdmReference").val(reports.txtreference);
                                if (reports.txtgroupcode != null)
                                    $(".obGroupCode").val(reports.txtgroupcode);
                                if (reports.txtpatientno != null)
                                    $(".obPatientNo").val(reports.txtpatientno);
                                if (reports.TXTPATIENTNAME != null)
                                    $(".obName").val(reports.TXTPATIENTNAME);
                                if (reports.combFacility != null)
                                    $(".obFacility").val(reports.combFacility);
                                if (reports.txtRoom != null)
                                    $(".obRoom").val(reports.txtRoom);
                                if (reports.txtBed != null)
                                    $(".obBed").val(reports.txtBed);
                                if (reports.diagnosis != null)
                                    $(".obDiagnosis").val(reports.diagnosis);
                                if (reports.REPORT_TYPE1 != null)
                                    $(".obDateOfAdm").val(reports.REPORT_TYPE1);
                                if (reports.REPORT_TYPE2 != null)
                                    $(".obDateOfDisch").val(reports.REPORT_TYPE2);
                                if (reports.lblStaffNumber != null)
                                    $(".obLblDischarge").text(reports.lblStaffNumber);
                                if (reports.txtaddress1 != null)
                                    $(".obAddress").val(reports.txtaddress1);
                                if (reports.txtstaffno != null)
                                    $(".obPatProfile").text(reports.txtstaffno);
                                if (reports.txtgrouphead != null)
                                    $(".obGrouphead").val(reports.txtgrouphead);

                                if (reports.ActRslt != null)
                                    alert(reports.ActRslt);

                            }

                            if (data.MRB22S != null) {
                                let mrb22s = data.MRB22S;

                                if (mrb22s.length > 0) {
                                    let rows = "";

                                    for (var i = 0; i < mrb22s.length; i++) {
                                        let tranDate = mrb22s[i].TRANS_DATE;
                                        let xposted = mrb22s[i].POSTED ? true : false;
                                        let protect = xposted ? "checked" : "";
                                        let posted = xposted ? "YES" : "NO";

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td>" + formatDate1(tranDate) + "</td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].TIME + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].TEMP + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].PULSE + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].RESPIRATIO + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-3' value='" + mrb22s[i].BPSITTING + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].SP02 + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb22s[i].REMARK + "'  /> </td>" +
                                                    "<td> <input type='checkbox' " + protect + " /> </td>" +
                                                    "<td>" + mrb22s[i].RECID + "</td>" +
                                                    "<td>" + posted + "</td>" +
                                                    "<td></td>" +
                                                "</tr>";
                                    }

                                    $(".intenTbody").html(rows);

                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".intenTbody").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });

                                }

                            }

                            if (data.MRB23S != null) {
                                let mrb23s = data.MRB23S;

                                if (mrb23s.length > 0) {
                                    let rows = "";

                                    for (var i = 0; i < mrb23s.length; i++) {
                                        let tranDate = mrb23s[i].TRANS_DATE;
                                        let xposted = mrb23s[i].POSTED ? true : false;
                                        let protect = xposted ? "checked" : "";
                                        let posted = xposted ? "YES" : "NO";

                                        rows += "<tr>" +
                                                    "<td></td>" +
                                                    "<td>" + formatDate1(tranDate) + "</td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].TIME + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].NATUREOFFLUID + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].ORAL + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].RECTRAL + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].IV + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OTHERROUTES + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].INFLO_TOTAL + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value=''  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].URINE + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].VOMITUS + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].TUBE + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OTHERS + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].OUT_TOTAL + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].BALANCE + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value='" + mrb23s[i].CHLORIDE + "'  /> </td>" +
                                                    "<td> <input type='text' class='input w-2' value=''  /> </td>" +
                                                    "<td> <input type='checkbox' " + protect + " /> </td>" +
                                                    "<td>" + mrb23s[i].RECID + "</td>" +
                                                    "<td>" + posted + "</td>" +
                                                    "<td></td>" +
                                                "</tr>";
                                    }

                                    $(".fluidTbody").html(rows);

                                    //re-adjust the count values after adding rows
                                    let counter = 0;
                                    $(".fluidTbody").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });

                                }

                            }

                            if (data.MRB24S != null) {
                                let mrb24s = data.MRB24S;
                                let rows = "";

                                for (var i = 0; i < mrb24s.length; i++) {
                                    let tranDate = mrb24s[i].TRANS_DATE;
                                    let xposted = mrb24s[i].POSTED ? true : false;
                                    let posted = xposted ? "YES" : "NO";
                                    let protect = xposted ? "checked" : "";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + formatDate1(tranDate) + "</td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].TIME + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].RBS + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].FBS + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].URINALYSIS + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].ACETONE + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].DRGADMIN + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].REMARK + "'  /> </td>" +
                                                "<td> <input type='text' class='input w-2' value='" + mrb24s[i].OPERATOR + "'  /> </td>" +
                                                "<td> <input type='checkbox' " + protect + " /> </td>" +
                                                "<td>" + mrb24s[i].RECID + "</td>" +
                                                "<td>" + posted + "</td>" +
                                                "<td></td>" +
                                            "</tr>";
                                }

                                $(".diabTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".diabTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });
                            }
                        }
                    })

                }
            })

            $(".intenSubmitBtn").on({
                click: function () {
                    let obAdmReference = $(".obAdmReference").val().trim();
                    let totalRowNo = Number($(".intenTbody").find("tr:last").find("td:eq(0)").text());

                    if (totalRowNo < 1) {
                        return;
                    }

                    //REPORTS Class holds the table data
                    let tableList = [];

                    $(".intenTbody").find("tr").each(function () {
                        let rowObject = {
                            cbogender: $(this).find("td:eq(1)").text().trim(), // for trans-date
                            cbotitle: $(this).find("td:eq(2)").find("input").val().trim(), // for time
                            cboTribe: $(this).find("td:eq(3)").find("input").val().trim(),  // for temp
                            txtclinic: $(this).find("td:eq(4)").find("input").val().trim(), // for pulse
                            txtcurrency: $(this).find("td:eq(5)").find("input").val().trim(), // for respiration
                            txtbranch: $(this).find("td:eq(6)").find("input").val().trim(),  // for bp
                            txtothername: $(this).find("td:eq(7)").find("input").val().trim(), // for sp02
                            txtemployer: $(this).find("td:eq(8)").find("input").val().trim(), // for remarks
                            mcanalter: $(this).find("td:eq(9)").find("input").prop("checked"),  // for protect
                            cboReligion: $(this).find("td:eq(10)").text().trim(), // for recid
                            txtgrouphead: $(this).find("td:eq(11)").text().trim(), // for posted
                            doctor: $(this).find("td:eq(12)").text().trim(),  // for updated
                        };

                        tableList.push(rowObject)
                    });

                    if (confirm("Confirm to Submit Records...")) {
                        $.ajax({
                            url: "/AJAX/intenSubmitBtnClick",
                            method: "POST",
                            data: { tableList: tableList, obAdmReference: obAdmReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }
                                }
                            }
                        })
                    }

                }
            })

            $(".fluidSubmitBtn").on({
                click: function () {
                    let obAdmReference = $(".obAdmReference").val().trim();
                    let totalRowNo = Number($(".fluidTbody").find("tr:last").find("td:eq(0)").text());

                    if (totalRowNo < 1) {
                        return;
                    }

                    //REPORTS Class holds the table data
                    let tableList = [];

                    $(".fluidTbody").find("tr").each(function () {
                        let rowObject = {
                            cbogender: $(this).find("td:eq(1)").text().trim(), // for trans-date
                            cbotitle: $(this).find("td:eq(2)").find("input").val().trim(), // for time
                            cboTribe: $(this).find("td:eq(3)").find("input").val().trim(),  // for nature of fluid
                            txtclinic: $(this).find("td:eq(4)").find("input").val().trim(), // for oral
                            txtcurrency: $(this).find("td:eq(5)").find("input").val().trim(), // for rectal
                            txtbranch: $(this).find("td:eq(6)").find("input").val().trim(),  // for IV
                            txtothername: $(this).find("td:eq(7)").find("input").val().trim(), // for otherroutes
                            txtemployer: $(this).find("td:eq(8)").text().trim(), // for total
                            txtconsultamt: $(this).find("td:eq(9)").find("input").val().trim(), // for remarks
                            cboReligion: $(this).find("td:eq(10)").find("input").val().trim(), // for urine
                            txtgrouphead: $(this).find("td:eq(11)").find("input").val().trim(), // for vomit
                            combillcycle: $(this).find("td:eq(12)").find("input").val().trim(), // for tube
                            txtworkphone: $(this).find("td:eq(13)").find("input").val().trim(), // for others
                            doctor: $(this).find("td:eq(14)").text().trim(),  // for total
                            cbobloodgroup: $(this).find("td:eq(15)").text().trim(),  // for balance
                            cbokinstate: $(this).find("td:eq(16)").find("input").val().trim(), // for chloride
                            txtkinphone: $(this).find("td:eq(17)").find("input").val().trim(), // for remarks
                            mcanalter: $(this).find("td:eq(18)").find("input").prop("checked"),  // for protect
                            cbogenotype: $(this).find("td:eq(19)").text().trim(), // for recid
                            txtkinaddress1: $(this).find("td:eq(20)").text().trim(), // for posted
                            txtdepartment: $(this).find("td:eq(21)").text().trim(),  // for updated
                        };

                        tableList.push(rowObject)
                    });

                    if (confirm("Confirm to Submit Records...")) {
                        $.ajax({
                            url: "/AJAX/fluidSubmitBtnClick",
                            method: "POST",
                            data: { tableList: tableList, obAdmReference: obAdmReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }
                                }
                            }
                        })
                    }

                }
            })

            $(".diabSubmitBtn").on({
                click: function () {
                    let obAdmReference = $(".obAdmReference").val().trim();
                    let totalRowNo = Number($(".diabTbody").find("tr:last").find("td:eq(0)").text());

                    if (totalRowNo < 1) {
                        return;
                    }

                    //REPORTS Class holds the table data
                    let tableList = [];

                    $(".diabTbody").find("tr").each(function () {
                        let rowObject = {
                            cbogender: $(this).find("td:eq(1)").text().trim(), // for datetime
                            cbotitle: $(this).find("td:eq(2)").find("input").val().trim(), // for time
                            cboTribe: $(this).find("td:eq(3)").find("input").val().trim(),  // for rbs
                            txtclinic: $(this).find("td:eq(4)").find("input").val().trim(), // for fbs
                            txtcurrency: $(this).find("td:eq(5)").find("input").val().trim(), // for urinalysis
                            txtbranch: $(this).find("td:eq(6)").find("input").val().trim(),  // for acetone
                            txtothername: $(this).find("td:eq(7)").find("input").val().trim(), // for drug_administration
                            txtemployer: $(this).find("td:eq(8)").find("input").val().trim(), // for remarks
                            txtconsultamt: $(this).find("td:eq(9)").find("input").val().trim(), // for operator
                            mcanalter: $(this).find("td:eq(10)").find("input").prop("checked"),  // for protect
                            cboReligion: $(this).find("td:eq(11)").text().trim(), // for recid
                            txtgrouphead: $(this).find("td:eq(12)").text().trim(), // for posted
                            doctor: $(this).find("td:eq(13)").text().trim(),  // for updated
                        };

                        tableList.push(rowObject)
                    });

                    if (confirm("Confirm to Submit Records...")) {
                        $.ajax({
                            url: "/AJAX/diabSubmitBtnClick",
                            method: "POST",
                            data: { tableList: tableList, obAdmReference: obAdmReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }
                                }
                            }
                        })
                    }

                }
            })

            $(".obBackBtn").on({
                click: function () {
                    $(".reviewBlock").show();
                    $(".observChartBlock").hide();
                    $(".specServPatients").hide();
                    $(".prescription").hide();
                }
            })


            //***************************************** FOR SPECIAL SERVICE PATIENT **************************************
            //On page Load
            $(".SSPsubmitBtn").prop({ disabled: true });
            $(".serviceModalBtn").hide();


            $(".SSPpatGroupCode").on({
                focusout: function () {
                    $(".SSPhospitalNo").focus();
                }
            })

            $(".SSPhospitalNo").on({
                focusout: function () {
                    let SSPhospitalNo = $(this).val();
                    let SSPpatGroupCode = $(".SSPpatGroupCode").val();

                    if (SSPhospitalNo.trim() != "") {

                        $.ajax({
                            url: "/AJAX/SSPhospitalNoFocusOut",
                            method: "POST",
                            data: { SSPhospitalNo: SSPhospitalNo, SSPpatGroupCode: SSPpatGroupCode },
                            success: function (data) {

                                if (data.REPORTS != null) {
                                    if (data.REPORTS.alertMessage != null) {
                                        alert(data.REPORTS.alertMessage);

                                        $(".SSPpatGroupCode").val("");
                                        $(".SSPhospitalNo").val("");
                                    }

                                    $(".SSPfullName").val(data.REPORTS.TXTPATIENTNAME);
                                    $(".SSPgender").val(data.REPORTS.cbogender);
                                    $(".SSPage").val(data.REPORTS.cboAge);
                                    $(".SSPaddress").val(data.REPORTS.txtaddress1);
                                    $(".SSPemail").val(data.REPORTS.txtemail);
                                    $(".SSPphone").val(data.REPORTS.txthomephone);
                                    $(".SSPgroupHeadName").text(data.REPORTS.txtothername);

                                    if (data.REPORTS.chkgetdependants) {
                                        $(".chkgetdependants").prop({ checked: true });
                                    }

                                }

                            }
                        })

                    }


                }
            })

            $(".SSPbillsPayableBy").on({
                focusout: function () {
                    let SSPbillsPayableBy = $(this).val();
                    let SSPhospitalNo = $(".SSPhospitalNo").val();
                    let SSPpatGroupCode = $(".SSPpatGroupCode").val();

                    //Show hidden lookUp
                    if (SSPbillsPayableBy.slice(0, 1) == "C") {
                        $("#refLookUp8").hide();
                        $("#refLookUp7").show();
                    } else {
                        $("#refLookUp8").show();
                        $("#refLookUp7").hide();
                    }


                    $.ajax({
                        url: "/AJAX/SSPbillsPayableByFocusOut",
                        method: "POST",
                        data: { SSPbillsPayableBy: SSPbillsPayableBy, SSPhospitalNo: SSPhospitalNo, SSPpatGroupCode: SSPpatGroupCode },
                        success: function (data) {

                            if (data.REPORTS != null) {

                                if (data.REPORTS.txtghgroupcode != null)
                                    $(".SSPghgroupcode").val(data.REPORTS.txtghgroupcode);

                                if (data.REPORTS.txtgrouphead != null)
                                    $(".SSPgrouphead").val(data.REPORTS.txtgrouphead);

                                if (data.REPORTS.txtothername != null)
                                    $(".SSPgroupHeadName").text(data.REPORTS.txtothername);

                                $(".hiddenCashPaying").val(data.REPORTS.mcanalter);

                                $(".SSPgrouphead").focusout();
                            }

                        }
                    })

                }
            })

            //For code field
            $(".SSPgrouphead").on({
                focusout: function () {
                    let SSPgrouphead = $(this).val();
                    let SSPghgroupcode = $(".SSPghgroupcode").val();
                    let SSPbillsPayableBy = $(".SSPbillsPayableBy").val();
                    let mgrouphtype = SSPbillsPayableBy.slice(0, 1);

                    if (SSPgrouphead.trim() == "" || mgrouphtype == "P" && SSPghgroupcode.trim() == "") {
                        return;
                    } else {

                        $.ajax({
                            url: "/AJAX/SSPgroupheadFocusOut",
                            method: "POST",
                            data: { SSPgrouphead: SSPgrouphead, SSPghgroupcode: SSPghgroupcode, mgrouphtype: mgrouphtype },
                            success: function (data) {

                                if (data.REPORTS != null) {
                                    if (data.REPORTS.alertMessage != null) {
                                        alert(data.REPORTS.alertMessage);

                                        $(".SSPgrouphead").val("");
                                    }

                                    if (data.REPORTS.txtothername != null) {
                                        $(".SSPgroupHeadName").text(data.REPORTS.txtothername);
                                    }

                                    $(".hiddenCashPaying").val(data.REPORTS.mcanalter);
                                }

                            }
                        })

                    }


                }
            })

            $(".SSPtransDate").on({
                focusout: function () {
                    let transDate = new Date($(".SSPtransDate").val());
                    let todaysDate = new Date();

                    if (transDate > todaysDate) {
                        alert("Invalid Date...!!  Specified Date can't be greater than Today's Date");

                        $(".SSPtransDate").val("@String.Format("{0:yyyy-MM-ddThh:mm:ss}", DateTime.Now)");
                    }

                }
            })


            $(".SSPfacility").on({
                focusout: function () {
                    let SSPfacility = $(this).val();

                    if (SSPfacility.trim() != "") {

                        $.ajax({
                            url: "/AJAX/SSPfacilityFocusOut",
                            method: "POST",
                            data: { SSPfacility: SSPfacility },
                            success: function (data) {

                                if (data.REPORTS != null) {
                                    $(".labelSSPfacility").text(data.REPORTS.lblStaffNumber)

                                    if (data.REPORTS.alertMessage != null) {
                                        alert(data.REPORTS.alertMessage);

                                        $(".SSPservRequired").html(`<option value=""></option>`);
                                    }
                                }

                                if (data.TARIFFS != null) {
                                    let tariffs = data.TARIFFS;
                                    let options = "";

                                    for (var i = 0; i < tariffs.length; i++) {
                                        options += `<option value="${tariffs[i].REFERENCE}">${tariffs[i].NAME}</option>`;
                                    }

                                    $(".SSPservRequired").append(options);
                                }

                                if (data.MRSETUP != null) {
                                    $(".SSPhiddenBillCode").val(data.MRSETUP.BILLCODE);  //hidden field for Billcode
                                }

                            }
                        })

                    }

                    $(".SSPservRequired").focus();
                }
            })

            $(".SSPservRequired").on({
                focusout: function () {
                    let SSPservRequired = $(this).val();
                    let SSPfacility = $(".SSPfacility").val();
                    let SSPhospitalNo = $(".SSPhospitalNo").val();
                    let SSPpatGroupCode = $(".SSPpatGroupCode").val();
                    let SSPbillsPayableBy = $(".SSPbillsPayableBy").val();
                    let flag = false;

                    if (SSPservRequired != "" && SSPfacility.trim() != "")
                    {
                        $(".hiddenIsPosted").val("false");
                        $(".hiddenNewRec").val("true");
                        $(".SSPaddBtn").prop({ disabled: false });

                        $(".labelProcedure").text(SSPservRequired);

                        //We first check the total rows in the table
                        let totalRows = Number($(".tbody").find("tr").last().find("td").eq(0).text());

                        //we must scan through listview to check if stock had been selected - we edit

                        if (totalRows > 0) {

                            for (let i = 0; i < totalRows; i++) {
                                let code = $(".tbody").find("tr").eq(i).find("td").eq(4).text();

                                if (code.trim() == SSPservRequired.trim()) {
                                    flag = true;

                                    let duration = Number($(".tbody").find("tr").eq(i).find("td").eq(10).text());
                                    let amount = Number($(".tbody").find("tr").eq(i).find("td").eq(3).text());
                                    let notes = $(".tbody").find("tr").eq(i).find("td").eq(6).text();
                                    let isPosted = $(".tbody").find("tr").eq(i).find("td").eq(11).text() == "YES" ? true : false;

                                    $(".SSPduration").val(duration);
                                    $(".SSPamount").val(amount);
                                    $(".hiddenIsPosted").val(isPosted);

                                    //pass the code value of already existing data to a hidden field
                                    $(".existingCode").val(code);
                                    break;
                                }
                            }

                            if (flag == true) {
                                //click the modal button
                                $(".serviceModalBtn").click();
                            }
                        }

                        $.ajax({
                            url: "/AJAX/SSPservRequiredFocusOut",
                            method: "POST",
                            data: {
                                SSPservRequired: SSPservRequired, SSPfacility: SSPfacility, SSPhospitalNo: SSPhospitalNo,
                                SSPpatGroupCode: SSPpatGroupCode, SSPbillsPayableBy: SSPbillsPayableBy
                            },
                            success: function (data) {

                                if (data.REPORTS.nmrbalance != null)
                                    $(".SSPamount").val(data.REPORTS.nmrbalance);

                                if (data.REPORTS.nmrcurdebit != null)
                                    $(".amtsaveHiddenValue").val(data.REPORTS.nmrcurdebit);

                                let capitated = data.REPORTS.mcanalter ? "YES" : "NO";
                                $(".capitated").val(capitated); //for capitated

                                if (data.REPORTS.btnFamilyGroup == true)   //for addBtn
                                    $(".SSPaddBtn").prop({ disabled: false });
                            }
                        })

                    }
                }
            })

            $(".SSPaddBtn").on({
                click: function () {
                    let SSPamount = Number($(".SSPamount").val());
                    let SSPservRequired = $(".SSPservRequired").val();
                    let amtsaveHiddenValue = Number($(".amtsaveHiddenValue").val());
                    let SSPduration = Number($(".SSPduration").val());
                    let SSPtransDate = $(".SSPtransDate").val();
                    let SSPfacility = $(".SSPfacility").val();
                    let SSPbillsPayableBy = $(".SSPbillsPayableBy").val();
                    let SSPhiddenBillCode = $(".SSPhiddenBillCode").val();
                    let capitated = $(".capitated").val();
                    let hiddenGroupItem = ($(".hiddenGroupItem").val() == "true") ? "YES" : "NO";
                    let hiddenNewRec = ($(".hiddenNewRec").val() == "true") ? true : false;
                    let hiddenIsPosted = ($(".hiddenIsPosted").val() == "true") ? true : false;
                    let labelSSPfacility = $(".labelSSPfacility").text().trim();
                    let note = dOM.find('#9LkUp .noteTextArea').val();
                    let grpBillByType = "NO";
                    let grpBillDesc = "";
                    let recID = "";

                    if (SSPamount < 1 || SSPservRequired.trim() == "") {
                        let xstr = SSPamount < 1 ? "Negative Charge ? " : "Request Description is Empty...";
                        alert(xstr);
                        $(".SSPservRequired").focus();
                        return;
                    } else if (SSPamount < amtsaveHiddenValue) {
                        alert("Specified value is less than control value...");
                        $(".SSPservRequired").focus();
                        return;
                    } else {
                        if (SSPduration > 0)
                            $(".SSPamount").val((SSPamount * SSPduration))

                        let SSPcurrentTotal = SSPamount + Number($(".SSPcurrentTotal").val());
                        $(".SSPcurrentTotal").val(SSPcurrentTotal);

                        let done = (hiddenNewRec || hiddenIsPosted) ? "NO" : "YES";
                        let newRec = (hiddenNewRec) ? "YES" : "NO";

                        let servRequiredText = $(".SSPservRequired").find(`[value="${SSPservRequired}"]`).text();
                        let SSPfacilityText = $(".SSPfacility").find(`[value="${SSPfacility}"]`).text();

                        //let num = $(".tbody").find("tr").last().find("td").eq(0).text();
                        //let count = Number(num) + 1;

                        let hiddenAmendFlag = $(".hiddenAmendFlag").val();
                        if (hiddenAmendFlag == "true") {
                            let existingCode = $(".existingCode").val().trim();

                            $(".tbody").find("tr").each(function () {
                                let code = $(this).find("td").eq(4).text().trim();

                                if (existingCode == code) {
                                    $(this).remove(); //delete row
                                }

                            });
                        }

                        let rows = "<tr>" +
                                        "<td></td>" +
                                        "<td>" + SSPfacilityText + "</td>" +
                                        "<td>" + servRequiredText + "</td>" +
                                        "<td>" + SSPamount + "</td>" +
                                        "<td>" + SSPservRequired + "</td>" +
                                        "<td>" + SSPhiddenBillCode + "</td>" +
                                        "<td>" + note + "</td>" +
                                        "<td>" + SSPtransDate + "</td>" +
                                        "<td>" + capitated + "</td>" +
                                        "<td>" + hiddenGroupItem + "</td>" +
                                        "<td>" + SSPduration + "</td>" +
                                        "<td>" + done + "</td>" +
                                        "<td>" + newRec + "</td>" +
                                        "<td>" + labelSSPfacility + "</td>" +
                                        "<td>" + "NO" + "</td>" +
                                        "<td>" + "" + "</td>" +
                                        "<td>" + recID + "</td>" +
                                   "</tr>";

                        $(".tbody").append(rows);

                        //re-adjust the count values after deleting or adding a row
                        let counter = 0;
                        $(".tbody").find("tr").each(function () {
                            $(this).find("td").eq(0).text(++counter);
                        });

                        $(".SSPduration").val("0");
                        $(".SSPamount").val("0");
                        $(".SSPservRequired").val("");
                        $(".grpProcedure").val("");
                        $(".note").val("");
                        $(".SSPaddBtn").prop({disabled: true});
                        $(".SSPsubmitBtn").prop({disabled: false});

                    }

                }
            })

            $(".grpProcedure").on({
                focusout: function () {
                    let grpProcedure = $(this).val();
                    let saveGroup = $(".hiddenSaveGroup").val();
                    let SSPcurrentTotal = Number($(".SSPcurrentTotal").val());
                    let grpProcedureText = $(".grpProcedure").find(`[value="${grpProcedure}"]`).text();
                    let flag = false;

                    if (grpProcedure.trim() != "") {

                        $.ajax({
                            url: "/AJAX/grpProcedureFocusOut",
                            method: "POST",
                            data: { grpProcedure: grpProcedure, saveGroup: saveGroup, SSPcurrentTotal: SSPcurrentTotal, grpProcedureText: grpProcedureText },
                            success: function (data) {

                                if (data.REPORTS != null) {

                                    $(".hiddenGroupItem").val(data.REPORTS.cmdgrpmember);
                                    $(".hiddenNewRec").val(data.REPORTS.newrec);

                                    if (data.REPORTS.alertMessage != null)
                                        alert(data.REPORTS.alertMessage);

                                    if (data.REPORTS.ActRslt != null)
                                    {
                                        if (confirm(data.REPORTS.ActRslt)) {
                                            flag = true;
                                        }
                                    }

                                }

                            }

                        }).then(function () {
                            if (flag) {

                                $.ajax({
                                    url: "/AJAX/grpProcedSecondCall",
                                    method: "POST",
                                    data: { grpProcedure: grpProcedure },
                                    success: function (data) {

                                        let currentTotal = Number($(".SSPcurrentTotal").val());
                                        $(".SSPcurrentTotal").val(currentTotal + data.REPORTS.nmrBalbf);

                                        $(".hiddenSaveGroup").val(grpProcedure);

                                        let foundIt = false;
                                        let grpDetails = data.MRB15AS;

                                        if (grpDetails.length > 0) {
                                            for (var i = 0; i < grpDetails.length; i++) {
                                                $(".tbody").find("tr").each(function () {
                                                    let code = $(this).find("td").eq(4).text();
                                                    if (code.trim() == grpDetails[i].process.trim()) {
                                                        foundIt = true;
                                                    }
                                                });

                                                if (!foundIt) {
                                                    if (data.REPORTS.nmrBalbf == 0) {
                                                        let SSPcurrentTotal = $(".SSPcurrentTotal").val();
                                                        let SSPfacility = $(".SSPfacility").val();
                                                        let servRequiredText = grpDetails[i].DESCRIPTION.trim();
                                                        let SSPamount = grpDetails[i].amount.trim();
                                                        let SSPservRequired = grpDetails[i].process.trim();
                                                        let SSPhiddenBillCode = $(".SSPhiddenBillCode").val().trim() == "" ? grpDetails[i].process.trim() : $(".SSPhiddenBillCode").val().trim();
                                                        let todaysDate = new Date();
                                                        let grpbillbyservtype = (data.REPORTS.chkbillregistration) ? "YES" : "NO";
                                                        let capitated = $(".capitated").val();

                                                        $(".SSPcurrentTotal").val(SSPcurrentTotal + Number(grpDetails[i].amount));

                                                        //let num = $(".tbody").find("tr").last().find("td").eq(0).text();
                                                        //let count = Number(num) + 1;

                                                        let rows = "<tr>" +
                                                                        "<td></td>" +
                                                                        "<td>" + SSPfacility + "</td>" +
                                                                        "<td>" + servRequiredText + "</td>" +
                                                                        "<td>" + SSPamount + "</td>" +
                                                                        "<td>" + SSPservRequired + "</td>" +
                                                                        "<td>" + SSPhiddenBillCode + "</td>" +
                                                                        "<td>" + "" + "</td>" +
                                                                        "<td>" + todaysDate + "</td>" +
                                                                        "<td>" + capitated + "</td>" +
                                                                        "<td>" + "NO" + "</td>" +
                                                                        "<td>" + "YES" + "</td>" +
                                                                        "<td>" + "0" + "</td>" +
                                                                        "<td>" + "NO" + "</td>" +
                                                                        "<td>" + "YES" + "</td>" +
                                                                        "<td>" + SSPfacility + "</td>" +
                                                                        "<td>" + grpbillbyservtype + "</td>" +
                                                                        "<td>" + "0" + "</td>" +
                                                                   "</tr>";

                                                        $(".tbody").append(rows);

                                                        //re-adjust the count values after deleting or adding a row
                                                        let counter = 0;
                                                        $(".tbody").find("tr").each(function () {
                                                            $(this).find("td").eq(0).text(++counter);
                                                        });
                                                    }
                                                }
                                            }

                                        }

                                        $(".SSPsubmitBtn").prop({disabled: false});
                                    }
                                })
                            } else {
                                $(".grpProcedure").val("");
                            }
                        })

                        $(".SSPaddBtn").focus();
                    }


                }
            })

            $(".modalAddBtn").on({
                click: function () {
                    //if modalAdd is clicked then modalAmend should be false and vice versa
                    $(".hiddenNewRec").val("true");

                    $(".hiddenAmendFlag").val("false");
                }
            })

            $(".modalAmendBtn").on({
                click: function () {
                    $(".hiddenAmendFlag").val("true");

                    $(".hiddenNewRec").val("false");
                }
            })

            $(".modalDeleteBtn").on({
                click: function () {
                    //first set the values of newrec and amend to false since the add button and amend button were not clicked
                    $(".hiddenAmendFlag").val("false");
                    $(".hiddenNewRec").val("false");

                    //Then implement the delete function
                    let SSPservRequired = $(".SSPservRequired").val();
                    let servRequiredText = $(".SSPservRequired").find(`[value="${SSPservRequired}"]`).text();

                    if (confirm(`Confirm to delete this item... ${servRequiredText}`)) {
                        let existingCode = $(".existingCode").val();

                        let SSPamount = Number($(".SSPamount").val());
                        let SSPcurrentTotal = Number($(".SSPcurrentTotal").val());
                        $(".SSPcurrentTotal").val((SSPcurrentTotal - SSPamount));

                        let counterFlag = 0;
                        $(".tbody").find("tr").each(function () {
                            let code = $(this).find("td").eq(4).text().trim();

                            if (existingCode == code) {
                                if (counterFlag < 1) { //We want to delete only one out of the number of occurrance
                                    $(this).remove(); //delete row
                                }

                                ++counterFlag;
                            }
                        });

                        //re-adjust the count values after deleting or adding a row
                        let counter = 0;
                        $(".tbody").find("tr").each(function () {
                            $(this).find("td").eq(0).text(++counter);
                        });

                        $(".SSPduration").val("0");
                        $(".SSPamount").val("0");
                        $(".SSPservRequired").val("");
                        $(".grpProcedure").val("");
                        $(".note").val("");
                        $(".SSPaddBtn").prop({ disabled: true });
                        $(".SSPsubmitBtn").prop({ disabled: false });

                    }
                }
            })

            $(".modalIgnoreBtn").on({
                click: function () {
                    //first set the values of newrec and amend to false since the add button and amend button were not clicked
                    $(".hiddenAmendFlag").val("false");
                    $(".hiddenNewRec").val("false");

                    //Then clear the values of the fields
                    $(".SSPduration").val("0");
                    $(".SSPamount").val("0");
                    $(".SSPservRequired").val("");
                    $(".grpProcedure").val("");
                    $(".note").val("");
                    $(".SSPaddBtn").prop({ disabled: true });
                    $(".SSPsubmitBtn").prop({ disabled: false });
                }
            })

            $("#noteChk").prop({ disabled: true });
            $("#noteChk").prop({ checked: false });

            $("#noteChk, .notesLabel").on({
                click: function () {
                    let SSPfullName = $(".SSPfullName").val().trim();
                    let SSPfacility = $(".SSPfacility").val();
                    let SSPfacilityText = $(".SSPfacility").find(`[value="${SSPfacility}"]`).text().trim();
                    let SSPservRequired = $(".SSPservRequired").val();
                    let servRequiredText = $(".SSPservRequired").find(`[value="${SSPservRequired}"]`).text().trim();

                    if (SSPfacility.trim() == "" || SSPservRequired.trim() == "") {
                        $("#noteChk").prop({ disabled: true });
                        $("#noteChk").prop({ checked: false });

                        alert("Enter facility and Service Required fields to Enable Note!!!");
                    } else {
                        $(".noteHeader").html(`SPECIAL NOTES / INSTRUCTIONS FOR <b>${SSPfullName}</b> ON: <b>${servRequiredText}</b> - <b>${SSPfacilityText}</b>`);

                        $("#noteChk").prop({ disabled: false });
                        $("#noteChk").prop({ checked: true });

                        $("#refLookUp22").click();
                    }
                }
            })

            ShowModal(dOM, '#refLookUp22', '#22LkUp', function aF() {
                dOM.find('#22LkUp .cancelNote').on({
                    click: function () {
                        $("#noteChk").prop({ checked: false });

                        dOM.find('#9LkUp .noteTextArea').val("");
                    }
                });

            });

            $(".SSPsubmitBtn").on({
                click: function () {
                    let SSPhospitalNo = $(".SSPhospitalNo").val();
                    let SSPpatGroupCode = $(".SSPpatGroupCode").val();
                    let SSPfullName = $(".SSPfullName").val();
                    let SSPage = $(".SSPage").val();
                    let SSPgender = $(".SSPgender").val();
                    let SSPaddress = $(".SSPaddress").val();
                    let SSPemail = $(".SSPemail").val();
                    let SSPphone = $(".SSPphone").val();
                    let SSPtransDate = $(".SSPtransDate").val();
                    let SSPbillsPayableBy = $(".SSPbillsPayableBy").val();
                    let SSPfacility = $(".SSPfacility").val();
                    let SSPghgroupcode = $(".SSPghgroupcode").val();
                    let SSPgrouphead = $(".SSPgrouphead").val();
                    let SSPreferrer = $(".SSPreferrer").val();
                    let hiddenNewRec = $(".hiddenNewRec").val();
                    let SSPrequestAlert = $(".SSPrequestAlert").val();
                    let referenceNo = $(".referenceNo").val();  // from out patient record code
                    let SSPcurrentTotal = Number($(".SSPcurrentTotal").val());
                    let hiddenCashPaying = $(".hiddenCashPaying").val();

                    //PPDRESSINGDTL Class holds the table data
                    let tableList = [];
                    $(".tbody").find("tr").each(function () {
                        let rowObject = {
                            DESCRIPTION: $(this).find("td").eq(0).text().trim(),  // for count
                            FACILITY: $(this).find("td").eq(1).text().trim(),  // for facility
                            BILLPROCESS: $(this).find("td").eq(2).text().trim(), // for procedure
                            AMOUNT: Number($(this).find("td").eq(3).text().trim()), // for amount
                            GROUPCODE: $(this).find("td").eq(4).text().trim(), // for code
                            GHGROUPCODE: $(this).find("td").eq(5).text().trim(), // for billcode
                            NOTES: $(this).find("td").eq(6).text().trim(), // for notes
                            TRANS_DATE: $(this).find("td").eq(7).text().trim(), // for reg_Date
                            CAPITATED: ($(this).find("td").eq(8).text().trim() == "YES") ? true : false, // for capitated
                            GROUPEDITEM: ($(this).find("td").eq(9).text().trim() == "YES") ? true : false,  // for grp_Item
                            DURATION: Number($(this).find("td").eq(10).text().trim()), // for duration
                            POSTED: ($(this).find("td").eq(11).text().trim() == "YES") ? true : false,// for posted
                            RECTYPE: $(this).find("td").eq(12).text().trim(), // for new request
                            REFERENCE: $(this).find("td").eq(13).text().trim(), // for unitcode
                            GRPBILLBYSERVTYPE: ($(this).find("td").eq(14).text().trim() == "YES") ? true : false, // for GrpBillByType
                            TRANSTYPE: $(this).find("td").eq(15).text().trim(), //for GrpBillDesc
                            RECID: Number($(this).find("td").eq(16).text().trim()) // for recId
                        };

                        tableList.push(rowObject)
                    });

                    //Check if no row is in the table
                    let num = $(".tbody").find("tr").last().find("td").eq(0).text();
                    Number(num);

                    if (num == 0) {
                        alert("No Selection Made...");
                        return;
                    }

                    if (SSPbillsPayableBy.trim() == "") {
                        alert("Who Pays the Bill is Required...");
                        return;
                    } else if (SSPfullName.trim() == "") {
                        alert("Patient Name is Required...");
                        return;
                    } else if (SSPaddress.trim() == "" && SSPemail.trim() == "" && SSPphone.trim() == "") {
                        alert("Check Patient's Contact information - Phone/Email/Address");
                    } else {
                        if (confirm("Confirm to Submit Selections to Service Centres...")) {
                            $(this).prop({ disabled: true });

                            $.ajax({
                                url: "/AJAX/SSPsubmitBtnClicked",
                                method: "POST",
                                data: {
                                    SSPtransDate: SSPtransDate, hiddenNewRec: hiddenNewRec, SSPhospitalNo: SSPhospitalNo, SSPpatGroupCode: SSPpatGroupCode,
                                    SSPfullName: SSPfullName, SSPgrouphead: SSPgrouphead, SSPfacility: SSPfacility, SSPghgroupcode: SSPghgroupcode,
                                    SSPreferrer: SSPreferrer, SSPbillsPayableBy: SSPbillsPayableBy, SSPrequestAlert: SSPrequestAlert, SSPaddress: SSPaddress,
                                    SSPage: SSPage, SSPgender: SSPgender, SSPphone: SSPphone, SSPemail: SSPemail, referenceNo: referenceNo,
                                    SSPcurrentTotal: SSPcurrentTotal, hiddenCashPaying: hiddenCashPaying, calltype: calltype, tableList: tableList
                                },
                                success: function () {
                                    alert("SUBMIT SUCCESSFUL...");
                                    ClearControls();
                                }
                            })


                        }
                    }


                }
            })


            $(".clearSelectn").on({
            click: function () {
                //Check if no row is in the table
                let num = $(".tbody").find("tr").last().find("td").eq(0).text();
                Number(num);

                if (num == 0) {
                    alert("No Selection Made...");
                    return;
                } else {
                    if (confirm("Confirm to Remove Selections...")) {
                        $(".tbody").html("");
                        return;
                    }
                }
            }
            })


            //***************************************** FOR PRESCRIPTION **************************************
            //On Load
            $(".prescDublicateModalBtn").hide();

            ShowModal(dOM, '#refLookUp24', '#24LkUp', function aF() {
            });

            ShowModal(dOM, '#refLookUp25', '#25LkUp', function aF() {
            });


            function LoadListViewDtl () {
                let prescQtyReqd = Number($(".prescQtyReqd").val());
                let prescDescription = $(".prescDescription").val().trim();
                let txtdose = $(".txtdose").val().trim();
                let prescDose = Number($(".prescDose").val());
                let prescUnitCost = Number($(".prescUnitCost").val());
                let prescChkInpatient = $(".prescChkInpatient").prop("checked");
                let prescPatientNo = $(".prescPatientNo").val();
                let prescGroupCode = $(".prescGroupCode").val();
                let prescInterval = $(".prescInterval").val();
                let prescDuration = $(".prescDuration").val();
                let prescUnitId = $(".prescUnitId").val();
                let prescNewRec = $(".prescNewRec").val();
                let unitIDsave = $(".unitIDsave").val().trim();
                let isanc = $(".isanc").val() == "true" ? true : false;
                let iscapitated = $(".iscapitated").val() == "true" ? true : false;
                let mstkcode = $(".mstkcode").val();
                let msection = $(".msection").val();
                let qtyAvailable = $(".qtyAvailable").val();
                let lblUnitId = $(".lblUnitId").text();
                let prescWhenHow = $(".prescWhenHow").val();
                let prescSpecInstrn = $(".prescSpecInstrn").val();
                let mcumgv = $(".mcumgv").val();
                let minterval = $(".minterval").val();
                let mduration = $(".mduration").val();
                let mdose = $(".mdose").val();
                let unitPurchase = $(".unitPurchase").val();
                let prescRecno = Number($(".prescRecno").val());
                let phamalterstr = $(".phamalterstr").val().trim();
                let woperator = $(".woperator").val();
                let dateHourMinSec = $(".dateHourMinSec").val();

                if (prescDescription == "" || prescQtyReqd == 0) {
                    alert("Please Check Product Description / Qty Required, \r\n\r\n It's Empty or Item Details have been Added ...");
                    $(".prescDescription").focus();
                    return;
                }

                if (txtdose == "" || txtdose == null && prescDose > 0)
                    $(".txtdose").val(prescDose)

                if (prescUnitCost < 1) {
                    if (!confirm("Please check this prescription...\r\n ZERO COST!!!  CONTINUE ??")) {
                        return;
                    }
                }

                $.ajax({
                    url: "/AJAX/prescLoadListView",
                    method: "POST",
                    data: {
                        prescUnitCost: prescUnitCost, prescQtyReqd: prescQtyReqd, prescChkInpatient: prescChkInpatient,
                        prescPatientNo: prescPatientNo, prescGroupCode: prescGroupCode, txtdose: txtdose, prescInterval: prescInterval,
                        prescDuration: prescDuration, prescUnitId: prescUnitId, prescNewRec: prescNewRec, unitIDsave: unitIDsave,
                        isanc: isanc, iscapitated: iscapitated, mstkcode: mstkcode, msection: msection
                    },
                    success: function (data) {
                        if (data != null) {
                            $(".prescCapitated").val(data.nmrBalbf);
                            $(".prescCurTotal").val(data.nmrcurcredit);
                            $(".iscapitated").val(data.chkReportSum);

                            if (data.chkApplyFilter) {
                                $(".prescWriteSaveBtn").prop({ disabled: false })
                            }

                            //Add record to the table
                            if (data.chkIncludeBf) {
                                let iscapitated = $(".iscapitated").val() == "true" ? "YES" : "NO";
                                let alertforConsumables = data.chkReportSum ? "YES" : "NO";
                                prescUnitId = prescUnitId == null ? "" : prescUnitId;

                                let rows = "<tr>" +
                                               "<td></td>" +
                                               "<td>" + prescDescription + "</td>" +
                                               "<td>" + prescUnitCost + "</td>" +
                                               "<td>" + qtyAvailable + "</td>" +
                                               "<td>" + prescQtyReqd + "</td>" +
                                               "<td>" + lblUnitId + "</td>" +
                                               "<td>" + data.txtdiscount + "</td>" +
                                               "<td>" + txtdose + " " + prescUnitId + "</td>" +
                                               "<td>" + prescInterval + "</td>" +
                                               "<td>" + prescDuration + "</td>" +
                                               "<td>" + prescWhenHow + "</td>" +
                                               "<td>" + prescSpecInstrn + "</td>" +
                                               "<td>" + mcumgv + "</td>" +
                                               "<td>" + minterval + "</td>" +
                                               "<td>" + mduration + "</td>" +
                                               "<td>" + mdose + "</td>" +
                                               "<td>" + iscapitated + "</td>" +
                                               "<td> NO </td>" +
                                               "<td> 0 </td>" +
                                               "<td>" + unitPurchase + "</td>" +
                                               "<td>" + mstkcode + "</td>" +
                                               "<td></td>" +
                                               "<td>" + alertforConsumables + "</td>" +
                                          "</tr>";

                                $(".prescTbody").append(rows);

                                //re-adjust the count values after deleting or adding a row
                                let counter = 0;
                                $(".prescTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });

                                //Reset the input fields
                                $(".prescQtyReqd").val("");
                                $(".prescDescription").val("");
                                $(".prescCurTotal").val(0);
                                $(".prescUnitCost").val(0);
                                $(".prescStockDisc").val("");
                            }

                            //Update the table row
                            if (data.chkgetdependants) {
                                let iscapitated = $(".iscapitated").val() == "true" ? "YES" : "NO";
                                let alertforConsumables = data.chkSegmented ? "YES" : "NO";
                                let prescCurTotal = Number($(".prescCurTotal").val());

                                $(".prescTbody").find("tr").each(function () {
                                    let serialNo = Number($(this).find("td").eq(0).text().trim());
                                    let totalCost = Number($(this).find("td").eq(6).text().trim());

                                    if (prescRecno == serialNo) {
                                        $(".prescCurTotal").val(prescCurTotal - totalCost);
                                        prescUnitId = prescUnitId == null ? "" : prescUnitId;

                                        $(this).find("td:eq(1)").text(prescDescription);
                                        $(this).find("td:eq(2)").text(prescUnitCost);
                                        $(this).find("td:eq(3)").text(qtyAvailable);
                                        $(this).find("td:eq(4)").text(prescQtyReqd);
                                        $(this).find("td:eq(5)").text(lblUnitId);
                                        $(this).find("td:eq(6)").text(data.txtdiscount);
                                        $(this).find("td:eq(7)").text(txtdose + " " + prescUnitId);
                                        $(this).find("td:eq(8)").text(prescInterval);
                                        $(this).find("td:eq(9)").text(prescDuration);
                                        $(this).find("td:eq(10)").text(prescWhenHow);
                                        $(this).find("td:eq(11)").text(prescSpecInstrn);
                                        $(this).find("td:eq(12)").text(mcumgv);
                                        $(this).find("td:eq(13)").text(minterval);
                                        $(this).find("td:eq(14)").text(mduration);
                                        $(this).find("td:eq(15)").text(mdose);
                                        $(this).find("td:eq(16)").text(iscapitated);
                                        $(this).find("td:eq(17)").text("NO");
                                        $(this).find("td:eq(18)").text("0");
                                        $(this).find("td:eq(19)").text(unitPurchase);
                                        $(this).find("td:eq(20)").text(mstkcode);
                                        $(this).find("td:eq(21)").text("YES");
                                        $(this).find("td:eq(22)").text(alertforConsumables);
                                    }
                                });
                            }

                            if (data.chkIncludeOnHold) {
                                let prescCurTotal = Number($(".prescCurTotal").val());

                                let xphamalterstr = phamalterstr + "Added - " + prescDescription.trim() + " Qty_Prd." +
                                    prescQtyReqd.trim() + " : " + txtdose.trim() + " " + prescUnitId.trim() + " x " +
                                    prescInterval.trim() + " x " + prescDuration.trim() + " Cost : " + prescCurTotal.trim() +
                                    " By : " + woperator.trim() + " " + dateHourMinSec + "\r\n";

                                $(".phamalterstr").val(xphamalterstr);
                            }

                        }
                    }
                })

            }

            $(".prescBackBtn").on({
                click: function () {
                    $(".reviewBlock").show();
                    $(".observChartBlock").hide();
                    $(".specServPatients").hide();
                    $(".prescription").hide();
                }
            })

            $(".prescStockDisc").on({
                focusout: function () {
                    let prescStockDisc = $(".prescStockDisc").val().trim();
                    let prescChkInpatient = $(".prescChkInpatient").prop("checked");
                    let dtlastattend = $(".dtlastattend").val();
                    let prescGroupCode = $(".prescGroupCode").val().trim();
                    let prescPatientNo = $(".prescPatientNo").val().trim();
                    let reqAlertCount = Number($(".reqAlertCount").val());

                    if (prescStockDisc == "") {
                        return;
                    }

                    let totalRowNo = Number($(".prescTbody").find("tr:last()").find("td:eq(0)").text());

                    //REPORTS Class holds the table data
                    let tableList = [];

                    if (totalRowNo > 0) {
                        $(".prescTbody").find("tr").each(function () {
                            let rowObject = {
                                txtstaffno: $(this).find("td:eq(0)").text().trim(),  // for Serial No
                                txtclinic: $(this).find("td:eq(20)").text().trim(), // for stk_item/stk_code
                            };

                            tableList.push(rowObject)
                        });
                    }

                    $.ajax({
                        url: "/AJAX/prescStockDiscFocusout",
                        method: "POST",
                        data: {
                            prescStockDisc: prescStockDisc, prescChkInpatient: prescChkInpatient, dtlastattend: dtlastattend,
                            prescGroupCode: prescGroupCode, prescPatientNo: prescPatientNo, reqAlertCount: reqAlertCount,
                            tableList: tableList
                        },
                        success: function (data) {
                            if (data != null) {
                                if (data.txtbranch != null)
                                    $(".prescDescription").val(data.txtbranch);
                                if (data.txtreference != null)
                                    $(".prescStockDisc").val(data.txtreference);
                                if (data.lblbillspayable != null)
                                    $(".lblQtyPack").text(data.lblbillspayable);
                                if (data.cbotype != null) {
                                    $(".prescUnitId").val(data.cbotype);
                                    $(".lblUnitId").text(data.cbotype);
                                }

                                $(".prescQtyReqd").val(data.nmrBalbf);
                                $(".prescUnitCost").val(data.txtdiscount);
                                $(".unitPurchase").val(data.nmrcurcredit);
                                $(".prescNewRec").val(data.newrec);
                                $(".prescRecno").val(data.txtstaffno);
                                $(".reqAlertCount").val(data.nmrAmountTo);
                                $(".Stkstrength").val(data.nmrAgeFrom);
                                $(".stkper").val(data.nmrAgeTo);
                                $(".packqty").val(data.nmrcurdebit);
                                $(".iscapitated").val(data.chkCurrtAdmRev);

                                if (data.txtbillonacct != null)
                                    $(".txtdose").val(data.txtbillonacct);
                                if (data.txtcurrency != null)
                                    $(".mstkcode").val(data.txtcurrency);

                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                }

                                if (data.ActRslt != null) {
                                    if (confirm(data.ActRslt)) {
                                        $(".prescUnitId").val("Tabs");
                                    } else {
                                        $(".prescUnitId").val("Btl");
                                    }
                                }

                                if (data.chkHMO) {
                                    //click the modal button
                                    $(".prescDublicateModalBtn").click();
                                }

                            }
                        }
                    })

                }
            })

            $(".prescUnitId").on({
                focusout: function () {
                    let prescUnitId = $(".prescUnitId").val();
                    let Stkstrength = Number($(".Stkstrength").val());
                    let stkper = Number($(".stkper").val());
                    let prescDose = Number($(".prescDose").val());

                    if (prescUnitId == "" || prescUnitId == null) {
                        return;
                    }

                    if (prescUnitId == "Mg" && Stkstrength != 0 && stkper != 0) {
                        $.ajax({
                            url: "/AJAX/prescUnitIdFocusout",
                            method: "POST",
                            data: { Stkstrength: Stkstrength, stkper: stkper, prescDose: prescDose },
                            success: function (data) {
                                if (data != null) {
                                    $(".isconvertable").val(data.chkbillregistration);
                                }
                            }
                        })

                    }

                }
            })

            $(".prescInterval").on({
                focusout: function () {
                    let prescInterval = Number($(".prescInterval").val());
                    let minterval = 0;

                    switch (prescInterval)
                    {
                        case 0:
                            minterval = 24;
                            break;
                        case 1:
                        case 9:
                            minterval = 12;
                            break;
                        case 2:
                        case 5:
                        case 8:
                            minterval = 8;
                            break;
                        case 3:
                        case 7:
                            minterval = 6;
                            break;
                        case 4:
                        case 6:
                            minterval = 4;
                            break;
                        case 10:
                            minterval = 48;
                            break;
                        default:
                            minterval = 1;
                            break;
                    }

                    $(".minterval").val(minterval);
                }
            })

            $(".prescDuration").on({
                focusout: function () {
                    let prescDuration = Number($(".prescDuration").val());
                    let prescDurationText = $(".prescDuration").find(`[value="${prescDuration}"]`).text().trim();
                    let prescInterval = Number($(".prescInterval").val());
                    let prescIntervalText = $(".prescInterval").find(`[value="${prescInterval}"]`).text().trim();
                    let minterval = Number($(".minterval").val());
                    let mduration = Number($(".mduration").val());
                    let mdose = Number($(".mdose").val());
                    let packqty = Number($(".packqty").val());
                    let isconvertable = $(".isconvertable").val().trim() == "true" ? true : false;
                    let prescDose = Number($(".prescDose").val());

                    if (prescDurationText == "" || prescDurationText == null) {
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/prescDurationFocusout",
                        method: "POST",
                        data: {
                            prescDuration: prescDuration, prescDurationText: prescDurationText, prescIntervalText: prescIntervalText,
                            minterval: minterval, mduration: mduration, mdose: mdose, isconvertable: isconvertable, packqty: packqty,
                            prescDose: prescDose
                        },
                        success: function (data) {
                            if (data != null) {
                                $(".mduration").val(data.nmrPayable);
                                $(".mdose").val(data.nmrcurcredit);
                                $(".prescQtyReqd").val(data.txtdiscount);

                                if (data.alertMessage != null) {
                                    alert(data.alertMessage);
                                }

                            }
                        }
                    })

                }
            })

            $(".prescDose").on({
                focusout: function () {
                    let prescDose = Number($(".prescDose").val());

                    if (prescDose > 0) {
                        $(".txtdose").val(prescDose);
                        $(".mdose").val(prescDose);
                    }

                }
            })

            $(".prescQtyReqd").on({
                focusout: function () {
                    LoadListViewDtl();
                }
            })

            $(".prescDubAddBtn").on({
                click: function () {
                    //if modalAdd is clicked then modalAmend should be false and vice versa
                    $(".prescNewRec").val("true");
                    $(".prescAmendFlag").val("false");
                }
            })

            $(".prescDubAmendBtn").on({
                click: function () {
                    let prescRecno = Number($(".prescRecno").val());
                    let msection = $(".msection").val();
                    let phamalterstr = $(".phamalterstr").val().trim();
                    let woperator = $(".woperator").val();
                    let dateHourMinSec = $(".dateHourMinSec").val();
                    let prescDescription = $(".prescDescription").val().trim();
                    
                    $(".prescAmendFlag").val("true");
                    $(".prescNewRec").val("false");

                    $(".prescTbody").find("tr").each(function () {
                        let rowNo = Number($(this).find("td:eq(0)").text().trim());  // for Serial No

                        if (prescRecno == rowNo){
                            let prescQtyReqd = $(this).find("td:eq(4)").text().trim();
                            let txtdose = $(this).find("td:eq(7)").text().trim();
                            let prescInterval = $(this).find("td:eq(8)").text().trim();
                            let prescDuration = $(this).find("td:eq(9)").text().trim();
                            let prescWhenHow = $(this).find("td:eq(10)").text().trim();
                            let prescSpecInstrn = $(this).find("td:eq(11)").text().trim();
                            let mcumgv = Number($(this).find("td:eq(12)").text().trim());
                            let prescDose = $(this).find("td:eq(15)").text().trim();

                            $(".prescQtyReqd").val(prescQtyReqd)
                            $(".txtdose").val(txtdose)
                            $(".prescInterval").val(prescInterval)
                            $(".prescDuration").val(prescDuration)
                            $(".prescWhenHow").val(prescWhenHow)
                            $(".prescSpecInstrn").val(prescSpecInstrn)
                            $(".mcumgv").val(mcumgv)
                            $(".prescDose").val(prescDose)

                            if (mcumgv != 0)
                            {
                                alert("Record Exist and Already Dispensed... Can't Be Amended");

                                $(".prescStockDisc").val("");
                                $(".prescDescription").val("");
                                $(".prescStockDisc").focus();

                                return;
                            }

                            if (msection == "8")  //for PHARMACY NOTE IN medhist note
                            {
                                let xphamalterstr = phamalterstr + "Pharmacist Alteration - " + prescDescription.trim() +
                                        " Qty_Presd." + txtdose.trim() + " x " + prescInterval.Text.trim() + " x " +
                                        prescDuration.trim() + " By : " + woperator.trim() + " " + dateHourMinSec + "\r\n";

                                $(".phamalterstr").val(xphamalterstr);
                            }

                        }
                    });

                }
            })

            $(".prescDubDeleteBtn").on({
                click: function () {
                    let prescRecno = Number($(".prescRecno").val());
                    let prescDescription = $(".prescDescription").val().trim();
                    let phamalterstr = $(".phamalterstr").val().trim();
                    let woperator = $(".woperator").val();
                    let dateHourMinSec = $(".dateHourMinSec").val();
                    let mdoctor = $(".mdoctor").val();
                    let prescChkInpatient = $(".prescChkInpatient").prop("checked");
                    let prescCurTotal = Number($(".prescCurTotal").val());

                    //first set the values of newrec and amend to false since the add button and amend button were not clicked
                    $(".prescAmendFlag").val("false");
                    $(".prescNewRec").val("false");

                    $(".prescTbody").find("tr").each(function () {
                        let rowNo = Number($(this).find("td:eq(0)").text().trim());  // for Serial No

                        if (prescRecno == rowNo) {
                            let prescQtyReqd = $(this).find("td:eq(4)").text().trim();
                            let txtdose = $(this).find("td:eq(7)").text().trim();
                            let prescInterval = $(this).find("td:eq(8)").text().trim();
                            let prescDuration = $(this).find("td:eq(9)").text().trim();
                            let prescWhenHow = $(this).find("td:eq(10)").text().trim();
                            let prescSpecInstrn = $(this).find("td:eq(11)").text().trim();
                            let mcumgv = Number($(this).find("td:eq(12)").text().trim());
                            let prescDose = $(this).find("td:eq(15)").text().trim();
                            let recID = $(this).find("td:eq(18)").text().trim();

                            if (mcumgv != 0) {
                                alert("Item Already Dispensed - use the listBox Option....");

                                return false;
                            }

                            if (confirm(`Pls Confirm to delete this item... ${prescDescription}`)) {
                                let xamt = Number($(this).find("td:eq(6)").text().trim());

                                let xphamalterstr = phamalterstr + "Deleted - " + prescDescription.trim() + " Qty_Prescd." +
                                    prescQtyReqd + " x " + txtdose.trim() + " x " + prescInterval.trim() + " x " +
                                    prescDuration.trim() + " Cost : " + xamt + "(" + mdoctor.trim() + ")" + " By : " +
                                    woperator.trim() + " " + dateHourMinSec + "\r\n";

                                $(".phamalterstr").val(xphamalterstr);

                                if (recID != "" && Number(recID) > 0) {
                                    $.ajax({
                                        url: "/AJAX/prescDubDeleteBtnClick",
                                        method: "POST",
                                        data: { prescChkInpatient: prescChkInpatient, recID: recID,},
                                        success: function (data) {
                                            if (data != null) {
                                                if (data.chkADVCorporate) {
                                                    $(".prescWriteSaveBtn").prop({ disabled: false });
                                                }

                                                if (data.alertMessage) {
                                                    alert(data.alertMessage);
                                                }
                                                
                                            }
                                        }
                                    })
                                }

                                $(".prescCurTotal").val(prescCurTotal - xamt);

                                $(this).remove();

                                //re-adjust the count values after deleting or adding a row
                                let counter = 0;
                                $(".prescTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });

                                return false;

                            }

                        }
                    });

                }
            })

            $(".prescDubIgnoreBtn").on({
                click: function () {
                    //first set the values of newrec and amend to false since the add button and amend button were not clicked
                    $(".prescAmendFlag").val("false");
                    $(".prescNewRec").val("false");
                    $(".prescDescription").focus();
                }
            })

            $(".prescAddBtn").on({
                click: function () {
                    LoadListViewDtl();
                }
            })

            $(".prescWriteSaveBtn").on({
                click: function () {
                    let prescChkInpatient = $(".prescChkInpatient").prop("checked");
                    let prescTTH = $(".prescTTH").prop("checked");
                    let prescSpecInstrn = $(".prescSpecInstrn").val().trim();
                    let prescCurTotal = Number($(".prescCurTotal").val());
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val();
                    let mdoctor = $(".mdoctor").val();
                    let revAdmReference = $(".revAdmReference").val().trim();
                    
                    //REPORTS Class holds the Object data
                    let dataObject = {
                        chkStaffProfiling: prescChkInpatient,
                        chkBroughtForward: prescTTH,
                        edtspinstructions: prescSpecInstrn,
                        nmrAmountTo: prescCurTotal,
                        txtgroupcode: revGroupCode,
                        txtpatientno: revPatientNo,
                        txtclinic: revTreatmentDate,
                        mdoctor: mdoctor,
                        txtreference: revAdmReference,
                    };

                    //DISPENSA Class holds the table List
                    let tableList = [];

                    $(".prescTbody").find("tr").each(function () {
                        let rowObject = {
                            PATIENTNO: $(this).find("td:eq(0)").text().trim(), // for serial No
                            STK_DESC: $(this).find("td:eq(1)").text().trim(), // for Description
                            UNITCOST: Number($(this).find("td:eq(2)").text().trim()), // for unit_cost
                            QTY_PR: Number($(this).find("td:eq(4)").text().trim()), // for Qty Reqd
                            UNIT: Number($(this).find("td:eq(5)").text().trim()), // for Unit
                            COST: Number($(this).find("td:eq(6)").text().trim()), // for Total Cost
                            CDOSE: Number($(this).find("td:eq(7)").text().trim()), // for cDose
                            CINTERVAL: $(this).find("td:eq(8)").text().trim(), // for cinterval
                            CDURATION: $(this).find("td:eq(9)").text().trim(), // for cduration
                            RX: $(this).find("td:eq(10)").text().trim(), // for WhenHow
                            SP_INST: $(this).find("td:eq(11)").text().trim(), // for sp_Instr
                            INTERVAL: Number($(this).find("td:eq(13)").text().trim()), // for interval
                            DURATION: Number($(this).find("td:eq(14)").text().trim()), // for duration
                            DOSE: Number($(this).find("td:eq(15)").text().trim()), // for Dose
                            CAPITATED: $(this).find("td:eq(16)").text().trim() == "YES" ? true : false,  // for isCapitated
                            POSTED: $(this).find("td:eq(17)").text().trim() == "YES" ? true : false,  // for posted
                            RECID: Number($(this).find("td:eq(18)").text().trim()), // for recID
                            unitpurvalue: Number($(this).find("td:eq(19)").text().trim()), // for unitpurvalue
                            STK_ITEM: $(this).find("td:eq(20)").text().trim(), // for stk_code
                            DIAG: $(this).find("td:eq(21)").text().trim(), // for Editted
                            GROUPCODE: $(this).find("td:eq(22)").text().trim(), // for ReqConsumables

                        };

                        tableList.push(rowObject)
                    });

                    if (confirm("Confirm to Write Prescriptions...")) {
                        $.ajax({
                            url: "/AJAX/prescWriteSaveBtnClick",
                            method: "POST",
                            data: { dataObject: dataObject, tableList: tableList },
                            success: function (data) {
                                if (data != null) {
                                    if (data.ActRslt != null) {
                                        alert(data.ActRslt);
                                    }

                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }

                                    if (data.SessionAddress_ != null) {
                                        $(".requestalert").val(data.SessionAddress_);
                                    }

                                    if (data.SessionMorning != null) {
                                        $(".inprtnstring").val(data.SessionMorning);
                                    }

                                    $(".prescWriteSaveBtn").prop({ disabled: data.btnFamilyGroup });

                                }
                            }
                        })

                    }

                }
            })

            $(".prescClearSelectBtn").on({
                click: function () {
                    let msection = $(".msection").val().trim();
                    let revAdmReference = $(".revAdmReference").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val();
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();

                    let totalRowNo = Number($(".prescTbody").find("tr:last()").find("td:eq(0)").text());

                    if (totalRowNo < 1) {
                        return;
                    }

                    if (confirm("Confirm to Remove Selections...")) {
                        $(".prescTbody").html("");

                        $.ajax({
                            url: "/AJAX/prescClearSelectBtnClick",
                            method: "POST",
                            data: {
                                msection: msection, revAdmReference: revAdmReference, revTreatmentDate: revTreatmentDate,
                                revGroupCode: revGroupCode, revPatientNo: revPatientNo
                            },
                            success: function (data) {
                                if (data != null) {
                                    let reports = data.REPORTS;
                                    let dispensas = data.DISPENSAS;

                                    if (reports != null) {
                                        if (reports.alertMessage != null) {
                                            alert(reports.alertMessage);
                                            return;
                                        }

                                        if (reports.dtregistered != null)
                                            $(".dtlastattend").val(reports.dtregistered);

                                    }

                                    if (dispensas != null) {

                                        if (dispensas.length > 0) {
                                            let rows = "";
                                            let currentTotal = 0;
                                            let sp_Inst = "";

                                            for (var i = 0; i < dispensas.length; i++) {
                                                let capitated = dispensas[i].CAPITATED ? "YES" : "NO";
                                                let posted = dispensas[i].POSTED || dispensas[i].CUMGV > 0 ? "YES" : "NO";

                                                currentTotal += Number(dispensas[i].COST);

                                                if (dispensas[i].SP_INST != null) {
                                                    sp_Inst += dispensas[i].SP_INST;
                                                }

                                                rows += "<tr>" +
                                                            "<td></td>" +
                                                            "<td>" + dispensas[i].STK_DESC + "</td>" +
                                                            "<td>" + dispensas[i].UNITCOST + "</td>" +
                                                            "<td></td>" +
                                                            "<td>" + dispensas[i].QTY_PR + "</td>" +
                                                            "<td>" + dispensas[i].UNIT + "</td>" +
                                                            "<td>" + dispensas[i].COST + "</td>" +
                                                            "<td>" + dispensas[i].CDOSE + "</td>" +
                                                            "<td>" + dispensas[i].CINTERVAL + "</td>" +
                                                            "<td>" + dispensas[i].CDURATION + "</td>" +
                                                            "<td>" + dispensas[i].RX + "</td>" +
                                                            "<td>" + dispensas[i].SP_INST + "</td>" +
                                                            "<td>" + dispensas[i].CUMGV + "</td>" +
                                                            "<td>" + dispensas[i].INTERVAL + "</td>" +
                                                            "<td>" + dispensas[i].DURATION + "</td>" +
                                                            "<td>" + dispensas[i].DOSE + "</td>" +
                                                            "<td>" + capitated + "</td>" +
                                                            "<td>" + posted + "</td>" +
                                                            "<td>" + dispensas[i].RECID + "</td>" +
                                                            "<td>" + dispensas[i].unitpurvalue + "</td>" +
                                                            "<td>" + dispensas[i].STK_ITEM + "</td>" +
                                                            "<td></td>" +
                                                            "<td></td>" +
                                                        "</tr>";
                                            }

                                            $(".prescTbody").html(rows);

                                            $(".prescCurTotal").val(currentTotal);
                                            $(".prescSpecInstrn").val(sp_Inst);

                                            //re-adjust the count values after adding rows
                                            let counter = 0;
                                            $(".prescTbody").find("tr").each(function () {
                                                $(this).find("td").eq(0).text(++counter);
                                            });
                                        }

                                    }

                                }

                            }
                        })

                    }


                }
            })

            $(".prescRoutineDrugs").on({
                focusout: function () {
                    let prescRoutineDrugs = $(".prescRoutineDrugs").val();
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();
                    let inpatient = $(".inpatient").val() == "true" ? true : false;
                    let prescCurTotal = Number($(".prescCurTotal").val());

                    if (prescRoutineDrugs != null) {
                        if(prescRoutineDrugs.trim() == ""){
                            return;
                        }

                        if (confirm(`Confirm to Load + ${prescRoutineDrugs} ...`)) {
                            $.ajax({
                                url: "/AJAX/prescRoutineDrugsFocusout",
                                method: "POST",
                                data: {
                                    prescRoutineDrugs: prescRoutineDrugs, revGroupCode: revGroupCode, revPatientNo: revPatientNo,
                                    inpatient: inpatient
                                },
                                success: function (data) {
                                    if (data != null) {

                                        let reports = data.REPORTS;
                                        let routDrgss = data.ROUTDRGSS;

                                        let xcost = 0; //global variable;

                                        if (reports != null) {
                                            xcost = reports.nmrbalance;

                                            $(".prescCurTotal").val(prescCurTotal + xcost);
                                        }

                                        if (routDrgss != null) {

                                            if (routDrgss.length > 0) {
                                                let rows = "";

                                                for (var i = 0; i < routDrgss.length; i++) {
                                                   
                                                    rows += "<tr>" +
                                                                "<td></td>" +
                                                                "<td>" + routDrgss[i].DESCRIPTION + "</td>" +
                                                                "<td>" + xcost.toFixed(2) + "</td>" +
                                                                "<td> 0 </td>" +
                                                                "<td>" + routDrgss[i].QTY + "</td>" +
                                                                "<td>" + routDrgss[i].UNIT + "</td>" +
                                                                "<td>" + routDrgss[i].COST + "</td>" +
                                                                "<td>" + routDrgss[i].CDOSE + "</td>" +
                                                                "<td>" + routDrgss[i].CINTERVAL + "</td>" +
                                                                "<td>" + routDrgss[i].CDURATION + "</td>" +
                                                                "<td>" + routDrgss[i].WHENHOW + "</td>" +
                                                                "<td> </td>" +
                                                                "<td> 0 </td>" +
                                                                "<td>" + routDrgss[i].INTERVAL + "</td>" +
                                                                "<td>" + routDrgss[i].DURATION + "</td>" +
                                                                "<td>" + routDrgss[i].DOSE + "</td>" +
                                                                "<td> NO </td>" +
                                                                "<td> NO </td>" +
                                                                "<td> 0 </td>" +
                                                                "<td> 0 </td>" +
                                                                "<td>" + routDrgss[i].DRUGS + "</td>" +
                                                            "</tr>";
                                                }

                                                $(".prescTbody").append(rows);

                                                //re-adjust the count values after adding rows
                                                let counter = 0;
                                                $(".prescTbody").find("tr").each(function () {
                                                    $(this).find("td:eq(0)").text(++counter);
                                                });

                                                $(".prescWriteSaveBtn").prop({ disabled: false });
                                            }

                                        }

                                    }
                                }
                            })

                        }
                    }
                }
            })

            $(".prescConvertOPDBtn").on({
                click: function () {
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val();
                    let mdoctor = $(".mdoctor").val();
                    let prescSpecInstrn = $(".prescSpecInstrn").val().trim();

                    let totalRowNo = Number($(".prescTbody").find("tr:last()").find("td:eq(0)").text());

                    if (totalRowNo < 1) {
                        alert("No Prescription for convert...");
                        return;
                    }

                    //DISPENSA Class holds the table List
                    let tableList = [];

                    $(".prescTbody").find("tr").each(function () {
                        let rowObject = {
                            PATIENTNO: $(this).find("td:eq(0)").text().trim(), // for serial No
                            STK_DESC: $(this).find("td:eq(1)").text().trim(), // for Description
                            UNITCOST: Number($(this).find("td:eq(2)").text().trim()), // for unit_cost
                            QTY_PR: Number($(this).find("td:eq(4)").text().trim()), // for Qty Reqd
                            UNIT: Number($(this).find("td:eq(5)").text().trim()), // for Unit
                            COST: Number($(this).find("td:eq(6)").text().trim()), // for Total Cost
                            CDOSE: Number($(this).find("td:eq(7)").text().trim()), // for cDose
                            CINTERVAL: $(this).find("td:eq(8)").text().trim(), // for cinterval
                            CDURATION: $(this).find("td:eq(9)").text().trim(), // for cduration
                            RX: $(this).find("td:eq(10)").text().trim(), // for WhenHow
                            SP_INST: $(this).find("td:eq(11)").text().trim(), // for sp_Instr
                            INTERVAL: Number($(this).find("td:eq(13)").text().trim()), // for interval
                            DURATION: Number($(this).find("td:eq(14)").text().trim()), // for duration
                            DOSE: Number($(this).find("td:eq(15)").text().trim()), // for Dose
                            CAPITATED: $(this).find("td:eq(16)").text().trim() == "YES" ? true : false,  // for isCapitated
                            POSTED: $(this).find("td:eq(17)").text().trim() == "YES" ? true : false,  // for posted
                            RECID: Number($(this).find("td:eq(18)").text().trim()), // for recID
                            unitpurvalue: Number($(this).find("td:eq(19)").text().trim()), // for unitpurvalue
                            STK_ITEM: $(this).find("td:eq(20)").text().trim(), // for stk_code
                            DIAG: $(this).find("td:eq(21)").text().trim(), // for Editted
                            GROUPCODE: $(this).find("td:eq(22)").text().trim(), // for ReqConsumables

                        };

                        tableList.push(rowObject)
                    });

                    if(confirm("Confirm to Convert This Precription to In-Patient \r\n NOTE :" +
                        " Patient must have been admitted and Admission Reference Available... CONTINUE ?"))
                    {
                        $.ajax({
                            url: "/AJAX/prescConvertOPDBtnClick",
                            method: "POST",
                            data: {
                                tableList: tableList, revGroupCode: revGroupCode, revPatientNo: revPatientNo,
                                revTreatmentDate: revTreatmentDate, mdoctor: mdoctor, prescSpecInstrn: prescSpecInstrn
                            },
                            success: function (data) {
                                if (data != null) {
                                    if (data.ActRslt != null) {
                                        alert(data.ActRslt);
                                    }

                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                    }
                                }
                            }
                        })

                    }
                }
            })

            $(".prescTipsBtn").on({
                click: function () {
                    let guideLinesText = "FOR SYRUP AND INJECTIONS : \r\n\r\n" +
                        "1.	Pharmacist or Store Keeper must specify quantity \r\n    " +
                        "   (Volume) in Pack/Bottle in 'Qty In Pack' on Stock \r\n   " +
                        "   Registration Screen. \r\n\r\n" +
                        "2.	Pharmacist or Store Keeper must specify cost per \r\n    " +
                        "   pack/bottle. \r\n\r\n" +
                        "3.	Doctors can prescribe in mls or mg and system can \r\n    " +
                        "   calculate number of pack/bottle and cost accordingly. \r\n    " +
                        "   E.G. 5mls x 8 x 7 (5mls, Eight Hrly for Seven Days) \r\n    " +
                        "   will amount to 105mls. If there are 60 mls in a \r\n    " +
                        "   pack/bottle, specified in Stock Registration,  \r\n " +
                        "   system will cost for two packs/bottles.\r\n    " +
                        "\r\n\r\n" +
                        "FOR TABS AND CAPS \r\n" +
                        "\r\n" +
                        "1.	Pharmacist or Store Keeper must include dosage (mg) \r\n    " +
                        "   as part of the Description of the Drug - EG. Amoxil Caps \r\n    " +
                        "   500mg. 'Qty in Pack' on Stock Registration Screen must \r\n    " +
                        "   be specified as '0' \r\n    " +
                        "\r\n\r\n" +
                        "2.	Pharmacist must specify cost per tab or cap in \r\n    " +
                        "   stock control system. The practice of costing drugs \r\n    " +
                        "   in pack of 10 or 20 should be avoided.\r\n    " +
                        "\r\n\r\n" +
                        "3. Doctors can prescribe in tabs or caps and system can \r\n    " +
                        "   calculate and cost per number of tabs or caps - \r\n    " +
                        "   EG. 1cap x 6 x 5 (One Cap, Six Hrly for Five Days) \r\n    " +
                        "   will amount to 20 caps and system will cost according \r\n    " +
                        "\r\n\r\n" +
                        "Note for Doctors : \r\n" +
                        "\r\n" +
                        "Multiple Asterix ('******') on Qty Required is an indication \r\n " +
                        "of invalid 'Qty In pack' specification in Stock Control Sys\r\n   " +
                        "The Cost that will be generated by system will be outragious.\r\n " +
                        "Doctors are therefore advised to indicate on 'Qty Reqd' Col, \r\n" +
                        "actual qty to deduct from stock in order for the system \r\n" +
                        "TO generate acurate cost TO the patient.";

                    $(".tipsText").val(guideLinesText);

                    //Show modal
                    $("#refLookUp24").click();

                }
            })

            $(".prescHistoryBtn").on({
                click: function () {
                    let revGroupCode = $(".revGroupCode").val().trim();
                    let revPatientNo = $(".revPatientNo").val().trim();
                    let revTreatmentDate = $(".revTreatmentDate").val();
                    
                    $.ajax({
                        url: "/AJAX/prescHistoryBtnClick",
                        method: "POST",
                        data: { revGroupCode: revGroupCode, revPatientNo: revPatientNo, revTreatmentDate: revTreatmentDate },
                        success: function (data) {
                            if (data != null) {
                               
                                let reports = data.REPORTS;
                                let dispensas = data.DISPENSAS;
                               
                                if (reports != null) {
                                    let Text = "PRESCRIPTION DETAILS for :" + reports.TXTPATIENTNAME + " " + reports.REPORT_TYPE1 +
                                        " - " + reports.REPORT_TYPE2 + " [Within 3 months uptill date of this Visit]";

                                    $(".historyHeader").text(Text);

                                    if (reports.alertMessage != null) {
                                        alert(reports.alertMessage);
                                        return;
                                    }

                                }

                                if (dispensas != null) {

                                    if (dispensas.length > 0) {
                                        let rows = "";

                                        for (var i = 0; i < dispensas.length; i++) {
                                            let transdate = formatDate1(dispensas[i].TRANS_DATE.toString());
                                            let type = dispensas[i].TYPE == "I" ? "In-Patient" : "OPD";

                                            rows += "<tr>" +
                                                        "<td></td>" +
                                                        "<td>" + dispensas[i].STK_DESC + "</td>" +
                                                        "<td>" + transdate + "</td>" +
                                                        "<td>" + dispensas[i].QTY_PR + "</td>" +
                                                        "<td>" + dispensas[i].CUMGV + "</td>" +
                                                        "<td>" + dispensas[i].CDOSE + "</td>" +
                                                        "<td>" + dispensas[i].CINTERVAL + "</td>" +
                                                        "<td>" + dispensas[i].CDURATION + "</td>" +
                                                        "<td>" + dispensas[i].DOCTOR + "</td>" +
                                                        "<td>" + dispensas[i].NURSE + "</td>" +
                                                        "<td>" + type + "</td>" +
                                                        "<td>" + dispensas[i].RX + "</td>" +
                                                    "</tr>";
                                        }

                                        $(".ppdTbody").html(rows);

                                        //re-adjust the count values after adding rows
                                        let counter = 0;
                                        $(".ppdTbody").find("tr").each(function () {
                                            $(this).find("td:eq(0)").text(++counter);
                                        });

                                    }

                                }

                                //Show modal
                                $("#refLookUp25").click();

                            }
                        }
                    })


                }
            })


//========================================================== Service Item =======================================================
            //OnLoad
            $(".siSubmitBtn").prop({ disabled: true });

            $(".siProcedure").on({
                focus: function () {
                    $(".siDeleteBtn").prop({ disabled: true });
                },

                change: function () {
                    let siProcedure = $(".siProcedure").val();
                    let siProcedureText = $(".siProcedure").find(`[value="${siProcedure}"]`).text().trim();

                    $(".siNewRec").val(true);

                    if (siProcedure == "" || siProcedure == null) {
                        return;
                    }

                    $(".siDesiredDesc").val(siProcedureText);

                    $(".siTbody").find("tr").each(function () {
                        let recNo = Number($(this).find("td").eq(0).text().trim());
                        let headerDesc = $(this).find("td").eq(1).text().trim();
                        let tariffCode = $(this).find("td").eq(2).text().trim();

                        if (tariffCode == siProcedure.trim()) {
                            $(".siNewRec").val(false);
                            $(".siDeleteBtn").prop({ disabled: false });
                            $(".siRecNo").val(recNo);
                            $(".siDesiredDesc").val(headerDesc);

                            return false;
                        }
                    });

                }
            })

            $(".siAddBtn").on({
                click: function () {
                    let siDesiredDesc = $(".siDesiredDesc").val().trim();
                    let siProcedure = $(".siProcedure").val();
                    let status = $(".siNewRec").val() == "true" ? "NewRec" : "OldRec";

                    if (siDesiredDesc == "" || siDesiredDesc == null || siProcedure == "" || siProcedure == null) {
                        $(".siProcedure").focus();
                        return;
                    }

                    let row = "<tr>" +
                                    "<td></td>" +
                                    "<td>" + siDesiredDesc + "</td>" +
                                    "<td>" + siProcedure + "</td>" +
                                    "<td>" + status + "</td>" +
                                "</tr>";

                    $(".siTbody").append(row);

                    $(".siProcedure").val("")
                    $(".siSubmitBtn").prop({ disabled: false });

                    //re-adjust the count values after adding rows
                    let counter = 0;
                    $(".siTbody").find("tr").each(function () {
                        $(this).find("td").eq(0).text(++counter);
                    });

                }
            })

            $(".siSubmitBtn").on({
                click: function () {
                    let totalRowNo = Number($(".siTbody").find("tr").last().find("td").eq(0).text());

                    if (totalRowNo > 0) {
                        //REPORTS Class holds the table data
                        let tableList = [];

                        $(".siTbody").find("tr").each(function () {
                            let rowObject = {
                                txtstaffno: $(this).find("td").eq(0).text().trim(),  // for Serial No
                                diagnosis: $(this).find("td").eq(1).text().trim(), // for description
                                cbotitle: $(this).find("td").eq(2).text().trim(), // for tariff Code
                                cboTribe: $(this).find("td").eq(3).text().trim(),  // for status
                            };

                            tableList.push(rowObject)
                        });

                        if (confirm("Confirm to Submit Records...")) {
                            $.ajax({
                                url: "/AJAX/siSubmitBtnClick",
                                method: "POST",
                                data: { tableList: tableList },
                                success: function (data) {
                                    if (data.REPORTS != null) {
                                        let reports = data.REPORTS;

                                        if (reports.alertMessage != null) {
                                            alert(reports.alertMessage);
                                            return;
                                        }

                                        if (reports.ActRslt != null) {
                                            alert(reports.ActRslt);
                                            $(".siSubmitBtn").prop({ disabled: true });
                                        }
                                    }

                                    if (data.DISPSERVS != null) {
                                        let dispservs = data.DISPSERVS;

                                        if (dispservs.length > 0) {
                                            let rows = "";

                                            for (var i = 0; i < dispservs.length; i++) {
                                                rows += "<tr>" +
                                                            "<td></td>" +
                                                            "<td>" + dispservs[i].DESCRIPTION + "</td>" +
                                                            "<td>" + dispservs[i].REFERENCE + "</td>" +
                                                            "<td> OldRec </td>" +
                                                        "</tr>";
                                            }

                                            $(".siTbody").html(rows);

                                            //re-adjust the count values after adding rows
                                            let counter = 0;
                                            $(".siTbody").find("tr").each(function () {
                                                $(this).find("td").eq(0).text(++counter);
                                            });
                                        }

                                    }
                                }
                            })
                        }

                    }
                }
            })

            $(".siTbody").find("tr").each(function () {
                $(this).click(function () {
                    $(this).parents("tbody").find("tr").each(function () {
                        $(this).find("[class='activeRow']").removeClass("activeRow");
                    })

                    $(this).find("td").eq(1).addClass("activeRow");

                    let recNo = $(this).find("td").eq(0).text().trim();
                    $(".siRecNo").val(recNo);
                });

                $(this).dblclick(function () {
                    let recNo = $(this).find("td").eq(0).text().trim();
                    let description = $(this).find("td").eq(1).text().trim();

                    $(".siRecNo").val(recNo);
                    $(".siDesiredDesc").val(description);
                    $(".siDeleteBtn").prop({ disabled: false });
                    $(".siAddBtn").prop({ disabled: false });
                    $(".siNewRec").val(false);
                });

            });

            $(".siDeleteBtn").on({
                click: function () {
                    let siRecNo = Number($(".siRecNo").val());
                    let headerDesc = "";
                    let tariffCode = "";
                    let status = "";

                    $(".siTbody").find("tr").each(function () {
                        let tableRowNo = Number($(this).find("td").eq(0).text().trim());

                        if(tableRowNo == siRecNo) {
                            headerDesc = $(this).find("td").eq(1).text().trim();
                            tariffCode = $(this).find("td").eq(2).text().trim();
                            status = $(this).find("td").eq(3).text().trim();
                        }
                    });

                    if (confirm(`Confirm to Delete.... ${headerDesc}`)) {
                        $.ajax({
                            url: "/AJAX/siDeleteBtnClick",
                            method: "POST",
                            data: { headerDesc: headerDesc, tariffCode: tariffCode, status: status },
                            success: function (data) {
                                if (data != null) {
                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        return;
                                    }

                                    if (data.ActRslt != null) {
                                        alert(data.ActRslt);
                                    }

                                    $(".siTbody").find("tr").each(function () {
                                        let tableRowNo = Number($(this).find("td").eq(0).text().trim());

                                        if (tableRowNo == siRecNo) {
                                            $(this).remove();
                                        }
                                    });

                                    $(".siDeleteBtn").prop({ disabled: true });

                                    //re-adjust the count values after deleting a row
                                    let counter = 0;
                                    $(".siTbody").find("tr").each(function () {
                                        $(this).find("td").eq(0).text(++counter);
                                    });
                                }

                            }
                        })
                    }

                }
            })


//===================================================== Change Bed / Room ========================================================
            //OnLoad
            $(".chkCBCurAdmin").prop({ checked: true });

            $(".cbAdmReference").on({
                focusout: function () {
                    let cbAdmReference = $(this).val().trim();

                    if (cbAdmReference != "") {
                        $.ajax({
                            url: "/AJAX/cbAdmReferenceFocusout",
                            method: "POST",
                            data: { cbAdmReference: cbAdmReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.txtreference != null)
                                        $(".cbAdmReference").val(data.txtreference);

                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        $(".cbAdmReference").val("");
                                        return;
                                    }

                                    if (data.mgrouphtype != null)
                                        $(".mgrouphtype").val(data.mgrouphtype);
                                    if (data.txtpatientno != null)
                                        $(".cbPatientNo").val(data.txtpatientno);
                                    if (data.txtgroupcode != null)
                                        $(".cbGroupCode").val(data.txtgroupcode);
                                    if (data.TXTPATIENTNAME != null)
                                        $(".cbName").val(data.TXTPATIENTNAME);
                                    if (data.txtstaffno != null)
                                        $(".cbOldRate").val(data.txtstaffno);
                                    if (data.txtRoom != null)
                                        $(".cbRoom1").val(data.txtRoom);
                                    if (data.txtBed != null)
                                        $(".cbBed1").val(data.txtBed);
                                    if (data.diagnosis != null)
                                        $(".cbDiagnosis").val(data.diagnosis);
                                    if (data.REPORT_TYPE1 != null)
                                        $(".cbDateOfAdm").val(data.REPORT_TYPE1);
                                    if (data.REPORT_TYPE2 != null)
                                        $(".cbDateOfDisch").val(data.REPORT_TYPE2);
                                    if (data.REPORT_TYPE3 != null)
                                        $(".lblDischarge").text(data.REPORT_TYPE3);
                                    if (data.mgrouphead != null)
                                        $(".mgrouphead").val(data.mgrouphead);
                                    if (data.txtaddress1 != null)
                                        $(".cbAddress").val(data.txtaddress1);
                                    if (data.txtsurname != null)
                                        $(".cbProfile").text(data.txtsurname);
                                    if (data.txtgrouphead != null)
                                        $(".cbGroupHead").val(data.txtgrouphead);
                                    if (data.txtdiscount != null)
                                        $(".cbCummulative").val(data.txtdiscount);
                                    if (data.combFacility != null)
                                        $(".cbFacilityLabel").val(data.combFacility);

                                }

                            }
                        })

                    }
                }
            })

            $(".cbFacility").on({
                change: function () {
                    let cbFacility = $(this).val();

                    if (cbFacility == "" || cbFacility == null) {
                        return;
                    }

                    $.ajax({
                        url: "/AJAX/cbFacilityFocusout",
                        method: "POST",
                        data: { cbFacility: cbFacility },
                        success: function (data) {
                            let admSpace = data;

                            if (admSpace.length > 0) {
                                let rows = "";

                                $(".cbRoom2").html("");
                                $(".cbBed2").html("");

                                $(".cbRoom2").append(`<option value=""></option>`);
                                $(".cbBed2").append(`<option value=""></option>`);

                                for (var i = 0; i < admSpace.length; i++) {
                                    let tranDate = admSpace[i].TRANS_DATE;
                                    let posted = admSpace[i].POSTED ? "YES" : "NO";
                                    let bookedDate = admSpace[i].BOOKEDDATE;
                                    let occupant = admSpace[i].OCCUPANT ? admSpace[i].OCCUPANT : admSpace[i].BOOKED ?
                                        `Booked for ${formatDate1(bookedDate)}` : "Available";

                                    rows += "<tr>" +
                                                "<td></td>" +
                                                "<td>" + admSpace[i].NAME + "</td>" +
                                                "<td>" + admSpace[i].ROOM + "</td>" +
                                                "<td>" + admSpace[i].BED + "</td>" +
                                                "<td>" + admSpace[i].RATE.toFixed(2) + "</td>" +
                                                "<td>" + occupant + "</td>" +
                                                "<td>" + admSpace[i].DESCRIPTION + "</td>" +
                                                "<td>" + admSpace[i].NURSINGCARE.toFixed(2) + "</td>" +
                                                 "<td>" + formatDate1(tranDate) + "</td>" +
                                                "<td> OLDREC </td>" +
                                                "<td>" + posted + "</td>" +
                                                "<td>" + admSpace[i].FACILITY + "</td>" +
                                                "<td>" + admSpace[i].RECID + "</td>" +
                                                "<td>" + admSpace[i].adm_deposit.toFixed(2) + "</td>" +
                                            "</tr>"

                                    if (occupant.trim() == "Available") {
                                        $(".cbRoom2").append(`<option value="${admSpace[i].ROOM}">${admSpace[i].ROOM}</option>`);
                                        $(".cbBed2").append(`<option value="${admSpace[i].BED}">${admSpace[i].BED}</option>`);
                                    }
                                }

                                $(".cbTbody").html(rows);

                                //re-adjust the count values after adding rows
                                let counter = 0;
                                $(".cbTbody").find("tr").each(function () {
                                    $(this).find("td").eq(0).text(++counter);
                                });
                            }
                        }
                    })

                }
            })

            $(".cbBed2").on({
                focusout: function () {
                    let cbBed2 = $(this).val();
                    let cbRoom2 = $(".cbRoom2").val();
                    let cbName = $(".cbName").val();
                    let cbFacility = $(".cbFacility").val();
                    let xfoundit = false;

                    if (cbBed2 == "" || cbBed2 == null || cbRoom2 == "" || cbRoom2 == null) {
                        return;
                    }


                    $(".cbTbody").find("tr").each(function () {
                        let room = $(this).find("td").eq(2).text().trim();
                        let bed = $(this).find("td").eq(3).text().trim();
                        let newRate = Number($(this).find("td").eq(4).text().trim());
                        let name = $(this).find("td").eq(5).text().trim();
                        let newPNC = Number($(this).find("td").eq(7).text().trim());
                        let date = new Date($(this).find("td").eq(8).text().trim());
                        let dateNow = new Date();

                        if (room == cbRoom2.trim() && bed == cbBed2.trim()) {
                            if (name != "Available" && name != cbName) {
                                alert(`Space is occupied by -> ${name}, ${cbFacility}`);
                                $(".cbBed2").val("");
                                $(".cbRoom2").val("");
                                return false;
                            } else if (name == "Booked" && date < dateNow) {
                                xfoundit = true;
                                $(".cbNewRate").val(newRate);
                                $(".cbNewPNC").val(newPNC);
                            }
                        }

                        if (!xfoundit) {
                            alert("Invalid Bed Space Selections");
                            $(".cbBed2").val("");
                            $(".cbRoom2").val("");
                            return false;
                        }

                        $(".cbSubmitBtn").prop({ disabled: false });

                    });
                }
            })

            $(".cbSubmitBtn").on({
                click: function () {
                    let cbFacility = $(".cbFacility").val();
                    let cbAdmReference = $(".cbAdmReference").val().trim();
                    let cbFacilityLabel = $(".cbFacilityLabel").val().trim();
                    let cbBed1 = $(".cbBed1").val().trim();
                    let cbBed2 = $(".cbBed2").val();
                    let cbRoom1 = $(".cbRoom1").val().trim();
                    let cbRoom2 = $(".cbRoom2").val();
                    let cbNewRate = $(".cbNewRate").val();
                    let cbName = $(".cbName").val();
                    let cbDate = $(".cbDate").val();

                    let dataList = {
                        txtreference: cbAdmReference,
                        combFacility: cbFacility,
                        txtRoom: cbRoom2,
                        txtBed: cbBed2,
                        txtcurrency: cbNewRate,
                        TXTPATIENTNAME: cbName,
                        REPORT_TYPE1: cbRoom1,
                        REPORT_TYPE2: cbBed1,
                        txtworkphone: cbDate
                    }

                    if (cbFacility == "" || cbFacility == null) {
                        alert("Facility is Required..");
                        $(".cbFacility").focus();
                    } else {
                        if (cbFacility.trim() == cbFacilityLabel && cbRoom1 == cbRoom2 && cbBed1 == cbBed2 || cbRoom1 == "" ||
                            cbRoom2 == "" || cbRoom2 == null || cbBed2 == "" || cbBed2 == null)
                        {
                            alert("NO CHANGE...");
                            $(".cbAdmReference").val("")
                            $(".cbAdmReference").focus()
                            return;
                        }

                        if (confirm("Confirm to Save Records...")) {
                            $.ajax({
                                url: "/AJAX/cbSubmitBtnClick",
                                method: "POST",
                                data: { dataList: dataList },
                                success: function (data) {
                                    if (data != null) {
                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                            return;
                                        }

                                        if (data.ActRslt != null) {
                                            alert(data.ActRslt);
                                            $(".cbAdmReference").val("")
                                            $(".cbAdmReference").focus()
                                            return;
                                        }
                                    }

                                }
                            })

                        }

                    }

                }
            })

            $(".cbDate").on({
                focusout: function () {
                    let cbDate = new Date($(this).val());
                    let todaysDate = new Date();
                    let dateNow = $(".dateNow").val();

                    if (cbDate > todaysDate) {
                        alert("Invalid Date Specification...");

                        $(".cbDate").val(dateNow);
                        $(".cbDate").focus();
                    }
                }
            })



//===================================================== Discharge ================================================================
            //OnLoad
            $(".chkdCurAdmin").prop({ checked: true });


            $(".dAdmReference").on({
                focusout: function () {
                    let dAdmReference = $(".dAdmReference").val().trim();

                    if (dAdmReference != "") {
                        $.ajax({
                            url: "/AJAX/dAdmReferenceFocusout",
                            method: "POST",
                            data: { dAdmReference: dAdmReference },
                            success: function (data) {
                                if (data != null) {
                                    if (data.txtreference != null) {
                                        $(".mreference").val(data.txtreference);
                                    }

                                    if (data.alertMessage != null) {
                                        alert(data.alertMessage);
                                        $(".dAdmReference").val("");
                                        return;
                                    }

                                    if (data.mgrouphtype != null)
                                        $(".mgrouphtype").val(data.mgrouphtype);
                                    if (data.txtpatientno != null)
                                        $(".dPatientNo").val(data.txtpatientno);
                                    if (data.txtgroupcode != null)
                                        $(".dGroupCode").val(data.txtgroupcode);
                                    if (data.TXTPATIENTNAME != null)
                                        $(".dName").val(data.TXTPATIENTNAME);
                                    if (data.txtRoom != null)
                                        $(".dRoom").val(data.txtRoom);
                                    if (data.txtBed != null)
                                        $(".dBed").val(data.txtBed);
                                    if (data.diagnosis != null)
                                        $(".dDiagnosis").val(data.diagnosis);
                                    if (data.REPORT_TYPE1 != null)
                                        $(".dDateOfAdm").val(data.REPORT_TYPE1);
                                    if (data.REPORT_TYPE2 != null)
                                        $(".dDateOfDisch").val(data.REPORT_TYPE2);
                                    if (data.cbotitle != null)
                                        $(".dLblDischarge").text(data.cbotitle);
                                    if (data.mgrouphead != null)
                                        $(".mgrouphead").val(data.mgrouphead);
                                    if (data.txtaddress1 != null)
                                        $(".dAddress").val(data.txtaddress1);
                                    if (data.txtsurname != null)
                                        $(".dProfile").text(data.txtsurname);
                                    if (data.txtgrouphead != null)
                                        $(".dGroupHead").val(data.txtgrouphead);
                                    if (data.txtdiscount != null)
                                        $(".dAccumCharge").val(data.txtdiscount);
                                    if (data.combFacility != null)
                                        $(".dFacility").val(data.combFacility);
                                    if (data.cbotype != null)
                                        $(".dRaiseBill").val(data.cbotype);

                                    if (data.ActRslt != null) {
                                        alert(data.ActRslt);
                                        $(".dAdmReference").val("");
                                        return;
                                    }
                                }

                            }
                        })

                    }

                }
            })

            $(".dDate").on({
                focusout: function () {
                    let dDate = new Date($(this).val());
                    let todaysDate = new Date();
                    let dateNow = $(".dateNow").val();
                    let timeNow = $(".timeNow").val();
                    let dAdmReference = $(".dAdmReference").val();
                    let dAccumCharge = Number($(".dAccumCharge").val());

                    if (dDate > todaysDate) {
                        alert("Invalid Date Specification...");

                        $(".dDate").val(dateNow);
                        $(".dDate").focus();
                        return;
                    }

                    $(".dTime").val(timeNow);

                    $.ajax({
                        url: "/AJAX/dDateFocusout",
                        method: "POST",
                        data: { dAdmReference: dAdmReference, dAccumCharge: dAccumCharge },
                        success: function (data) {
                            if (data != null) {
                                if (data.lblbillonaccount != null)
                                    $(".dLblProf").text(data.lblbillonaccount)

                                $(".dProfCharge").val(data.nmrbalance)

                            }

                        }
                    })

                }
            })

            $(".dSubmitBtn").on({
                click: function () {
                    let dDoctor = $(".dDoctor").val();
                    let dReason = $(".dReason").val();
                    let dAccumCharge = Number($(".dAccumCharge").val());
                    let dAdmReference = $(".dAdmReference").val();
                    let dProfCharge = Number($(".dProfCharge").val());
                    let dDate = $(".dDate").val();
                    let dRaiseBill = $(".dRaiseBill").val();
                    let dTime = $(".dTime").val().trim();
                    let dCommentText = $(".dCommentText").val().trim();
                    let dRoom = $(".dRoom").val();
                    let dBed = $(".dBed").val();
                    let dFacility = $(".dFacility").val();
                    let mreference = $(".mreference").val();

                    let dataList = {
                        txtdiscount: dAccumCharge,
                        txtreference: mreference,
                        nmrPayable: dProfCharge,
                        cbogenotype: dDate,
                        txtworkphone: dRaiseBill,
                        cbokinstate: dTime,
                        doctor: dDoctor,
                        edtallergies: dCommentText,
                        txtRoom: dRoom,
                        txtBed: dBed,
                        combFacility: dFacility,
                    }

                    if (dDoctor == "" || dDoctor == null) {
                        alert("Discharging Doctor and Nurse must be specified...");
                        $(".dDoctor").focus();
                        return;
                    } else if ( dReason == "" || dReason == null) {
                        alert("Discharging Reason must be specified...");
                        $(".dReason").focus();
                        return;
                    } else {
                        if (confirm("Confirm to Submit Details...")) {

                            $.ajax({
                                url: "/AJAX/dSubmitBtnClick",
                                method: "POST",
                                data: { dataList: dataList },
                                success: function (data) {
                                    if (data != null) {
                                        $(".dProfCharge").val(data.nmrPayable);

                                        if (data.cbotitle != null)
                                            $(".dLblDischarge").text(data.cbotitle);

                                        if (!data.chkApplyFilter) {
                                            $(".dSubmitBtn").prop({ disabled: true });
                                        }

                                        if (data.alertMessage != null) {
                                            alert(data.alertMessage);
                                        }

                                        if (data.ActRslt != null) {
                                            alert(data.ActRslt);
                                        }
                                    }
                                }
                            })
                        }

                    }

                }
            })

















            function formatDate1(str) {
                str = Number(str.slice(str.indexOf("(") + 1, str.indexOf(")")));
                var d = new Date(str);
                d = ('0' + d.getDate()).slice(-2) + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + d.getFullYear();
                return d;//returns 01-01-1970
            };
        })

    </script>
}